ARM GAS  /tmp/cc0u25wI.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_hal_flash.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c"
  19              		.section	.text.HAL_FLASH_EndOfOperationCallback,"ax",%progbits
  20              		.align	1
  21              		.weak	HAL_FLASH_EndOfOperationCallback
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_FLASH_EndOfOperationCallback:
  27              	.LVL0:
  28              	.LFB147:
   1:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
   2:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ******************************************************************************
   3:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @file    stm32h7xx_hal_flash.c
   4:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @author  MCD Application Team
   5:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief   FLASH HAL module driver.
   6:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          This file provides firmware functions to manage the following
   7:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          functionalities of the internal FLASH memory:
   8:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *           + Program operations functions
   9:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *           + Memory Control functions
  10:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *           + Peripheral Errors functions
  11:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
  12:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  @verbatim
  13:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ==============================================================================
  14:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                         ##### FLASH peripheral features #####
  15:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ==============================================================================
  16:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  17:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   [..] The Flash memory interface manages CPU AXI I-Code and D-Code accesses
  18:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        to the Flash memory. It implements the erase and program Flash memory operations
  19:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        and the read and write protection mechanisms.
  20:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  21:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   [..] The FLASH main features are:
  22:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Flash memory read operations
  23:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Flash memory program/erase operations
  24:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Read / write protections
  25:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Option bytes programming
  26:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Error code correction (ECC) : Data in flash are 266-bits word
  27:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****           (10 bits added per flash word)
  28:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  29:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                         ##### How to use this driver #####
  30:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ==============================================================================
ARM GAS  /tmp/cc0u25wI.s 			page 2


  31:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
  32:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       This driver provides functions and macros to configure and program the FLASH
  33:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       memory of all STM32H7xx devices.
  34:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  35:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (#) FLASH Memory IO Programming functions:
  36:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and
  37:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_Lock() functions
  38:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Program functions: 256-bit word only
  39:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) There Two modes of programming :
  40:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             (+++) Polling mode using HAL_FLASH_Program() function
  41:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             (+++) Interrupt mode using HAL_FLASH_Program_IT() function
  42:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  43:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (#) Interrupts and flags management functions :
  44:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Handle FLASH interrupts by calling HAL_FLASH_IRQHandler()
  45:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Callback functions are called when the flash operations are finished :
  46:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_EndOfOperationCallback() when everything is ok, otherwise
  47:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_OperationErrorCallback()
  48:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Get error flag status by calling HAL_FLASH_GetError()
  49:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  50:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (#) Option bytes management functions :
  51:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Lock and Unlock the option bytes using HAL_FLASH_OB_Unlock() and
  52:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_OB_Lock() functions
  53:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Launch the reload of the option bytes using HAL_FLASH_OB_Launch() function.
  54:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 In this case, a reset is generated
  55:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
  56:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       In addition to these functions, this driver includes a set of macros allowing
  57:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       to handle the following operations:
  58:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        (+) Set the latency
  59:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        (+) Enable/Disable the FLASH interrupts
  60:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        (+) Monitor the FLASH flags status
  61:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      [..]
  62:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     (@) For any Flash memory program operation (erase or program), the CPU clock frequency
  63:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         (HCLK) must be at least 1MHz.
  64:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     (@) The contents of the Flash memory are not guaranteed if a device reset occurs during
  65:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         a Flash memory operation.
  66:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     (@) The application can simultaneously request a read and a write operation through each AXI
  67:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         interface.
  68:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         As the Flash memory is divided into two independent banks, the embedded Flash
  69:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         memory interface can drive different operations at the same time on each bank. For
  70:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         example a read, write or erase operation can be executed on bank 1 while another read,
  71:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         write or erase operation is executed on bank 2.
  72:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  73:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  @endverbatim
  74:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ******************************************************************************
  75:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @attention
  76:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
  77:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * Copyright (c) 2017 STMicroelectronics.
  78:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * All rights reserved.
  79:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
  80:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  81:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * the root directory of this software component.
  82:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  83:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ******************************************************************************
  84:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
  85:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  86:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Includes ------------------------------------------------------------------*/
  87:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #include "stm32h7xx_hal.h"
ARM GAS  /tmp/cc0u25wI.s 			page 3


  88:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  89:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @addtogroup STM32H7xx_HAL_Driver
  90:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
  91:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
  92:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  93:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH FLASH
  94:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief FLASH HAL module driver
  95:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
  96:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
  97:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  98:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #ifdef HAL_FLASH_MODULE_ENABLED
  99:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 100:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private typedef -----------------------------------------------------------*/
 101:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private define ------------------------------------------------------------*/
 102:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @addtogroup FLASH_Private_Constants
 103:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 104:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 105:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #define FLASH_TIMEOUT_VALUE              50000U /* 50 s */
 106:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 107:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 108:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 109:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private macro -------------------------------------------------------------*/
 110:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private variables ---------------------------------------------------------*/
 111:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** FLASH_ProcessTypeDef pFlash;
 112:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private function prototypes -----------------------------------------------*/
 113:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Exported functions ---------------------------------------------------------*/
 114:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 115:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions FLASH Exported functions
 116:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 117:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 118:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 119:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group1 Programming operation functions
 120:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *  @brief   Programming operation functions
 121:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *
 122:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @verbatim
 123:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 124:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                   ##### Programming operation functions #####
 125:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 126:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
 127:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     This subsection provides a set of functions allowing to manage the FLASH
 128:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     program operations.
 129:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 130:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @endverbatim
 131:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 132:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 133:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 134:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 135:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Program a flash word at a specified address
 136:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address.
 137:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *         This parameter can be a value of @ref FLASH_Type_Program
 138:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  FlashAddress specifies the address to be programmed.
 139:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *         This parameter shall be aligned to the Flash word:
 140:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 256 bits for STM32H74x/5X devices (8x 32bits words)
 141:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 128 bits for STM32H7Ax/BX devices (4x 32bits words)
 142:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 256 bits for STM32H72x/3X devices (8x 32bits words)
 143:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  DataAddress specifies the address of data to be programmed.
 144:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *         This parameter shall be 32-bit aligned
ARM GAS  /tmp/cc0u25wI.s 			page 4


 145:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 146:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 147:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 148:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t FlashAddress, uint32_t DataAddre
 149:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 150:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 151:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t *)FlashAddress;
 152:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t*)DataAddress;
 153:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bank;
 154:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint8_t row_index = FLASH_NB_32BITWORD_IN_FLASHWORD;
 155:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 156:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check the parameters */
 157:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 158:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(FlashAddress));
 159:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 160:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Process Locked */
 161:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 162:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 163:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 164:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if((IS_FLASH_PROGRAM_ADDRESS_BANK1(FlashAddress)) || (IS_FLASH_PROGRAM_ADDRESS_OTP(FlashAddress))
 165:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 166:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(IS_FLASH_PROGRAM_ADDRESS_BANK1(FlashAddress))
 167:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 168:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 169:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_1;
 170:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 171:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 172:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else if(IS_FLASH_PROGRAM_ADDRESS_BANK2(FlashAddress))
 173:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 174:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_2;
 175:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 176:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 177:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 178:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 179:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 180:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 181:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 182:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Reset error code */
 183:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 184:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 185:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for last operation to be completed */
 186:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, bank);
 187:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 188:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(status == HAL_OK)
 189:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 190:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 191:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(bank == FLASH_BANK_1)
 192:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 193:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 194:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 195:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 196:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set OTP_PG bit */
 197:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 198:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 199:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 200:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 201:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
ARM GAS  /tmp/cc0u25wI.s 			page 5


 202:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set PG bit */
 203:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->CR1, FLASH_CR_PG);
 204:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 205:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 206:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 207:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 208:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set PG bit */
 209:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->CR2, FLASH_CR_PG);
 210:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 211:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else /* Single Bank */
 212:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 213:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 214:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 215:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set OTP_PG bit */
 216:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 217:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 218:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 219:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 220:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 221:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set PG bit */
 222:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->CR1, FLASH_CR_PG);
 223:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 224:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 225:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 226:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __ISB();
 227:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 228:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 229:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 230:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 231:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 232:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Program an OTP word (16 bits) */
 233:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       *(__IO uint16_t *)FlashAddress = *(__IO uint16_t*)DataAddress;
 234:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 235:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 236:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 237:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 238:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Program the flash word */
 239:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       do
 240:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 241:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         *dest_addr = *src_addr;
 242:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 243:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         src_addr++;
 244:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         row_index--;
 245:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      } while (row_index != 0U);
 246:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 247:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 248:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __ISB();
 249:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 250:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 251:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Wait for last operation to be completed */
 252:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, bank);
 253:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 254:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 255:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 256:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 257:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 258:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* If the program operation is completed, disable the OTP_PG */
ARM GAS  /tmp/cc0u25wI.s 			page 6


 259:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       CLEAR_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 260:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 261:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 262:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 263:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 264:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(bank == FLASH_BANK_1)
 265:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 266:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* If the program operation is completed, disable the PG */
 267:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         CLEAR_BIT(FLASH->CR1, FLASH_CR_PG);
 268:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 269:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 270:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 271:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* If the program operation is completed, disable the PG */
 272:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         CLEAR_BIT(FLASH->CR2, FLASH_CR_PG);
 273:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 274:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 275:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else /* Single Bank */
 276:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 277:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 278:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 279:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* If the program operation is completed, disable the OTP_PG */
 280:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       CLEAR_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 281:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 282:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 283:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 284:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 285:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* If the program operation is completed, disable the PG */
 286:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       CLEAR_BIT(FLASH->CR1, FLASH_CR_PG);
 287:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 288:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 289:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 290:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 291:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Process Unlocked */
 292:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __HAL_UNLOCK(&pFlash);
 293:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 294:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return status;
 295:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 296:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 297:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 298:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Program a flash word at a specified address with interrupt enabled.
 299:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address.
 300:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                      This parameter can be a value of @ref FLASH_Type_Program
 301:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  FlashAddress specifies the address to be programmed.
 302:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *         This parameter shall be aligned to the Flash word:
 303:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 256 bits for STM32H74x/5X devices (8x 32bits words)
 304:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 128 bits for STM32H7Ax/BX devices (4x 32bits words)
 305:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 256 bits for STM32H72x/3X devices (8x 32bits words)
 306:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  DataAddress specifies the address of data to be programmed.
 307:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *         This parameter shall be 32-bit aligned
 308:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 309:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 310:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 311:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program_IT(uint32_t TypeProgram, uint32_t FlashAddress, uint32_t DataAd
 312:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 313:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 314:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t*)FlashAddress;
 315:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t*)DataAddress;
ARM GAS  /tmp/cc0u25wI.s 			page 7


 316:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bank;
 317:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint8_t row_index = FLASH_NB_32BITWORD_IN_FLASHWORD;
 318:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 319:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check the parameters */
 320:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 321:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(FlashAddress));
 322:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 323:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Process Locked */
 324:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 325:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 326:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Reset error code */
 327:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 328:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 329:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 330:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if((IS_FLASH_PROGRAM_ADDRESS_BANK1(FlashAddress)) || (IS_FLASH_PROGRAM_ADDRESS_OTP(FlashAddress))
 331:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 332:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(IS_FLASH_PROGRAM_ADDRESS_BANK1(FlashAddress))
 333:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 334:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 335:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_1;
 336:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 337:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 338:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else if(IS_FLASH_PROGRAM_ADDRESS_BANK2(FlashAddress))
 339:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 340:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_2;
 341:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 342:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 343:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 344:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 345:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 346:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 347:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 348:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for last operation to be completed */
 349:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, bank);
 350:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 351:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (status != HAL_OK)
 352:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 353:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Process Unlocked */
 354:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 355:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 356:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 357:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 358:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.Address = FlashAddress;
 359:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 360:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 361:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(bank == FLASH_BANK_1)
 362:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 363:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set internal variables used by the IRQ handler */
 364:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM_BANK1;
 365:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 366:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 367:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 368:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 369:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set OTP_PG bit */
 370:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 371:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 372:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
ARM GAS  /tmp/cc0u25wI.s 			page 8


 373:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 374:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 375:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set PG bit */
 376:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->CR1, FLASH_CR_PG);
 377:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 378:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 379:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Enable End of Operation and Error interrupts for Bank 1 */
 380:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_CR_OPERRIE)
 381:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK1(FLASH_IT_EOP_BANK1     | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_
 382:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_B
 383:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 384:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK1(FLASH_IT_EOP_BANK1     | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_
 385:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1);
 386:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_CR_OPERRIE */
 387:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 388:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 389:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 390:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set internal variables used by the IRQ handler */
 391:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM_BANK2;
 392:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 393:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set PG bit */
 394:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->CR2, FLASH_CR_PG);
 395:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 396:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Enable End of Operation and Error interrupts for Bank2 */
 397:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_CR_OPERRIE)
 398:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK2(FLASH_IT_EOP_BANK2     | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_
 399:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2 | FLASH_IT_OPERR_B
 400:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 401:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK2(FLASH_IT_EOP_BANK2     | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_
 402:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2);
 403:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_CR_OPERRIE */
 404:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 405:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else /* Single Bank */
 406:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Set internal variables used by the IRQ handler */
 407:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM_BANK1;
 408:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 409:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 410:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 411:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 412:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set OTP_PG bit */
 413:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 414:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 415:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 416:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 417:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 418:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set PG bit */
 419:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->CR1, FLASH_CR_PG);
 420:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 421:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 422:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Enable End of Operation and Error interrupts for Bank 1 */
 423:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_CR_OPERRIE)
 424:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK1(FLASH_IT_EOP_BANK1     | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_
 425:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_B
 426:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 427:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK1(FLASH_IT_EOP_BANK1     | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_
 428:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1);
 429:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_CR_OPERRIE */
ARM GAS  /tmp/cc0u25wI.s 			page 9


 430:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 431:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 432:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __ISB();
 433:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 434:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 435:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 436:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 437:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 438:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Program an OTP word (16 bits) */
 439:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       *(__IO uint16_t *)FlashAddress = *(__IO uint16_t*)DataAddress;
 440:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 441:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 442:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 443:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 444:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Program the flash word */
 445:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       do
 446:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 447:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         *dest_addr = *src_addr;
 448:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 449:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         src_addr++;
 450:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         row_index--;
 451:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       } while (row_index != 0U);
 452:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 453:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 454:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __ISB();
 455:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 456:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 457:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 458:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return status;
 459:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 460:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 461:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 462:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief This function handles FLASH interrupt request.
 463:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval None
 464:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 465:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** void HAL_FLASH_IRQHandler(void)
 466:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 467:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t temp;
 468:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t errorflag;
 469:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   FLASH_ProcedureTypeDef procedure;
 470:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 471:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank1 End of Operation flag  */
 472:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG_BANK1(FLASH_SR_EOP) != RESET)
 473:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 474:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(pFlash.ProcedureOnGoing == FLASH_PROC_SECTERASE_BANK1)
 475:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 476:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Nb of sector to erased can be decreased */
 477:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.NbSectorsToErase--;
 478:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 479:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Check if there are still sectors to erase */
 480:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(pFlash.NbSectorsToErase != 0U)
 481:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 482:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Indicate user which sector has been erased */
 483:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Sector);
 484:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 485:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear bank 1 End of Operation pending bit */
 486:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
ARM GAS  /tmp/cc0u25wI.s 			page 10


 487:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 488:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Increment sector number */
 489:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector++;
 490:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 491:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_1, pFlash.VoltageForErase);
 492:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 493:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 494:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 495:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* No more sectors to Erase, user callback can be called */
 496:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Reset Sector and stop Erase sectors procedure */
 497:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector = 0xFFFFFFFFU;
 498:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 499:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 500:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 501:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Sector);
 502:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 503:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 504:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
 505:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 506:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 507:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 508:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 509:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       procedure = pFlash.ProcedureOnGoing;
 510:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 511:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((procedure == FLASH_PROC_MASSERASE_BANK1) || (procedure == FLASH_PROC_ALLBANK_MASSERASE))
 512:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 513:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* MassErase ended. Return the selected bank */
 514:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 515:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(FLASH_BANK_1);
 516:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 517:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else if(procedure == FLASH_PROC_PROGRAM_BANK1)
 518:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 519:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Program ended. Return the selected address */
 520:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 521:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Address);
 522:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 523:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 524:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 525:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Nothing to do */
 526:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 527:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 528:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((procedure != FLASH_PROC_SECTERASE_BANK2) && \
 529:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_MASSERASE_BANK2) && \
 530:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_PROGRAM_BANK2))
 531:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 532:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 533:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 534:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
 535:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 536:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 537:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 538:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 539:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 540:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  /* Check FLASH Bank2 End of Operation flag  */
 541:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG_BANK2(FLASH_SR_EOP) != RESET)
 542:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 543:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(pFlash.ProcedureOnGoing == FLASH_PROC_SECTERASE_BANK2)
ARM GAS  /tmp/cc0u25wI.s 			page 11


 544:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 545:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*Nb of sector to erased can be decreased*/
 546:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.NbSectorsToErase--;
 547:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 548:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Check if there are still sectors to erase*/
 549:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(pFlash.NbSectorsToErase != 0U)
 550:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 551:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Indicate user which sector has been erased*/
 552:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Sector);
 553:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 554:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear bank 2 End of Operation pending bit */
 555:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
 556:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 557:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Increment sector number*/
 558:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector++;
 559:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 560:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_2, pFlash.VoltageForErase);
 561:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 562:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 563:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 564:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* No more sectors to Erase, user callback can be called */
 565:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Reset Sector and stop Erase sectors procedure */
 566:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector = 0xFFFFFFFFU;
 567:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 568:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 569:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 570:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Sector);
 571:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 572:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 573:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
 574:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 575:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 576:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 577:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 578:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       procedure = pFlash.ProcedureOnGoing;
 579:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 580:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((procedure == FLASH_PROC_MASSERASE_BANK2) || (procedure == FLASH_PROC_ALLBANK_MASSERASE))
 581:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 582:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*MassErase ended. Return the selected bank*/
 583:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 584:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(FLASH_BANK_2);
 585:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 586:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else if(procedure == FLASH_PROC_PROGRAM_BANK2)
 587:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 588:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Program ended. Return the selected address */
 589:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 590:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Address);
 591:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 592:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 593:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 594:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Nothing to do */
 595:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 596:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 597:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((procedure != FLASH_PROC_SECTERASE_BANK1) && \
 598:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_MASSERASE_BANK1) && \
 599:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_PROGRAM_BANK1))
 600:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
ARM GAS  /tmp/cc0u25wI.s 			page 12


 601:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 602:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 603:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
 604:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 605:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 606:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 607:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 608:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 609:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank1 operation error flags */
 610:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_SR_OPERR)
 611:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR1 & (FLASH_FLAG_WRPERR_BANK1 | FLASH_FLAG_PGSERR_BANK1 | FLASH_FLAG_STRBERR_
 612:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                             FLASH_FLAG_INCERR_BANK1 | FLASH_FLAG_OPERR_BANK1);
 613:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 614:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR1 & (FLASH_FLAG_WRPERR_BANK1 | FLASH_FLAG_PGSERR_BANK1 | FLASH_FLAG_STRBERR_
 615:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                             FLASH_FLAG_INCERR_BANK1);
 616:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_SR_OPERR */
 617:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 618:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(errorflag != 0U)
 619:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 620:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Save the error code */
 621:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= errorflag;
 622:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 623:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear error programming flags */
 624:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG_BANK1(errorflag);
 625:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 626:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     procedure = pFlash.ProcedureOnGoing;
 627:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 628:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(procedure == FLASH_PROC_SECTERASE_BANK1)
 629:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 630:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Return the faulty sector */
 631:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Sector;
 632:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 633:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 634:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else if((procedure == FLASH_PROC_MASSERASE_BANK1) || (procedure == FLASH_PROC_ALLBANK_MASSERASE
 635:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 636:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Return the faulty bank */
 637:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = FLASH_BANK_1;
 638:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 639:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 640:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 641:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Return the faulty address */
 642:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Address;
 643:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 644:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 645:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Stop the procedure ongoing*/
 646:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 647:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 648:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* FLASH error interrupt user callback */
 649:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(temp);
 650:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 651:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 652:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 653:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank2 operation error flags */
 654:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_SR_OPERR)
 655:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR2 & ((FLASH_FLAG_WRPERR_BANK2 | FLASH_FLAG_PGSERR_BANK2 | FLASH_FLAG_STRBERR
 656:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                              FLASH_FLAG_INCERR_BANK2 | FLASH_FLAG_OPERR_BANK2) & 0x7FFFFFFFU);
 657:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
ARM GAS  /tmp/cc0u25wI.s 			page 13


 658:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR2 & ((FLASH_FLAG_WRPERR_BANK2 | FLASH_FLAG_PGSERR_BANK2 | FLASH_FLAG_STRBERR
 659:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                              FLASH_FLAG_INCERR_BANK2) & 0x7FFFFFFFU);
 660:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_SR_OPERR */
 661:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 662:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(errorflag != 0U)
 663:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 664:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Save the error code */
 665:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= (errorflag | 0x80000000U);
 666:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 667:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear error programming flags */
 668:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG_BANK2(errorflag);
 669:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 670:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     procedure = pFlash.ProcedureOnGoing;
 671:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 672:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(procedure== FLASH_PROC_SECTERASE_BANK2)
 673:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 674:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty sector*/
 675:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Sector;
 676:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 677:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 678:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else if((procedure == FLASH_PROC_MASSERASE_BANK2) || (procedure == FLASH_PROC_ALLBANK_MASSERASE
 679:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 680:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty bank*/
 681:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = FLASH_BANK_2;
 682:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 683:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 684:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 685:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty address*/
 686:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Address;
 687:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 688:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 689:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /*Stop the procedure ongoing*/
 690:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 691:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 692:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* FLASH error interrupt user callback */
 693:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(temp);
 694:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 695:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 696:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 697:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(pFlash.ProcedureOnGoing == FLASH_PROC_NONE)
 698:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 699:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_CR_OPERRIE)
 700:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Disable Bank1 Operation and Error source interrupt */
 701:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT_BANK1(FLASH_IT_EOP_BANK1    | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_BA
 702:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_BA
 703:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 704:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 705:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Disable Bank2 Operation and Error source interrupt */
 706:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT_BANK2(FLASH_IT_EOP_BANK2    | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_BA
 707:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2 | FLASH_IT_OPERR_BA
 708:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 709:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 710:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Disable Bank1 Operation and Error source interrupt */
 711:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT_BANK1(FLASH_IT_EOP_BANK1    | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_BA
 712:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1);
 713:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 714:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
ARM GAS  /tmp/cc0u25wI.s 			page 14


 715:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Disable Bank2 Operation and Error source interrupt */
 716:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT_BANK2(FLASH_IT_EOP_BANK2    | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_BA
 717:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2);
 718:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 719:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_CR_OPERRIE */
 720:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 721:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Process Unlocked */
 722:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 723:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 724:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 725:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 726:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 727:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  FLASH end of operation interrupt callback
 728:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 729:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                  Mass Erase: Bank number which has been requested to erase
 730:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                  Sectors Erase: Sector which has been erased
 731:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                    (if 0xFFFFFFFF, it means that all the selected sectors have been erased)
 732:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                  Program: Address which was selected for data program
 733:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval None
 734:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 735:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** __weak void HAL_FLASH_EndOfOperationCallback(uint32_t ReturnValue)
 736:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
  29              		.loc 1 736 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 737:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 738:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   UNUSED(ReturnValue);
  34              		.loc 1 738 3 view .LVU1
 739:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 740:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 741:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             the HAL_FLASH_EndOfOperationCallback could be implemented in the user file
 742:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****    */
 743:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
  35              		.loc 1 743 1 is_stmt 0 view .LVU2
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE147:
  40              		.section	.text.HAL_FLASH_OperationErrorCallback,"ax",%progbits
  41              		.align	1
  42              		.weak	HAL_FLASH_OperationErrorCallback
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  47              	HAL_FLASH_OperationErrorCallback:
  48              	.LVL1:
  49              	.LFB148:
 744:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 745:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 746:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  FLASH operation error interrupt callback
 747:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 748:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                 Mass Erase: Bank number which has been requested to erase
 749:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                 Sectors Erase: Sector number which returned an error
 750:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                 Program: Address which was selected for data program
 751:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval None
 752:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
ARM GAS  /tmp/cc0u25wI.s 			page 15


 753:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** __weak void HAL_FLASH_OperationErrorCallback(uint32_t ReturnValue)
 754:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
  50              		.loc 1 754 1 is_stmt 1 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
 755:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 756:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   UNUSED(ReturnValue);
  55              		.loc 1 756 3 view .LVU4
 757:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 758:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 759:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             the HAL_FLASH_OperationErrorCallback could be implemented in the user file
 760:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****    */
 761:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
  56              		.loc 1 761 1 is_stmt 0 view .LVU5
  57 0000 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE148:
  61              		.section	.text.HAL_FLASH_IRQHandler,"ax",%progbits
  62              		.align	1
  63              		.global	HAL_FLASH_IRQHandler
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  68              	HAL_FLASH_IRQHandler:
  69              	.LFB146:
 466:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t temp;
  70              		.loc 1 466 1 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74 0000 10B5     		push	{r4, lr}
  75              	.LCFI0:
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 4, -8
  78              		.cfi_offset 14, -4
 467:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t errorflag;
  79              		.loc 1 467 3 view .LVU7
 468:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   FLASH_ProcedureTypeDef procedure;
  80              		.loc 1 468 3 view .LVU8
 469:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  81              		.loc 1 469 3 view .LVU9
 472:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
  82              		.loc 1 472 3 view .LVU10
 472:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
  83              		.loc 1 472 6 is_stmt 0 view .LVU11
  84 0002 3D4B     		ldr	r3, .L19
  85 0004 1B69     		ldr	r3, [r3, #16]
 472:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
  86              		.loc 1 472 5 view .LVU12
  87 0006 13F4803F 		tst	r3, #65536
  88 000a 18D0     		beq	.L4
 474:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
  89              		.loc 1 474 5 is_stmt 1 view .LVU13
 474:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
  90              		.loc 1 474 14 is_stmt 0 view .LVU14
ARM GAS  /tmp/cc0u25wI.s 			page 16


  91 000c 3B4B     		ldr	r3, .L19+4
  92 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  93 0010 DBB2     		uxtb	r3, r3
 474:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
  94              		.loc 1 474 7 view .LVU15
  95 0012 012B     		cmp	r3, #1
  96 0014 29D0     		beq	.L15
 509:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  97              		.loc 1 509 7 is_stmt 1 view .LVU16
 509:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  98              		.loc 1 509 17 is_stmt 0 view .LVU17
  99 0016 394B     		ldr	r3, .L19+4
 100 0018 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 101 001a E4B2     		uxtb	r4, r4
 102              	.LVL2:
 511:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 103              		.loc 1 511 7 is_stmt 1 view .LVU18
 511:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 104              		.loc 1 511 9 is_stmt 0 view .LVU19
 105 001c 072C     		cmp	r4, #7
 106 001e 18BF     		it	ne
 107 0020 022C     		cmpne	r4, #2
 108 0022 47D0     		beq	.L16
 517:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 109              		.loc 1 517 12 is_stmt 1 view .LVU20
 517:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 110              		.loc 1 517 14 is_stmt 0 view .LVU21
 111 0024 032C     		cmp	r4, #3
 112 0026 49D0     		beq	.L17
 113              	.L8:
 526:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 114              		.loc 1 526 7 is_stmt 1 view .LVU22
 528:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_MASSERASE_BANK2) && \
 115              		.loc 1 528 7 view .LVU23
 529:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_PROGRAM_BANK2))
 116              		.loc 1 529 52 is_stmt 0 view .LVU24
 117 0028 043C     		subs	r4, r4, #4
 118              	.LVL3:
 529:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_PROGRAM_BANK2))
 119              		.loc 1 529 52 view .LVU25
 120 002a E4B2     		uxtb	r4, r4
 121              	.LVL4:
 528:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_MASSERASE_BANK2) && \
 122              		.loc 1 528 9 view .LVU26
 123 002c 022C     		cmp	r4, #2
 124 002e 06D9     		bls	.L4
 532:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 125              		.loc 1 532 9 is_stmt 1 view .LVU27
 532:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 126              		.loc 1 532 33 is_stmt 0 view .LVU28
 127 0030 324B     		ldr	r3, .L19+4
 128 0032 0022     		movs	r2, #0
 129 0034 1A70     		strb	r2, [r3]
 534:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 130              		.loc 1 534 9 is_stmt 1 view .LVU29
 131 0036 304B     		ldr	r3, .L19
 132 0038 4FF48032 		mov	r2, #65536
ARM GAS  /tmp/cc0u25wI.s 			page 17


 133 003c 5A61     		str	r2, [r3, #20]
 134              	.LVL5:
 135              	.L4:
 611:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                             FLASH_FLAG_INCERR_BANK1 | FLASH_FLAG_OPERR_BANK1);
 136              		.loc 1 611 3 view .LVU30
 611:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                             FLASH_FLAG_INCERR_BANK1 | FLASH_FLAG_OPERR_BANK1);
 137              		.loc 1 611 20 is_stmt 0 view .LVU31
 138 003e 2E4B     		ldr	r3, .L19
 139 0040 1B69     		ldr	r3, [r3, #16]
 140              	.LVL6:
 618:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 141              		.loc 1 618 3 is_stmt 1 view .LVU32
 618:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 142              		.loc 1 618 5 is_stmt 0 view .LVU33
 143 0042 13F4DC03 		ands	r3, r3, #7208960
 144              	.LVL7:
 618:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 145              		.loc 1 618 5 view .LVU34
 146 0046 48D0     		beq	.L9
 621:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 147              		.loc 1 621 5 is_stmt 1 view .LVU35
 621:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 148              		.loc 1 621 11 is_stmt 0 view .LVU36
 149 0048 2C4A     		ldr	r2, .L19+4
 150 004a 9169     		ldr	r1, [r2, #24]
 621:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 151              		.loc 1 621 22 view .LVU37
 152 004c 1943     		orrs	r1, r1, r3
 153 004e 9161     		str	r1, [r2, #24]
 624:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 154              		.loc 1 624 5 is_stmt 1 view .LVU38
 155 0050 2949     		ldr	r1, .L19
 156 0052 4B61     		str	r3, [r1, #20]
 626:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 157              		.loc 1 626 5 view .LVU39
 626:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 158              		.loc 1 626 15 is_stmt 0 view .LVU40
 159 0054 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 160              	.LVL8:
 626:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 161              		.loc 1 626 15 view .LVU41
 162 0056 DBB2     		uxtb	r3, r3
 163              	.LVL9:
 628:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 164              		.loc 1 628 5 is_stmt 1 view .LVU42
 628:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 165              		.loc 1 628 7 is_stmt 0 view .LVU43
 166 0058 012B     		cmp	r3, #1
 167 005a 34D0     		beq	.L18
 634:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 168              		.loc 1 634 10 is_stmt 1 view .LVU44
 634:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 169              		.loc 1 634 12 is_stmt 0 view .LVU45
 170 005c 072B     		cmp	r3, #7
 171 005e 18BF     		it	ne
 172 0060 022B     		cmpne	r3, #2
 173 0062 46D0     		beq	.L13
ARM GAS  /tmp/cc0u25wI.s 			page 18


 642:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 174              		.loc 1 642 7 is_stmt 1 view .LVU46
 642:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 175              		.loc 1 642 12 is_stmt 0 view .LVU47
 176 0064 254B     		ldr	r3, .L19+4
 177              	.LVL10:
 642:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 178              		.loc 1 642 12 view .LVU48
 179 0066 1869     		ldr	r0, [r3, #16]
 180              	.LVL11:
 642:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 181              		.loc 1 642 12 view .LVU49
 182 0068 32E0     		b	.L11
 183              	.LVL12:
 184              	.L15:
 477:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 185              		.loc 1 477 7 is_stmt 1 view .LVU50
 477:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 186              		.loc 1 477 13 is_stmt 0 view .LVU51
 187 006a 244B     		ldr	r3, .L19+4
 188 006c 5A68     		ldr	r2, [r3, #4]
 477:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 189              		.loc 1 477 30 view .LVU52
 190 006e 013A     		subs	r2, r2, #1
 191 0070 5A60     		str	r2, [r3, #4]
 480:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 192              		.loc 1 480 7 is_stmt 1 view .LVU53
 480:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 193              		.loc 1 480 16 is_stmt 0 view .LVU54
 194 0072 5B68     		ldr	r3, [r3, #4]
 480:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 195              		.loc 1 480 9 view .LVU55
 196 0074 83B1     		cbz	r3, .L6
 483:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 197              		.loc 1 483 9 is_stmt 1 view .LVU56
 483:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 198              		.loc 1 483 48 is_stmt 0 view .LVU57
 199 0076 214C     		ldr	r4, .L19+4
 200 0078 E068     		ldr	r0, [r4, #12]
 483:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 201              		.loc 1 483 9 view .LVU58
 202 007a FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 203              	.LVL13:
 486:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 204              		.loc 1 486 9 is_stmt 1 view .LVU59
 205 007e 1E4B     		ldr	r3, .L19
 206 0080 4FF48032 		mov	r2, #65536
 207 0084 5A61     		str	r2, [r3, #20]
 489:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 208              		.loc 1 489 9 view .LVU60
 489:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 209              		.loc 1 489 15 is_stmt 0 view .LVU61
 210 0086 E368     		ldr	r3, [r4, #12]
 489:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 211              		.loc 1 489 22 view .LVU62
 212 0088 0133     		adds	r3, r3, #1
 213 008a E360     		str	r3, [r4, #12]
ARM GAS  /tmp/cc0u25wI.s 			page 19


 490:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_1, pFlash.VoltageForErase);
 214              		.loc 1 490 9 is_stmt 1 view .LVU63
 490:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_1, pFlash.VoltageForErase);
 215              		.loc 1 490 14 is_stmt 0 view .LVU64
 216 008c E068     		ldr	r0, [r4, #12]
 217              	.LVL14:
 491:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 218              		.loc 1 491 9 is_stmt 1 view .LVU65
 491:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 219              		.loc 1 491 54 is_stmt 0 view .LVU66
 220 008e A268     		ldr	r2, [r4, #8]
 491:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 221              		.loc 1 491 9 view .LVU67
 222 0090 0121     		movs	r1, #1
 223 0092 FFF7FEFF 		bl	FLASH_Erase_Sector
 224              	.LVL15:
 491:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 225              		.loc 1 491 9 view .LVU68
 226 0096 D2E7     		b	.L4
 227              	.LVL16:
 228              	.L6:
 497:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 229              		.loc 1 497 9 is_stmt 1 view .LVU69
 497:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 230              		.loc 1 497 23 is_stmt 0 view .LVU70
 231 0098 184B     		ldr	r3, .L19+4
 232 009a 4FF0FF32 		mov	r2, #-1
 233 009e DA60     		str	r2, [r3, #12]
 498:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 234              		.loc 1 498 9 is_stmt 1 view .LVU71
 498:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 235              		.loc 1 498 33 is_stmt 0 view .LVU72
 236 00a0 0022     		movs	r2, #0
 237 00a2 1A70     		strb	r2, [r3]
 501:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 238              		.loc 1 501 9 is_stmt 1 view .LVU73
 501:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 239              		.loc 1 501 48 is_stmt 0 view .LVU74
 240 00a4 D868     		ldr	r0, [r3, #12]
 501:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 241              		.loc 1 501 9 view .LVU75
 242 00a6 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 243              	.LVL17:
 504:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 244              		.loc 1 504 9 is_stmt 1 view .LVU76
 245 00aa 134B     		ldr	r3, .L19
 246 00ac 4FF48032 		mov	r2, #65536
 247 00b0 5A61     		str	r2, [r3, #20]
 248 00b2 C4E7     		b	.L4
 249              	.LVL18:
 250              	.L16:
 515:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 251              		.loc 1 515 9 view .LVU77
 252 00b4 0120     		movs	r0, #1
 253 00b6 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 254              	.LVL19:
 255 00ba B5E7     		b	.L8
ARM GAS  /tmp/cc0u25wI.s 			page 20


 256              	.L17:
 521:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 257              		.loc 1 521 9 view .LVU78
 521:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 258              		.loc 1 521 48 is_stmt 0 view .LVU79
 259 00bc 0F4B     		ldr	r3, .L19+4
 260 00be 1869     		ldr	r0, [r3, #16]
 521:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 261              		.loc 1 521 9 view .LVU80
 262 00c0 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 263              	.LVL20:
 264 00c4 B0E7     		b	.L8
 265              	.LVL21:
 266              	.L18:
 631:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 267              		.loc 1 631 7 is_stmt 1 view .LVU81
 631:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 268              		.loc 1 631 12 is_stmt 0 view .LVU82
 269 00c6 1346     		mov	r3, r2
 270              	.LVL22:
 631:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 271              		.loc 1 631 12 view .LVU83
 272 00c8 D068     		ldr	r0, [r2, #12]
 273              	.LVL23:
 632:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 274              		.loc 1 632 7 is_stmt 1 view .LVU84
 632:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 275              		.loc 1 632 21 is_stmt 0 view .LVU85
 276 00ca 4FF0FF32 		mov	r2, #-1
 632:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 277              		.loc 1 632 21 view .LVU86
 278 00ce DA60     		str	r2, [r3, #12]
 279              	.LVL24:
 280              	.L11:
 646:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 281              		.loc 1 646 5 is_stmt 1 view .LVU87
 646:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 282              		.loc 1 646 29 is_stmt 0 view .LVU88
 283 00d0 0A4B     		ldr	r3, .L19+4
 646:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 284              		.loc 1 646 29 view .LVU89
 285 00d2 0022     		movs	r2, #0
 286 00d4 1A70     		strb	r2, [r3]
 287              	.LVL25:
 649:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 288              		.loc 1 649 5 is_stmt 1 view .LVU90
 289 00d6 FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 290              	.LVL26:
 291              	.L9:
 697:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 292              		.loc 1 697 3 view .LVU91
 697:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 293              		.loc 1 697 12 is_stmt 0 view .LVU92
 294 00da 084B     		ldr	r3, .L19+4
 295 00dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 697:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 296              		.loc 1 697 5 view .LVU93
ARM GAS  /tmp/cc0u25wI.s 			page 21


 297 00de 3BB9     		cbnz	r3, .L3
 701:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_BA
 298              		.loc 1 701 5 is_stmt 1 view .LVU94
 299 00e0 054A     		ldr	r2, .L19
 300 00e2 D368     		ldr	r3, [r2, #12]
 301 00e4 23F4DE03 		bic	r3, r3, #7274496
 302 00e8 D360     		str	r3, [r2, #12]
 722:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 303              		.loc 1 722 5 view .LVU95
 722:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 304              		.loc 1 722 5 view .LVU96
 305 00ea 044B     		ldr	r3, .L19+4
 306 00ec 0022     		movs	r2, #0
 307 00ee 1A75     		strb	r2, [r3, #20]
 722:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 308              		.loc 1 722 5 view .LVU97
 309              	.L3:
 724:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 310              		.loc 1 724 1 is_stmt 0 view .LVU98
 311 00f0 10BD     		pop	{r4, pc}
 312              	.LVL27:
 313              	.L13:
 637:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 314              		.loc 1 637 12 view .LVU99
 315 00f2 0120     		movs	r0, #1
 316 00f4 ECE7     		b	.L11
 317              	.L20:
 318 00f6 00BF     		.align	2
 319              	.L19:
 320 00f8 00200052 		.word	1375739904
 321 00fc 00000000 		.word	pFlash
 322              		.cfi_endproc
 323              	.LFE146:
 325              		.section	.text.HAL_FLASH_Unlock,"ax",%progbits
 326              		.align	1
 327              		.global	HAL_FLASH_Unlock
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 332              	HAL_FLASH_Unlock:
 333              	.LFB149:
 762:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 763:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 764:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 765:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 766:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 767:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group2 Peripheral Control functions
 768:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *  @brief   Management functions
 769:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *
 770:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @verbatim
 771:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 772:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                       ##### Peripheral Control functions #####
 773:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 774:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
 775:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     This subsection provides a set of functions allowing to control the FLASH
 776:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     memory operations.
 777:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
ARM GAS  /tmp/cc0u25wI.s 			page 22


 778:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @endverbatim
 779:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 780:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 781:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 782:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 783:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Unlock the FLASH control registers access
 784:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 785:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 786:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Unlock(void)
 787:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 334              		.loc 1 787 1 is_stmt 1 view -0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 788:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->CR1, FLASH_CR_LOCK) != 0U)
 339              		.loc 1 788 3 view .LVU101
 340              		.loc 1 788 6 is_stmt 0 view .LVU102
 341 0000 0A4B     		ldr	r3, .L25
 342 0002 DB68     		ldr	r3, [r3, #12]
 343              		.loc 1 788 5 view .LVU103
 344 0004 13F0010F 		tst	r3, #1
 345 0008 0BD0     		beq	.L23
 789:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 790:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Authorize the FLASH Bank1 Registers access */
 791:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR1, FLASH_KEY1);
 346              		.loc 1 791 5 is_stmt 1 view .LVU104
 347 000a 084B     		ldr	r3, .L25
 348 000c 084A     		ldr	r2, .L25+4
 349 000e 5A60     		str	r2, [r3, #4]
 792:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR1, FLASH_KEY2);
 350              		.loc 1 792 5 view .LVU105
 351 0010 02F18832 		add	r2, r2, #-2004318072
 352 0014 5A60     		str	r2, [r3, #4]
 793:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 794:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Verify Flash Bank1 is unlocked */
 795:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (READ_BIT(FLASH->CR1, FLASH_CR_LOCK) != 0U)
 353              		.loc 1 795 5 view .LVU106
 354              		.loc 1 795 9 is_stmt 0 view .LVU107
 355 0016 DB68     		ldr	r3, [r3, #12]
 356              		.loc 1 795 8 view .LVU108
 357 0018 13F0010F 		tst	r3, #1
 358 001c 03D1     		bne	.L24
 796:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 797:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
 798:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 799:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 800:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 801:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 802:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->CR2, FLASH_CR_LOCK) != 0U)
 803:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 804:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Authorize the FLASH Bank2 Registers access */
 805:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR2, FLASH_KEY1);
 806:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR2, FLASH_KEY2);
 807:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 808:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Verify Flash Bank2 is unlocked */
 809:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (READ_BIT(FLASH->CR2, FLASH_CR_LOCK) != 0U)
ARM GAS  /tmp/cc0u25wI.s 			page 23


 810:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 811:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
 812:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 813:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 814:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 815:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 816:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 359              		.loc 1 816 10 view .LVU109
 360 001e 0020     		movs	r0, #0
 361 0020 7047     		bx	lr
 362              	.L23:
 363 0022 0020     		movs	r0, #0
 364 0024 7047     		bx	lr
 365              	.L24:
 797:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 366              		.loc 1 797 14 view .LVU110
 367 0026 0120     		movs	r0, #1
 817:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 368              		.loc 1 817 1 view .LVU111
 369 0028 7047     		bx	lr
 370              	.L26:
 371 002a 00BF     		.align	2
 372              	.L25:
 373 002c 00200052 		.word	1375739904
 374 0030 23016745 		.word	1164378403
 375              		.cfi_endproc
 376              	.LFE149:
 378              		.section	.text.HAL_FLASH_Lock,"ax",%progbits
 379              		.align	1
 380              		.global	HAL_FLASH_Lock
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 385              	HAL_FLASH_Lock:
 386              	.LFB150:
 818:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 819:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 820:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Locks the FLASH control registers access
 821:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 822:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 823:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Lock(void)
 824:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 387              		.loc 1 824 1 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 825:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Bank1 Control Register access */
 826:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   SET_BIT(FLASH->CR1, FLASH_CR_LOCK);
 392              		.loc 1 826 3 view .LVU113
 393 0000 064B     		ldr	r3, .L30
 394 0002 DA68     		ldr	r2, [r3, #12]
 395 0004 42F00102 		orr	r2, r2, #1
 396 0008 DA60     		str	r2, [r3, #12]
 827:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 828:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Verify Flash Bank1 is locked */
 829:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (READ_BIT(FLASH->CR1, FLASH_CR_LOCK) == 0U)
ARM GAS  /tmp/cc0u25wI.s 			page 24


 397              		.loc 1 829 3 view .LVU114
 398              		.loc 1 829 7 is_stmt 0 view .LVU115
 399 000a DB68     		ldr	r3, [r3, #12]
 400              		.loc 1 829 6 view .LVU116
 401 000c 13F0010F 		tst	r3, #1
 402 0010 01D0     		beq	.L29
 830:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 831:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 832:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 833:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 834:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 835:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Bank2 Control Register access */
 836:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   SET_BIT(FLASH->CR2, FLASH_CR_LOCK);
 837:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 838:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Verify Flash Bank2 is locked */
 839:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (READ_BIT(FLASH->CR2, FLASH_CR_LOCK) == 0U)
 840:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 841:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 842:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 843:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 844:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 845:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 403              		.loc 1 845 10 view .LVU117
 404 0012 0020     		movs	r0, #0
 405 0014 7047     		bx	lr
 406              	.L29:
 831:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 407              		.loc 1 831 12 view .LVU118
 408 0016 0120     		movs	r0, #1
 846:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 409              		.loc 1 846 1 view .LVU119
 410 0018 7047     		bx	lr
 411              	.L31:
 412 001a 00BF     		.align	2
 413              	.L30:
 414 001c 00200052 		.word	1375739904
 415              		.cfi_endproc
 416              	.LFE150:
 418              		.section	.text.HAL_FLASH_OB_Unlock,"ax",%progbits
 419              		.align	1
 420              		.global	HAL_FLASH_OB_Unlock
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 425              	HAL_FLASH_OB_Unlock:
 426              	.LFB151:
 847:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 848:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 849:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Unlock the FLASH Option Control Registers access.
 850:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 851:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 852:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Unlock(void)
 853:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 427              		.loc 1 853 1 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc0u25wI.s 			page 25


 431              		@ link register save eliminated.
 854:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK) != 0U)
 432              		.loc 1 854 3 view .LVU121
 433              		.loc 1 854 6 is_stmt 0 view .LVU122
 434 0000 0A4B     		ldr	r3, .L36
 435 0002 9B69     		ldr	r3, [r3, #24]
 436              		.loc 1 854 5 view .LVU123
 437 0004 13F0010F 		tst	r3, #1
 438 0008 0BD0     		beq	.L34
 855:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 856:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Authorizes the Option Byte registers programming */
 857:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPT_KEY1);
 439              		.loc 1 857 5 is_stmt 1 view .LVU124
 440 000a 084B     		ldr	r3, .L36
 441 000c 084A     		ldr	r2, .L36+4
 442 000e 9A60     		str	r2, [r3, #8]
 858:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPT_KEY2);
 443              		.loc 1 858 5 view .LVU125
 444 0010 02F14432 		add	r2, r2, #1145324612
 445 0014 9A60     		str	r2, [r3, #8]
 859:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 860:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Verify that the Option Bytes are unlocked */
 861:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (READ_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK) != 0U)
 446              		.loc 1 861 5 view .LVU126
 447              		.loc 1 861 9 is_stmt 0 view .LVU127
 448 0016 9B69     		ldr	r3, [r3, #24]
 449              		.loc 1 861 8 view .LVU128
 450 0018 13F0010F 		tst	r3, #1
 451 001c 03D1     		bne	.L35
 862:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 863:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
 864:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 865:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 866:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 867:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 452              		.loc 1 867 10 view .LVU129
 453 001e 0020     		movs	r0, #0
 454 0020 7047     		bx	lr
 455              	.L34:
 456 0022 0020     		movs	r0, #0
 457 0024 7047     		bx	lr
 458              	.L35:
 863:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 459              		.loc 1 863 14 view .LVU130
 460 0026 0120     		movs	r0, #1
 868:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 461              		.loc 1 868 1 view .LVU131
 462 0028 7047     		bx	lr
 463              	.L37:
 464 002a 00BF     		.align	2
 465              	.L36:
 466 002c 00200052 		.word	1375739904
 467 0030 3B2A1908 		.word	135866939
 468              		.cfi_endproc
 469              	.LFE151:
 471              		.section	.text.HAL_FLASH_OB_Lock,"ax",%progbits
 472              		.align	1
ARM GAS  /tmp/cc0u25wI.s 			page 26


 473              		.global	HAL_FLASH_OB_Lock
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 478              	HAL_FLASH_OB_Lock:
 479              	.LFB152:
 869:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 870:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 871:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Lock the FLASH Option Control Registers access.
 872:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 873:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 874:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Lock(void)
 875:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 480              		.loc 1 875 1 is_stmt 1 view -0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 876:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 877:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   SET_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK);
 485              		.loc 1 877 3 view .LVU133
 486 0000 064B     		ldr	r3, .L41
 487 0002 9A69     		ldr	r2, [r3, #24]
 488 0004 42F00102 		orr	r2, r2, #1
 489 0008 9A61     		str	r2, [r3, #24]
 878:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 879:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Verify that the Option Bytes are locked */
 880:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (READ_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK) == 0U)
 490              		.loc 1 880 3 view .LVU134
 491              		.loc 1 880 7 is_stmt 0 view .LVU135
 492 000a 9B69     		ldr	r3, [r3, #24]
 493              		.loc 1 880 6 view .LVU136
 494 000c 13F0010F 		tst	r3, #1
 495 0010 01D0     		beq	.L40
 881:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 882:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 883:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 884:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 885:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 496              		.loc 1 885 10 view .LVU137
 497 0012 0020     		movs	r0, #0
 498 0014 7047     		bx	lr
 499              	.L40:
 882:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 500              		.loc 1 882 12 view .LVU138
 501 0016 0120     		movs	r0, #1
 886:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 502              		.loc 1 886 1 view .LVU139
 503 0018 7047     		bx	lr
 504              	.L42:
 505 001a 00BF     		.align	2
 506              	.L41:
 507 001c 00200052 		.word	1375739904
 508              		.cfi_endproc
 509              	.LFE152:
 511              		.section	.text.HAL_FLASH_GetError,"ax",%progbits
 512              		.align	1
ARM GAS  /tmp/cc0u25wI.s 			page 27


 513              		.global	HAL_FLASH_GetError
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 518              	HAL_FLASH_GetError:
 519              	.LFB154:
 887:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 888:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 889:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Launch the option bytes loading.
 890:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 891:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 892:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Launch(void)
 893:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 894:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 895:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 896:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for CRC computation to be completed */
 897:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (FLASH_CRC_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_1) != HAL_OK)
 898:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 899:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = HAL_ERROR;
 900:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 901:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 902:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else if (FLASH_CRC_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_2) != HAL_OK)
 903:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 904:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = HAL_ERROR;
 905:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 906:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 907:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 908:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 909:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = HAL_OK;
 910:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 911:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 912:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (status == HAL_OK)
 913:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 914:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Set OPTSTRT Bit */
 915:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     SET_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTSTART);
 916:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 917:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Wait for OB change operation to be completed */
 918:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = FLASH_OB_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 919:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 920:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 921:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return status;
 922:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 923:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 924:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 925:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 926:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 927:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 928:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group3 Peripheral State and Errors functions
 929:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *  @brief   Peripheral Errors functions
 930:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *
 931:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @verbatim
 932:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 933:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 ##### Peripheral Errors functions #####
 934:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 935:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
 936:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     This subsection permits to get in run-time Errors of the FLASH peripheral.
 937:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
ARM GAS  /tmp/cc0u25wI.s 			page 28


 938:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @endverbatim
 939:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 940:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 941:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 942:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 943:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Get the specific FLASH error flag.
 944:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_FLASH_ERRORCode The returned value can be:
 945:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_NONE       : No error set
 946:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 947:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_WRP_BANK1  : Write Protection Error on Bank 1
 948:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGS_BANK1  : Program Sequence Error on Bank 1
 949:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_STRB_BANK1 : Strobe Error on Bank 1
 950:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_INC_BANK1  : Inconsistency Error on Bank 1
 951:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OPE_BANK1  : Operation Error on Bank 1
 952:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDP_BANK1  : Read Protection Error on Bank 1
 953:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDS_BANK1  : Read Secured Error on Bank 1
 954:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_SNECC_BANK1: ECC Single Correction Error on Bank 1
 955:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_DBECC_BANK1: ECC Double Detection Error on Bank 1
 956:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_CRCRD_BANK1: CRC Read Error on Bank 1
 957:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 958:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_WRP_BANK2  : Write Protection Error on Bank 2
 959:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGS_BANK2  : Program Sequence Error on Bank 2
 960:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_STRB_BANK2 : Strobe Error on Bank 2
 961:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_INC_BANK2  : Inconsistency Error on Bank 2
 962:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OPE_BANK2  : Operation Error on Bank 2
 963:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDP_BANK2  : Read Protection Error on Bank 2
 964:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDS_BANK2  : Read Secured Error on Bank 2
 965:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_SNECC_BANK2: SNECC Error on Bank 2
 966:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_DBECC_BANK2: Double Detection ECC on Bank 2
 967:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_CRCRD_BANK2: CRC Read Error on Bank 2
 968:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** */
 969:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 970:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** uint32_t HAL_FLASH_GetError(void)
 971:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 520              		.loc 1 971 1 is_stmt 1 view -0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 972:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****    return pFlash.ErrorCode;
 525              		.loc 1 972 4 view .LVU141
 526              		.loc 1 972 17 is_stmt 0 view .LVU142
 527 0000 014B     		ldr	r3, .L44
 528 0002 9869     		ldr	r0, [r3, #24]
 973:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 529              		.loc 1 973 1 view .LVU143
 530 0004 7047     		bx	lr
 531              	.L45:
 532 0006 00BF     		.align	2
 533              	.L44:
 534 0008 00000000 		.word	pFlash
 535              		.cfi_endproc
 536              	.LFE154:
 538              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 539              		.align	1
 540              		.global	FLASH_WaitForLastOperation
 541              		.syntax unified
ARM GAS  /tmp/cc0u25wI.s 			page 29


 542              		.thumb
 543              		.thumb_func
 545              	FLASH_WaitForLastOperation:
 546              	.LVL28:
 547              	.LFB155:
 974:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 975:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 976:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 977:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 978:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 979:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 980:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 981:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 982:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 983:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private functions ---------------------------------------------------------*/
 984:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 985:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @addtogroup FLASH_Private_Functions
 986:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 987:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 988:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 989:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 990:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Wait for a FLASH operation to complete.
 991:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Timeout maximum flash operation timeout
 992:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Bank flash FLASH_BANK_1 or FLASH_BANK_2
 993:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 994:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 995:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout, uint32_t Bank)
 996:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 548              		.loc 1 996 1 is_stmt 1 view -0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              		.loc 1 996 1 is_stmt 0 view .LVU145
 553 0000 70B5     		push	{r4, r5, r6, lr}
 554              	.LCFI1:
 555              		.cfi_def_cfa_offset 16
 556              		.cfi_offset 4, -16
 557              		.cfi_offset 5, -12
 558              		.cfi_offset 6, -8
 559              		.cfi_offset 14, -4
 560 0002 0446     		mov	r4, r0
 561 0004 0D46     		mov	r5, r1
 997:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on QW flag to be reset.
 998:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      Even if the FLASH operation fails, the QW flag will be reset and an error
 999:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      flag will be set */
1000:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1001:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bsyflag = FLASH_FLAG_QW_BANK1;
 562              		.loc 1 1001 3 is_stmt 1 view .LVU146
 563              	.LVL29:
1002:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t errorflag = 0;
 564              		.loc 1 1002 3 view .LVU147
1003:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 565              		.loc 1 1003 3 view .LVU148
 566              		.loc 1 1003 24 is_stmt 0 view .LVU149
 567 0006 FFF7FEFF 		bl	HAL_GetTick
 568              	.LVL30:
 569              		.loc 1 1003 24 view .LVU150
ARM GAS  /tmp/cc0u25wI.s 			page 30


 570 000a 0646     		mov	r6, r0
 571              	.LVL31:
1004:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1005:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_BANK_EXCLUSIVE(Bank));
 572              		.loc 1 1005 3 is_stmt 1 view .LVU151
1006:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1007:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
1008:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1009:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (Bank == FLASH_BANK_2)
1010:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1011:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Select bsyflag depending on Bank */
1012:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bsyflag = FLASH_FLAG_QW_BANK2;
1013:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1014:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
1015:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1016:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   while(__HAL_FLASH_GET_FLAG(bsyflag))
 573              		.loc 1 1016 3 view .LVU152
 574              	.L48:
 575              		.loc 1 1016 9 view .LVU153
 576 000c 1B4B     		ldr	r3, .L62
 577 000e 1B69     		ldr	r3, [r3, #16]
 578 0010 13F00403 		ands	r3, r3, #4
 579 0014 0BD0     		beq	.L58
1017:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1018:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
 580              		.loc 1 1018 5 view .LVU154
 581              		.loc 1 1018 7 is_stmt 0 view .LVU155
 582 0016 B4F1FF3F 		cmp	r4, #-1
 583 001a F7D0     		beq	.L48
1019:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1020:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 584              		.loc 1 1020 7 is_stmt 1 view .LVU156
 585              		.loc 1 1020 12 is_stmt 0 view .LVU157
 586 001c FFF7FEFF 		bl	HAL_GetTick
 587              	.LVL32:
 588              		.loc 1 1020 26 view .LVU158
 589 0020 801B     		subs	r0, r0, r6
 590              		.loc 1 1020 9 view .LVU159
 591 0022 A042     		cmp	r0, r4
 592 0024 26D8     		bhi	.L53
 593              		.loc 1 1020 50 discriminator 1 view .LVU160
 594 0026 002C     		cmp	r4, #0
 595 0028 F0D1     		bne	.L48
1021:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
1022:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         return HAL_TIMEOUT;
 596              		.loc 1 1022 16 view .LVU161
 597 002a 0320     		movs	r0, #3
 598 002c 05E0     		b	.L49
 599              	.L58:
1023:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
1024:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1025:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1026:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1027:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Get Error Flags */
1028:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (Bank == FLASH_BANK_1)
 600              		.loc 1 1028 3 is_stmt 1 view .LVU162
 601              		.loc 1 1028 6 is_stmt 0 view .LVU163
ARM GAS  /tmp/cc0u25wI.s 			page 31


 602 002e 012D     		cmp	r5, #1
 603 0030 04D0     		beq	.L59
 604              	.LVL33:
 605              	.L51:
1029:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1030:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     errorflag = FLASH->SR1 & FLASH_FLAG_ALL_ERRORS_BANK1;
1031:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1032:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
1033:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
1034:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1035:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     errorflag = (FLASH->SR2 & FLASH_FLAG_ALL_ERRORS_BANK2) | 0x80000000U;
1036:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1037:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
1038:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1039:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* In case of error reported in Flash SR1 or SR2 register */
1040:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if((errorflag & 0x7FFFFFFFU) != 0U)
 606              		.loc 1 1040 3 is_stmt 1 view .LVU164
 607              		.loc 1 1040 5 is_stmt 0 view .LVU165
 608 0032 63B9     		cbnz	r3, .L60
1041:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1042:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /*Save the error code*/
1043:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= errorflag;
1044:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1045:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear error programming flags */
1046:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(errorflag);
1047:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1048:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
1049:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1050:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1051:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH End of Operation flag  */
1052:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(Bank == FLASH_BANK_1)
 609              		.loc 1 1052 3 is_stmt 1 view .LVU166
 610              		.loc 1 1052 5 is_stmt 0 view .LVU167
 611 0034 012D     		cmp	r5, #1
 612 0036 12D0     		beq	.L61
1053:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1054:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_EOP_BANK1))
1055:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1056:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear FLASH End of Operation pending bit */
1057:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
1058:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1059:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1060:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
1061:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
1062:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1063:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (__HAL_FLASH_GET_FLAG_BANK2(FLASH_FLAG_EOP_BANK2))
1064:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1065:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear FLASH End of Operation pending bit */
1066:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
1067:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1068:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1069:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
1070:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1071:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 613              		.loc 1 1071 10 view .LVU168
 614 0038 0020     		movs	r0, #0
 615              	.LVL34:
ARM GAS  /tmp/cc0u25wI.s 			page 32


 616              	.L49:
1072:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 617              		.loc 1 1072 1 view .LVU169
 618 003a 70BD     		pop	{r4, r5, r6, pc}
 619              	.LVL35:
 620              	.L59:
1030:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 621              		.loc 1 1030 5 is_stmt 1 view .LVU170
1030:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 622              		.loc 1 1030 22 is_stmt 0 view .LVU171
 623 003c 0F4B     		ldr	r3, .L62
 624 003e 1B69     		ldr	r3, [r3, #16]
1030:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 625              		.loc 1 1030 15 view .LVU172
 626 0040 23F06843 		bic	r3, r3, #-402653184
 627 0044 23F48013 		bic	r3, r3, #1048576
 628 0048 5B0C     		lsrs	r3, r3, #17
 629 004a 5B04     		lsls	r3, r3, #17
 630              	.LVL36:
1030:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 631              		.loc 1 1030 15 view .LVU173
 632 004c F1E7     		b	.L51
 633              	.L60:
1043:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 634              		.loc 1 1043 5 is_stmt 1 view .LVU174
1043:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 635              		.loc 1 1043 11 is_stmt 0 view .LVU175
 636 004e 0C49     		ldr	r1, .L62+4
 637 0050 8A69     		ldr	r2, [r1, #24]
1043:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 638              		.loc 1 1043 22 view .LVU176
 639 0052 1A43     		orrs	r2, r2, r3
 640 0054 8A61     		str	r2, [r1, #24]
1046:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 641              		.loc 1 1046 5 is_stmt 1 view .LVU177
 642 0056 094A     		ldr	r2, .L62
 643 0058 5361     		str	r3, [r2, #20]
1048:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 644              		.loc 1 1048 5 view .LVU178
1048:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 645              		.loc 1 1048 12 is_stmt 0 view .LVU179
 646 005a 0120     		movs	r0, #1
 647 005c EDE7     		b	.L49
 648              	.L61:
1054:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 649              		.loc 1 1054 5 is_stmt 1 view .LVU180
1054:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 650              		.loc 1 1054 9 is_stmt 0 view .LVU181
 651 005e 074B     		ldr	r3, .L62
 652              	.LVL37:
1054:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 653              		.loc 1 1054 9 view .LVU182
 654 0060 1B69     		ldr	r3, [r3, #16]
1054:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 655              		.loc 1 1054 8 view .LVU183
 656 0062 13F4803F 		tst	r3, #65536
 657 0066 07D0     		beq	.L56
ARM GAS  /tmp/cc0u25wI.s 			page 33


1057:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 658              		.loc 1 1057 7 is_stmt 1 view .LVU184
 659 0068 044B     		ldr	r3, .L62
 660 006a 4FF48032 		mov	r2, #65536
 661 006e 5A61     		str	r2, [r3, #20]
1071:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 662              		.loc 1 1071 10 is_stmt 0 view .LVU185
 663 0070 0020     		movs	r0, #0
 664 0072 E2E7     		b	.L49
 665              	.LVL38:
 666              	.L53:
1022:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 667              		.loc 1 1022 16 view .LVU186
 668 0074 0320     		movs	r0, #3
 669 0076 E0E7     		b	.L49
 670              	.LVL39:
 671              	.L56:
1071:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 672              		.loc 1 1071 10 view .LVU187
 673 0078 0020     		movs	r0, #0
 674 007a DEE7     		b	.L49
 675              	.L63:
 676              		.align	2
 677              	.L62:
 678 007c 00200052 		.word	1375739904
 679 0080 00000000 		.word	pFlash
 680              		.cfi_endproc
 681              	.LFE155:
 683              		.section	.text.HAL_FLASH_Program,"ax",%progbits
 684              		.align	1
 685              		.global	HAL_FLASH_Program
 686              		.syntax unified
 687              		.thumb
 688              		.thumb_func
 690              	HAL_FLASH_Program:
 691              	.LVL40:
 692              	.LFB144:
 149:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 693              		.loc 1 149 1 is_stmt 1 view -0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 149:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 697              		.loc 1 149 1 is_stmt 0 view .LVU189
 698 0000 38B5     		push	{r3, r4, r5, lr}
 699              	.LCFI2:
 700              		.cfi_def_cfa_offset 16
 701              		.cfi_offset 3, -16
 702              		.cfi_offset 4, -12
 703              		.cfi_offset 5, -8
 704              		.cfi_offset 14, -4
 150:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t *)FlashAddress;
 705              		.loc 1 150 3 is_stmt 1 view .LVU190
 151:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t*)DataAddress;
 706              		.loc 1 151 3 view .LVU191
 707              	.LVL41:
 152:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bank;
ARM GAS  /tmp/cc0u25wI.s 			page 34


 708              		.loc 1 152 3 view .LVU192
 153:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint8_t row_index = FLASH_NB_32BITWORD_IN_FLASHWORD;
 709              		.loc 1 153 3 view .LVU193
 154:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 710              		.loc 1 154 3 view .LVU194
 157:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(FlashAddress));
 711              		.loc 1 157 3 view .LVU195
 158:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 712              		.loc 1 158 3 view .LVU196
 161:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 713              		.loc 1 161 3 view .LVU197
 161:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 714              		.loc 1 161 3 view .LVU198
 715 0002 1F4B     		ldr	r3, .L72
 716 0004 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 717 0006 012B     		cmp	r3, #1
 718 0008 37D0     		beq	.L68
 719 000a 0D46     		mov	r5, r1
 720 000c 1446     		mov	r4, r2
 161:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 721              		.loc 1 161 3 discriminator 2 view .LVU199
 722 000e 1C4B     		ldr	r3, .L72
 723 0010 0122     		movs	r2, #1
 724              	.LVL42:
 161:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 725              		.loc 1 161 3 is_stmt 0 discriminator 2 view .LVU200
 726 0012 1A75     		strb	r2, [r3, #20]
 161:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 727              		.loc 1 161 3 is_stmt 1 discriminator 2 view .LVU201
 166:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 728              		.loc 1 166 3 discriminator 2 view .LVU202
 166:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 729              		.loc 1 166 6 is_stmt 0 discriminator 2 view .LVU203
 730 0014 01F17841 		add	r1, r1, #-134217728
 731              	.LVL43:
 166:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 732              		.loc 1 166 5 discriminator 2 view .LVU204
 733 0018 B1F5003F 		cmp	r1, #131072
 734 001c 01D3     		bcc	.L71
 179:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 735              		.loc 1 179 12 view .LVU205
 736 001e 0120     		movs	r0, #1
 737              	.LVL44:
 738              	.L65:
 295:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 739              		.loc 1 295 1 view .LVU206
 740 0020 38BD     		pop	{r3, r4, r5, pc}
 741              	.LVL45:
 742              	.L71:
 169:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 743              		.loc 1 169 5 is_stmt 1 view .LVU207
 183:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 744              		.loc 1 183 3 view .LVU208
 183:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 745              		.loc 1 183 20 is_stmt 0 view .LVU209
 746 0022 0022     		movs	r2, #0
 747 0024 9A61     		str	r2, [r3, #24]
ARM GAS  /tmp/cc0u25wI.s 			page 35


 186:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 748              		.loc 1 186 3 is_stmt 1 view .LVU210
 186:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 749              		.loc 1 186 12 is_stmt 0 view .LVU211
 750 0026 0121     		movs	r1, #1
 751 0028 4CF25030 		movw	r0, #50000
 752              	.LVL46:
 186:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 753              		.loc 1 186 12 view .LVU212
 754 002c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 755              	.LVL47:
 188:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 756              		.loc 1 188 3 is_stmt 1 view .LVU213
 188:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 757              		.loc 1 188 5 is_stmt 0 view .LVU214
 758 0030 F8B9     		cbnz	r0, .L66
 222:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 759              		.loc 1 222 9 is_stmt 1 view .LVU215
 760 0032 144A     		ldr	r2, .L72+4
 761 0034 D368     		ldr	r3, [r2, #12]
 762 0036 43F00203 		orr	r3, r3, #2
 763 003a D360     		str	r3, [r2, #12]
 226:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 764              		.loc 1 226 5 view .LVU216
 765              	.LBB18:
 766              	.LBI18:
 767              		.file 2 "lib/Drivers/CMSIS/Include/cmsis_gcc.h"
   1:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
ARM GAS  /tmp/cc0u25wI.s 			page 36


  31:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/cc0u25wI.s 			page 37


  88:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
ARM GAS  /tmp/cc0u25wI.s 			page 38


 145:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc0u25wI.s 			page 39


 202:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
ARM GAS  /tmp/cc0u25wI.s 			page 40


 259:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc0u25wI.s 			page 41


 316:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
ARM GAS  /tmp/cc0u25wI.s 			page 42


 373:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc0u25wI.s 			page 43


 430:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc0u25wI.s 			page 44


 487:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
ARM GAS  /tmp/cc0u25wI.s 			page 45


 544:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc0u25wI.s 			page 46


 601:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
ARM GAS  /tmp/cc0u25wI.s 			page 47


 658:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc0u25wI.s 			page 48


 715:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
ARM GAS  /tmp/cc0u25wI.s 			page 49


 772:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc0u25wI.s 			page 50


 829:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc0u25wI.s 			page 51


 886:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 768              		.loc 2 933 27 view .LVU217
 769              	.LBB19:
 934:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 770              		.loc 2 935 3 view .LVU218
 771              		.syntax unified
 772              	@ 935 "lib/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 773 003c BFF36F8F 		isb 0xF
 774              	@ 0 "" 2
ARM GAS  /tmp/cc0u25wI.s 			page 52


 775              		.thumb
 776              		.syntax unified
 777              	.LBE19:
 778              	.LBE18:
 227:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 779              		.loc 1 227 5 view .LVU219
 780              	.LBB20:
 781              	.LBI20:
 936:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 782              		.loc 2 944 27 view .LVU220
 783              	.LBB21:
 945:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 784              		.loc 2 946 3 view .LVU221
 785              		.syntax unified
 786              	@ 946 "lib/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 787 0040 BFF34F8F 		dsb 0xF
 788              	@ 0 "" 2
 789              		.thumb
 790              		.syntax unified
 791              	.LBE21:
 792              	.LBE20:
 154:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 793              		.loc 1 154 11 is_stmt 0 view .LVU222
 794 0044 0823     		movs	r3, #8
 795              	.LVL48:
 796              	.L67:
 239:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 797              		.loc 1 239 7 is_stmt 1 discriminator 1 view .LVU223
 241:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 798              		.loc 1 241 9 discriminator 1 view .LVU224
 241:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 799              		.loc 1 241 22 is_stmt 0 discriminator 1 view .LVU225
 800 0046 54F8042B 		ldr	r2, [r4], #4
 801              	.LVL49:
 241:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 802              		.loc 1 241 20 discriminator 1 view .LVU226
 803 004a 45F8042B 		str	r2, [r5], #4
 804              	.LVL50:
 242:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         src_addr++;
 805              		.loc 1 242 9 is_stmt 1 discriminator 1 view .LVU227
 243:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         row_index--;
 806              		.loc 1 243 9 discriminator 1 view .LVU228
 244:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      } while (row_index != 0U);
 807              		.loc 1 244 9 discriminator 1 view .LVU229
 244:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      } while (row_index != 0U);
 808              		.loc 1 244 18 is_stmt 0 discriminator 1 view .LVU230
 809 004e 013B     		subs	r3, r3, #1
 810              	.LVL51:
ARM GAS  /tmp/cc0u25wI.s 			page 53


 245:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 811              		.loc 1 245 25 is_stmt 1 discriminator 1 view .LVU231
 812 0050 13F0FF03 		ands	r3, r3, #255
 813              	.LVL52:
 245:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 814              		.loc 1 245 25 is_stmt 0 discriminator 1 view .LVU232
 815 0054 F7D1     		bne	.L67
 248:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 816              		.loc 1 248 5 is_stmt 1 view .LVU233
 817              	.LBB22:
 818              	.LBI22:
 933:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 819              		.loc 2 933 27 view .LVU234
 820              	.LBB23:
 935:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 821              		.loc 2 935 3 view .LVU235
 822              		.syntax unified
 823              	@ 935 "lib/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 824 0056 BFF36F8F 		isb 0xF
 825              	@ 0 "" 2
 826              		.thumb
 827              		.syntax unified
 828              	.LBE23:
 829              	.LBE22:
 249:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 830              		.loc 1 249 5 view .LVU236
 831              	.LBB24:
 832              	.LBI24:
 944:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833              		.loc 2 944 27 view .LVU237
 834              	.LBB25:
 835              		.loc 2 946 3 view .LVU238
 836              		.syntax unified
 837              	@ 946 "lib/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 838 005a BFF34F8F 		dsb 0xF
 839              	@ 0 "" 2
 840              		.thumb
 841              		.syntax unified
 842              	.LBE25:
 843              	.LBE24:
 252:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 844              		.loc 1 252 5 view .LVU239
 252:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 845              		.loc 1 252 14 is_stmt 0 view .LVU240
 846 005e 0121     		movs	r1, #1
 847 0060 4CF25030 		movw	r0, #50000
 848              	.LVL53:
 252:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 849              		.loc 1 252 14 view .LVU241
 850 0064 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 851              	.LVL54:
 286:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 852              		.loc 1 286 7 is_stmt 1 view .LVU242
 853 0068 064A     		ldr	r2, .L72+4
 854 006a D368     		ldr	r3, [r2, #12]
 855 006c 23F00203 		bic	r3, r3, #2
 856 0070 D360     		str	r3, [r2, #12]
ARM GAS  /tmp/cc0u25wI.s 			page 54


 857              	.LVL55:
 858              	.L66:
 292:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 859              		.loc 1 292 3 view .LVU243
 292:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 860              		.loc 1 292 3 view .LVU244
 861 0072 034B     		ldr	r3, .L72
 862 0074 0022     		movs	r2, #0
 863 0076 1A75     		strb	r2, [r3, #20]
 292:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 864              		.loc 1 292 3 view .LVU245
 294:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 865              		.loc 1 294 3 view .LVU246
 294:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 866              		.loc 1 294 10 is_stmt 0 view .LVU247
 867 0078 D2E7     		b	.L65
 868              	.LVL56:
 869              	.L68:
 161:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 870              		.loc 1 161 3 view .LVU248
 871 007a 0220     		movs	r0, #2
 872              	.LVL57:
 161:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 873              		.loc 1 161 3 view .LVU249
 874 007c D0E7     		b	.L65
 875              	.L73:
 876 007e 00BF     		.align	2
 877              	.L72:
 878 0080 00000000 		.word	pFlash
 879 0084 00200052 		.word	1375739904
 880              		.cfi_endproc
 881              	.LFE144:
 883              		.section	.text.HAL_FLASH_Program_IT,"ax",%progbits
 884              		.align	1
 885              		.global	HAL_FLASH_Program_IT
 886              		.syntax unified
 887              		.thumb
 888              		.thumb_func
 890              	HAL_FLASH_Program_IT:
 891              	.LVL58:
 892              	.LFB145:
 312:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 893              		.loc 1 312 1 is_stmt 1 view -0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 0
 896              		@ frame_needed = 0, uses_anonymous_args = 0
 313:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t*)FlashAddress;
 897              		.loc 1 313 3 view .LVU251
 314:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t*)DataAddress;
 898              		.loc 1 314 3 view .LVU252
 315:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bank;
 899              		.loc 1 315 3 view .LVU253
 316:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint8_t row_index = FLASH_NB_32BITWORD_IN_FLASHWORD;
 900              		.loc 1 316 3 view .LVU254
 317:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 901              		.loc 1 317 3 view .LVU255
 320:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(FlashAddress));
ARM GAS  /tmp/cc0u25wI.s 			page 55


 902              		.loc 1 320 3 view .LVU256
 321:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 903              		.loc 1 321 3 view .LVU257
 324:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 904              		.loc 1 324 3 view .LVU258
 324:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 905              		.loc 1 324 3 view .LVU259
 906 0000 1F4B     		ldr	r3, .L85
 907 0002 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 908 0004 012B     		cmp	r3, #1
 909 0006 38D0     		beq	.L78
 312:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 910              		.loc 1 312 1 is_stmt 0 discriminator 2 view .LVU260
 911 0008 70B5     		push	{r4, r5, r6, lr}
 912              	.LCFI3:
 913              		.cfi_def_cfa_offset 16
 914              		.cfi_offset 4, -16
 915              		.cfi_offset 5, -12
 916              		.cfi_offset 6, -8
 917              		.cfi_offset 14, -4
 918 000a 0D46     		mov	r5, r1
 919 000c 0E46     		mov	r6, r1
 920 000e 1446     		mov	r4, r2
 324:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 921              		.loc 1 324 3 is_stmt 1 discriminator 2 view .LVU261
 922 0010 1B4B     		ldr	r3, .L85
 923 0012 0122     		movs	r2, #1
 924              	.LVL59:
 324:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 925              		.loc 1 324 3 is_stmt 0 discriminator 2 view .LVU262
 926 0014 1A75     		strb	r2, [r3, #20]
 324:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 927              		.loc 1 324 3 is_stmt 1 discriminator 2 view .LVU263
 327:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 928              		.loc 1 327 3 discriminator 2 view .LVU264
 327:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 929              		.loc 1 327 20 is_stmt 0 discriminator 2 view .LVU265
 930 0016 0022     		movs	r2, #0
 931 0018 9A61     		str	r2, [r3, #24]
 332:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 932              		.loc 1 332 3 is_stmt 1 discriminator 2 view .LVU266
 332:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 933              		.loc 1 332 6 is_stmt 0 discriminator 2 view .LVU267
 934 001a 01F17843 		add	r3, r1, #-134217728
 332:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 935              		.loc 1 332 5 discriminator 2 view .LVU268
 936 001e B3F5003F 		cmp	r3, #131072
 937 0022 01D3     		bcc	.L84
 345:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 938              		.loc 1 345 12 view .LVU269
 939 0024 0120     		movs	r0, #1
 940              	.LVL60:
 941              	.L75:
 459:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 942              		.loc 1 459 1 view .LVU270
 943 0026 70BD     		pop	{r4, r5, r6, pc}
 944              	.LVL61:
ARM GAS  /tmp/cc0u25wI.s 			page 56


 945              	.L84:
 335:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 946              		.loc 1 335 5 is_stmt 1 view .LVU271
 349:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 947              		.loc 1 349 3 view .LVU272
 349:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 948              		.loc 1 349 12 is_stmt 0 view .LVU273
 949 0028 0121     		movs	r1, #1
 950              	.LVL62:
 349:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 951              		.loc 1 349 12 view .LVU274
 952 002a 4CF25030 		movw	r0, #50000
 953              	.LVL63:
 349:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 954              		.loc 1 349 12 view .LVU275
 955 002e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 956              	.LVL64:
 351:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 957              		.loc 1 351 3 is_stmt 1 view .LVU276
 351:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 958              		.loc 1 351 6 is_stmt 0 view .LVU277
 959 0032 18B1     		cbz	r0, .L76
 354:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 960              		.loc 1 354 5 is_stmt 1 view .LVU278
 354:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 961              		.loc 1 354 5 view .LVU279
 962 0034 124B     		ldr	r3, .L85
 963 0036 0022     		movs	r2, #0
 964 0038 1A75     		strb	r2, [r3, #20]
 354:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 965              		.loc 1 354 5 view .LVU280
 966 003a F4E7     		b	.L75
 967              	.L76:
 358:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 968              		.loc 1 358 5 view .LVU281
 358:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 969              		.loc 1 358 20 is_stmt 0 view .LVU282
 970 003c 104B     		ldr	r3, .L85
 971 003e 1D61     		str	r5, [r3, #16]
 407:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 972              		.loc 1 407 5 is_stmt 1 view .LVU283
 407:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 973              		.loc 1 407 29 is_stmt 0 view .LVU284
 974 0040 0322     		movs	r2, #3
 975 0042 1A70     		strb	r2, [r3]
 419:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 976              		.loc 1 419 7 is_stmt 1 view .LVU285
 977 0044 0F4B     		ldr	r3, .L85+4
 978 0046 DA68     		ldr	r2, [r3, #12]
 979 0048 42F00202 		orr	r2, r2, #2
 980 004c DA60     		str	r2, [r3, #12]
 424:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_B
 981              		.loc 1 424 7 view .LVU286
 982 004e DA68     		ldr	r2, [r3, #12]
 983 0050 42F4DE02 		orr	r2, r2, #7274496
 984 0054 DA60     		str	r2, [r3, #12]
 432:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
ARM GAS  /tmp/cc0u25wI.s 			page 57


 985              		.loc 1 432 5 view .LVU287
 986              	.LBB26:
 987              	.LBI26:
 933:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988              		.loc 2 933 27 view .LVU288
 989              	.LBB27:
 935:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 990              		.loc 2 935 3 view .LVU289
 991              		.syntax unified
 992              	@ 935 "lib/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 993 0056 BFF36F8F 		isb 0xF
 994              	@ 0 "" 2
 995              		.thumb
 996              		.syntax unified
 997              	.LBE27:
 998              	.LBE26:
 433:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 999              		.loc 1 433 5 view .LVU290
 1000              	.LBB28:
 1001              	.LBI28:
 944:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1002              		.loc 2 944 27 view .LVU291
 1003              	.LBB29:
 1004              		.loc 2 946 3 view .LVU292
 1005              		.syntax unified
 1006              	@ 946 "lib/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1007 005a BFF34F8F 		dsb 0xF
 1008              	@ 0 "" 2
 1009              		.thumb
 1010              		.syntax unified
 1011              	.LBE29:
 1012              	.LBE28:
 317:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1013              		.loc 1 317 11 is_stmt 0 view .LVU293
 1014 005e 0823     		movs	r3, #8
 1015              	.LVL65:
 1016              	.L77:
 445:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 1017              		.loc 1 445 7 is_stmt 1 discriminator 1 view .LVU294
 447:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 1018              		.loc 1 447 9 discriminator 1 view .LVU295
 447:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 1019              		.loc 1 447 22 is_stmt 0 discriminator 1 view .LVU296
 1020 0060 54F8042B 		ldr	r2, [r4], #4
 1021              	.LVL66:
 447:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 1022              		.loc 1 447 20 discriminator 1 view .LVU297
 1023 0064 46F8042B 		str	r2, [r6], #4
 1024              	.LVL67:
 448:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         src_addr++;
 1025              		.loc 1 448 9 is_stmt 1 discriminator 1 view .LVU298
 449:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         row_index--;
 1026              		.loc 1 449 9 discriminator 1 view .LVU299
 450:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       } while (row_index != 0U);
 1027              		.loc 1 450 9 discriminator 1 view .LVU300
 450:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       } while (row_index != 0U);
 1028              		.loc 1 450 18 is_stmt 0 discriminator 1 view .LVU301
ARM GAS  /tmp/cc0u25wI.s 			page 58


 1029 0068 013B     		subs	r3, r3, #1
 1030              	.LVL68:
 451:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1031              		.loc 1 451 26 is_stmt 1 discriminator 1 view .LVU302
 1032 006a 13F0FF03 		ands	r3, r3, #255
 1033              	.LVL69:
 451:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1034              		.loc 1 451 26 is_stmt 0 discriminator 1 view .LVU303
 1035 006e F7D1     		bne	.L77
 454:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 1036              		.loc 1 454 5 is_stmt 1 view .LVU304
 1037              	.LBB30:
 1038              	.LBI30:
 933:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1039              		.loc 2 933 27 view .LVU305
 1040              	.LBB31:
 935:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1041              		.loc 2 935 3 view .LVU306
 1042              		.syntax unified
 1043              	@ 935 "lib/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1044 0070 BFF36F8F 		isb 0xF
 1045              	@ 0 "" 2
 1046              		.thumb
 1047              		.syntax unified
 1048              	.LBE31:
 1049              	.LBE30:
 455:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1050              		.loc 1 455 5 view .LVU307
 1051              	.LBB32:
 1052              	.LBI32:
 944:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1053              		.loc 2 944 27 view .LVU308
 1054              	.LBB33:
 1055              		.loc 2 946 3 view .LVU309
 1056              		.syntax unified
 1057              	@ 946 "lib/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1058 0074 BFF34F8F 		dsb 0xF
 1059              	@ 0 "" 2
 947:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1060              		.loc 2 947 1 is_stmt 0 view .LVU310
 1061              		.thumb
 1062              		.syntax unified
 1063 0078 D5E7     		b	.L75
 1064              	.LVL70:
 1065              	.L78:
 1066              	.LCFI4:
 1067              		.cfi_def_cfa_offset 0
 1068              		.cfi_restore 4
 1069              		.cfi_restore 5
 1070              		.cfi_restore 6
 1071              		.cfi_restore 14
 1072              		.loc 2 947 1 view .LVU311
 1073              	.LBE33:
 1074              	.LBE32:
 324:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1075              		.loc 1 324 3 view .LVU312
 1076 007a 0220     		movs	r0, #2
ARM GAS  /tmp/cc0u25wI.s 			page 59


 1077              	.LVL71:
 459:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1078              		.loc 1 459 1 view .LVU313
 1079 007c 7047     		bx	lr
 1080              	.L86:
 1081 007e 00BF     		.align	2
 1082              	.L85:
 1083 0080 00000000 		.word	pFlash
 1084 0084 00200052 		.word	1375739904
 1085              		.cfi_endproc
 1086              	.LFE145:
 1088              		.section	.text.FLASH_OB_WaitForLastOperation,"ax",%progbits
 1089              		.align	1
 1090              		.global	FLASH_OB_WaitForLastOperation
 1091              		.syntax unified
 1092              		.thumb
 1093              		.thumb_func
 1095              	FLASH_OB_WaitForLastOperation:
 1096              	.LVL72:
 1097              	.LFB156:
1073:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1074:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
1075:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Wait for a FLASH Option Bytes change operation to complete.
1076:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Timeout maximum flash operation timeout
1077:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
1078:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
1079:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_OB_WaitForLastOperation(uint32_t Timeout)
1080:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 1098              		.loc 1 1080 1 is_stmt 1 view -0
 1099              		.cfi_startproc
 1100              		@ args = 0, pretend = 0, frame = 0
 1101              		@ frame_needed = 0, uses_anonymous_args = 0
 1102              		.loc 1 1080 1 is_stmt 0 view .LVU315
 1103 0000 38B5     		push	{r3, r4, r5, lr}
 1104              	.LCFI5:
 1105              		.cfi_def_cfa_offset 16
 1106              		.cfi_offset 3, -16
 1107              		.cfi_offset 4, -12
 1108              		.cfi_offset 5, -8
 1109              		.cfi_offset 14, -4
 1110 0002 0446     		mov	r4, r0
1081:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Get timeout */
1082:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 1111              		.loc 1 1082 3 is_stmt 1 view .LVU316
 1112              		.loc 1 1082 24 is_stmt 0 view .LVU317
 1113 0004 FFF7FEFF 		bl	HAL_GetTick
 1114              	.LVL73:
 1115              		.loc 1 1082 24 view .LVU318
 1116 0008 0546     		mov	r5, r0
 1117              	.LVL74:
1083:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1084:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for the FLASH Option Bytes change operation to complete by polling on OPT_BUSY flag to be
1085:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   while(READ_BIT(FLASH->OPTSR_CUR, FLASH_OPTSR_OPT_BUSY) != 0U)
 1118              		.loc 1 1085 3 is_stmt 1 view .LVU319
 1119              	.L89:
 1120              		.loc 1 1085 58 view .LVU320
 1121              		.loc 1 1085 9 is_stmt 0 view .LVU321
ARM GAS  /tmp/cc0u25wI.s 			page 60


 1122 000a 134B     		ldr	r3, .L98
 1123 000c DB69     		ldr	r3, [r3, #28]
 1124              		.loc 1 1085 58 view .LVU322
 1125 000e 13F0010F 		tst	r3, #1
 1126 0012 0BD0     		beq	.L96
1086:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1087:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
 1127              		.loc 1 1087 5 is_stmt 1 view .LVU323
 1128              		.loc 1 1087 7 is_stmt 0 view .LVU324
 1129 0014 B4F1FF3F 		cmp	r4, #-1
 1130 0018 F7D0     		beq	.L89
1088:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1089:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 1131              		.loc 1 1089 7 is_stmt 1 view .LVU325
 1132              		.loc 1 1089 12 is_stmt 0 view .LVU326
 1133 001a FFF7FEFF 		bl	HAL_GetTick
 1134              	.LVL75:
 1135              		.loc 1 1089 26 view .LVU327
 1136 001e 401B     		subs	r0, r0, r5
 1137              		.loc 1 1089 9 view .LVU328
 1138 0020 A042     		cmp	r0, r4
 1139 0022 16D8     		bhi	.L92
 1140              		.loc 1 1089 50 discriminator 1 view .LVU329
 1141 0024 002C     		cmp	r4, #0
 1142 0026 F0D1     		bne	.L89
1090:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
1091:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         return HAL_TIMEOUT;
 1143              		.loc 1 1091 16 view .LVU330
 1144 0028 0320     		movs	r0, #3
 1145 002a 05E0     		b	.L90
 1146              	.L96:
1092:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
1093:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1094:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1095:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1096:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check option byte change error */
1097:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->OPTSR_CUR, FLASH_OPTSR_OPTCHANGEERR) != 0U)
 1147              		.loc 1 1097 3 is_stmt 1 view .LVU331
 1148              		.loc 1 1097 6 is_stmt 0 view .LVU332
 1149 002c 0A4B     		ldr	r3, .L98
 1150 002e DB69     		ldr	r3, [r3, #28]
 1151              		.loc 1 1097 5 view .LVU333
 1152 0030 13F0804F 		tst	r3, #1073741824
 1153 0034 01D1     		bne	.L97
1098:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1099:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Save the error code */
1100:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= HAL_FLASH_ERROR_OB_CHANGE;
1101:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1102:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear the OB error flag */
1103:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     FLASH->OPTCCR |= FLASH_OPTCCR_CLR_OPTCHANGEERR;
1104:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1105:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
1106:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1107:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1108:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* If there is no error flag set */
1109:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 1154              		.loc 1 1109 10 view .LVU334
ARM GAS  /tmp/cc0u25wI.s 			page 61


 1155 0036 0020     		movs	r0, #0
 1156              	.L90:
1110:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1157              		.loc 1 1110 1 view .LVU335
 1158 0038 38BD     		pop	{r3, r4, r5, pc}
 1159              	.LVL76:
 1160              	.L97:
1100:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1161              		.loc 1 1100 5 is_stmt 1 view .LVU336
1100:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1162              		.loc 1 1100 11 is_stmt 0 view .LVU337
 1163 003a 084A     		ldr	r2, .L98+4
 1164 003c 9369     		ldr	r3, [r2, #24]
1100:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1165              		.loc 1 1100 22 view .LVU338
 1166 003e 43F08043 		orr	r3, r3, #1073741824
 1167 0042 9361     		str	r3, [r2, #24]
1103:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1168              		.loc 1 1103 5 is_stmt 1 view .LVU339
1103:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1169              		.loc 1 1103 10 is_stmt 0 view .LVU340
 1170 0044 044A     		ldr	r2, .L98
 1171 0046 536A     		ldr	r3, [r2, #36]
1103:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1172              		.loc 1 1103 19 view .LVU341
 1173 0048 43F08043 		orr	r3, r3, #1073741824
 1174 004c 5362     		str	r3, [r2, #36]
1105:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1175              		.loc 1 1105 5 is_stmt 1 view .LVU342
1105:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1176              		.loc 1 1105 12 is_stmt 0 view .LVU343
 1177 004e 0120     		movs	r0, #1
 1178 0050 F2E7     		b	.L90
 1179              	.L92:
1091:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 1180              		.loc 1 1091 16 view .LVU344
 1181 0052 0320     		movs	r0, #3
 1182 0054 F0E7     		b	.L90
 1183              	.L99:
 1184 0056 00BF     		.align	2
 1185              	.L98:
 1186 0058 00200052 		.word	1375739904
 1187 005c 00000000 		.word	pFlash
 1188              		.cfi_endproc
 1189              	.LFE156:
 1191              		.section	.text.FLASH_CRC_WaitForLastOperation,"ax",%progbits
 1192              		.align	1
 1193              		.global	FLASH_CRC_WaitForLastOperation
 1194              		.syntax unified
 1195              		.thumb
 1196              		.thumb_func
 1198              	FLASH_CRC_WaitForLastOperation:
 1199              	.LVL77:
 1200              	.LFB157:
1111:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1112:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
1113:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Wait for a FLASH CRC computation to complete.
ARM GAS  /tmp/cc0u25wI.s 			page 62


1114:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Timeout maximum flash operation timeout
1115:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Bank flash FLASH_BANK_1 or FLASH_BANK_2
1116:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
1117:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
1118:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_CRC_WaitForLastOperation(uint32_t Timeout, uint32_t Bank)
1119:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 1201              		.loc 1 1119 1 is_stmt 1 view -0
 1202              		.cfi_startproc
 1203              		@ args = 0, pretend = 0, frame = 0
 1204              		@ frame_needed = 0, uses_anonymous_args = 0
 1205              		.loc 1 1119 1 is_stmt 0 view .LVU346
 1206 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1207              	.LCFI6:
 1208              		.cfi_def_cfa_offset 24
 1209              		.cfi_offset 3, -24
 1210              		.cfi_offset 4, -20
 1211              		.cfi_offset 5, -16
 1212              		.cfi_offset 6, -12
 1213              		.cfi_offset 7, -8
 1214              		.cfi_offset 14, -4
 1215 0002 0446     		mov	r4, r0
 1216 0004 0E46     		mov	r6, r1
1120:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bsyflag;
 1217              		.loc 1 1120 3 is_stmt 1 view .LVU347
1121:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 1218              		.loc 1 1121 3 view .LVU348
 1219              		.loc 1 1121 24 is_stmt 0 view .LVU349
 1220 0006 FFF7FEFF 		bl	HAL_GetTick
 1221              	.LVL78:
 1222              		.loc 1 1121 24 view .LVU350
 1223 000a 0746     		mov	r7, r0
 1224              	.LVL79:
1122:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1123:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_BANK_EXCLUSIVE(Bank));
 1225              		.loc 1 1123 3 is_stmt 1 view .LVU351
1124:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1125:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Select bsyflag depending on Bank */
1126:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(Bank == FLASH_BANK_1)
 1226              		.loc 1 1126 3 view .LVU352
 1227              		.loc 1 1126 5 is_stmt 0 view .LVU353
 1228 000c 012E     		cmp	r6, #1
 1229 000e 11D0     		beq	.L101
1127:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1128:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bsyflag = FLASH_FLAG_CRC_BUSY_BANK1;
1129:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1130:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
1131:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1132:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bsyflag = FLASH_FLAG_CRC_BUSY_BANK2;
 1230              		.loc 1 1132 13 view .LVU354
 1231 0010 154D     		ldr	r5, .L115
 1232              	.LVL80:
 1233              	.L103:
1133:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1134:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1135:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for the FLASH CRC computation to complete by polling on CRC_BUSY flag to be reset */
1136:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   while(__HAL_FLASH_GET_FLAG(bsyflag))
 1234              		.loc 1 1136 9 is_stmt 1 view .LVU355
ARM GAS  /tmp/cc0u25wI.s 			page 63


 1235 0012 164B     		ldr	r3, .L115+4
 1236 0014 1B69     		ldr	r3, [r3, #16]
 1237 0016 35EA0303 		bics	r3, r5, r3
 1238 001a 0DD1     		bne	.L112
1137:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1138:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
 1239              		.loc 1 1138 5 view .LVU356
 1240              		.loc 1 1138 7 is_stmt 0 view .LVU357
 1241 001c B4F1FF3F 		cmp	r4, #-1
 1242 0020 F7D0     		beq	.L103
1139:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1140:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 1243              		.loc 1 1140 7 is_stmt 1 view .LVU358
 1244              		.loc 1 1140 12 is_stmt 0 view .LVU359
 1245 0022 FFF7FEFF 		bl	HAL_GetTick
 1246              	.LVL81:
 1247              		.loc 1 1140 26 view .LVU360
 1248 0026 C01B     		subs	r0, r0, r7
 1249              		.loc 1 1140 9 view .LVU361
 1250 0028 A042     		cmp	r0, r4
 1251 002a 1BD8     		bhi	.L107
 1252              		.loc 1 1140 50 discriminator 1 view .LVU362
 1253 002c 002C     		cmp	r4, #0
 1254 002e F0D1     		bne	.L103
1141:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
1142:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         return HAL_TIMEOUT;
 1255              		.loc 1 1142 16 view .LVU363
 1256 0030 0320     		movs	r0, #3
 1257 0032 04E0     		b	.L104
 1258              	.LVL82:
 1259              	.L101:
1128:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1260              		.loc 1 1128 13 view .LVU364
 1261 0034 0825     		movs	r5, #8
 1262 0036 ECE7     		b	.L103
 1263              	.LVL83:
 1264              	.L112:
1143:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
1144:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1145:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1146:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1147:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH CRC read error flag  */
1148:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(Bank == FLASH_BANK_1)
 1265              		.loc 1 1148 3 is_stmt 1 view .LVU365
 1266              		.loc 1 1148 5 is_stmt 0 view .LVU366
 1267 0038 012E     		cmp	r6, #1
 1268 003a 01D0     		beq	.L113
1149:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1150:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_CRCRDERR_BANK1))
1151:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1152:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Save the error code */
1153:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_CRCRD_BANK1;
1154:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1155:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear FLASH CRC read error pending bit */
1156:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_CRCRDERR_BANK1);
1157:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1158:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
ARM GAS  /tmp/cc0u25wI.s 			page 64


1159:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1160:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1161:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
1162:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
1163:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1164:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (__HAL_FLASH_GET_FLAG_BANK2(FLASH_FLAG_CRCRDERR_BANK2))
1165:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1166:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Save the error code */
1167:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_CRCRD_BANK2;
1168:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1169:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear FLASH CRC read error pending bit */
1170:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_CRCRDERR_BANK2);
1171:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1172:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
1173:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1174:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1175:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
1176:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1177:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* If there is no error flag set */
1178:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 1269              		.loc 1 1178 10 view .LVU367
 1270 003c 0020     		movs	r0, #0
 1271              	.L104:
1179:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1272              		.loc 1 1179 1 view .LVU368
 1273 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1274              	.LVL84:
 1275              	.L113:
1150:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1276              		.loc 1 1150 5 is_stmt 1 view .LVU369
1150:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1277              		.loc 1 1150 9 is_stmt 0 view .LVU370
 1278 0040 0A4B     		ldr	r3, .L115+4
 1279 0042 1B69     		ldr	r3, [r3, #16]
1150:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1280              		.loc 1 1150 8 view .LVU371
 1281 0044 13F0805F 		tst	r3, #268435456
 1282 0048 01D1     		bne	.L114
1178:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1283              		.loc 1 1178 10 view .LVU372
 1284 004a 0020     		movs	r0, #0
 1285 004c F7E7     		b	.L104
 1286              	.L114:
1153:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1287              		.loc 1 1153 7 is_stmt 1 view .LVU373
1153:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1288              		.loc 1 1153 13 is_stmt 0 view .LVU374
 1289 004e 084A     		ldr	r2, .L115+8
 1290 0050 9369     		ldr	r3, [r2, #24]
1153:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1291              		.loc 1 1153 24 view .LVU375
 1292 0052 43F08053 		orr	r3, r3, #268435456
 1293 0056 9361     		str	r3, [r2, #24]
1156:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1294              		.loc 1 1156 7 is_stmt 1 view .LVU376
 1295 0058 044B     		ldr	r3, .L115+4
 1296 005a 4FF08052 		mov	r2, #268435456
ARM GAS  /tmp/cc0u25wI.s 			page 65


 1297 005e 5A61     		str	r2, [r3, #20]
1158:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1298              		.loc 1 1158 7 view .LVU377
1158:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1299              		.loc 1 1158 14 is_stmt 0 view .LVU378
 1300 0060 0120     		movs	r0, #1
 1301 0062 ECE7     		b	.L104
 1302              	.L107:
1142:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 1303              		.loc 1 1142 16 view .LVU379
 1304 0064 0320     		movs	r0, #3
 1305 0066 EAE7     		b	.L104
 1306              	.L116:
 1307              		.align	2
 1308              	.L115:
 1309 0068 08000080 		.word	-2147483640
 1310 006c 00200052 		.word	1375739904
 1311 0070 00000000 		.word	pFlash
 1312              		.cfi_endproc
 1313              	.LFE157:
 1315              		.section	.text.HAL_FLASH_OB_Launch,"ax",%progbits
 1316              		.align	1
 1317              		.global	HAL_FLASH_OB_Launch
 1318              		.syntax unified
 1319              		.thumb
 1320              		.thumb_func
 1322              	HAL_FLASH_OB_Launch:
 1323              	.LFB153:
 893:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 1324              		.loc 1 893 1 is_stmt 1 view -0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
 1327              		@ frame_needed = 0, uses_anonymous_args = 0
 1328 0000 08B5     		push	{r3, lr}
 1329              	.LCFI7:
 1330              		.cfi_def_cfa_offset 8
 1331              		.cfi_offset 3, -8
 1332              		.cfi_offset 14, -4
 894:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1333              		.loc 1 894 3 view .LVU381
 897:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1334              		.loc 1 897 3 view .LVU382
 897:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1335              		.loc 1 897 7 is_stmt 0 view .LVU383
 1336 0002 0121     		movs	r1, #1
 1337 0004 4CF25030 		movw	r0, #50000
 1338 0008 FFF7FEFF 		bl	FLASH_CRC_WaitForLastOperation
 1339              	.LVL85:
 897:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1340              		.loc 1 897 6 view .LVU384
 1341 000c 08B1     		cbz	r0, .L121
 899:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1342              		.loc 1 899 12 view .LVU385
 1343 000e 0120     		movs	r0, #1
 1344              	.L118:
 1345              	.LVL86:
 921:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
ARM GAS  /tmp/cc0u25wI.s 			page 66


 1346              		.loc 1 921 3 is_stmt 1 view .LVU386
 922:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1347              		.loc 1 922 1 is_stmt 0 view .LVU387
 1348 0010 08BD     		pop	{r3, pc}
 1349              	.LVL87:
 1350              	.L121:
 909:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1351              		.loc 1 909 5 is_stmt 1 view .LVU388
 912:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1352              		.loc 1 912 3 view .LVU389
 915:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1353              		.loc 1 915 5 view .LVU390
 1354 0012 054A     		ldr	r2, .L122
 1355 0014 9369     		ldr	r3, [r2, #24]
 1356 0016 43F00203 		orr	r3, r3, #2
 1357 001a 9361     		str	r3, [r2, #24]
 918:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1358              		.loc 1 918 5 view .LVU391
 918:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1359              		.loc 1 918 14 is_stmt 0 view .LVU392
 1360 001c 4CF25030 		movw	r0, #50000
 1361 0020 FFF7FEFF 		bl	FLASH_OB_WaitForLastOperation
 1362              	.LVL88:
 918:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1363              		.loc 1 918 14 view .LVU393
 1364 0024 F4E7     		b	.L118
 1365              	.L123:
 1366 0026 00BF     		.align	2
 1367              	.L122:
 1368 0028 00200052 		.word	1375739904
 1369              		.cfi_endproc
 1370              	.LFE153:
 1372              		.global	pFlash
 1373              		.section	.bss.pFlash,"aw",%nobits
 1374              		.align	2
 1377              	pFlash:
 1378 0000 00000000 		.space	28
 1378      00000000 
 1378      00000000 
 1378      00000000 
 1378      00000000 
 1379              		.text
 1380              	.Letext0:
 1381              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1382              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1383              		.file 5 "lib/Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h750xx.h"
 1384              		.file 6 "lib/Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 1385              		.file 7 "lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1386              		.file 8 "lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 1387              		.file 9 "lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1388              		.file 10 "lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash_ex.h"
ARM GAS  /tmp/cc0u25wI.s 			page 67


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_flash.c
     /tmp/cc0u25wI.s:20     .text.HAL_FLASH_EndOfOperationCallback:0000000000000000 $t
     /tmp/cc0u25wI.s:26     .text.HAL_FLASH_EndOfOperationCallback:0000000000000000 HAL_FLASH_EndOfOperationCallback
     /tmp/cc0u25wI.s:41     .text.HAL_FLASH_OperationErrorCallback:0000000000000000 $t
     /tmp/cc0u25wI.s:47     .text.HAL_FLASH_OperationErrorCallback:0000000000000000 HAL_FLASH_OperationErrorCallback
     /tmp/cc0u25wI.s:62     .text.HAL_FLASH_IRQHandler:0000000000000000 $t
     /tmp/cc0u25wI.s:68     .text.HAL_FLASH_IRQHandler:0000000000000000 HAL_FLASH_IRQHandler
     /tmp/cc0u25wI.s:320    .text.HAL_FLASH_IRQHandler:00000000000000f8 $d
     /tmp/cc0u25wI.s:1377   .bss.pFlash:0000000000000000 pFlash
     /tmp/cc0u25wI.s:326    .text.HAL_FLASH_Unlock:0000000000000000 $t
     /tmp/cc0u25wI.s:332    .text.HAL_FLASH_Unlock:0000000000000000 HAL_FLASH_Unlock
     /tmp/cc0u25wI.s:373    .text.HAL_FLASH_Unlock:000000000000002c $d
     /tmp/cc0u25wI.s:379    .text.HAL_FLASH_Lock:0000000000000000 $t
     /tmp/cc0u25wI.s:385    .text.HAL_FLASH_Lock:0000000000000000 HAL_FLASH_Lock
     /tmp/cc0u25wI.s:414    .text.HAL_FLASH_Lock:000000000000001c $d
     /tmp/cc0u25wI.s:419    .text.HAL_FLASH_OB_Unlock:0000000000000000 $t
     /tmp/cc0u25wI.s:425    .text.HAL_FLASH_OB_Unlock:0000000000000000 HAL_FLASH_OB_Unlock
     /tmp/cc0u25wI.s:466    .text.HAL_FLASH_OB_Unlock:000000000000002c $d
     /tmp/cc0u25wI.s:472    .text.HAL_FLASH_OB_Lock:0000000000000000 $t
     /tmp/cc0u25wI.s:478    .text.HAL_FLASH_OB_Lock:0000000000000000 HAL_FLASH_OB_Lock
     /tmp/cc0u25wI.s:507    .text.HAL_FLASH_OB_Lock:000000000000001c $d
     /tmp/cc0u25wI.s:512    .text.HAL_FLASH_GetError:0000000000000000 $t
     /tmp/cc0u25wI.s:518    .text.HAL_FLASH_GetError:0000000000000000 HAL_FLASH_GetError
     /tmp/cc0u25wI.s:534    .text.HAL_FLASH_GetError:0000000000000008 $d
     /tmp/cc0u25wI.s:539    .text.FLASH_WaitForLastOperation:0000000000000000 $t
     /tmp/cc0u25wI.s:545    .text.FLASH_WaitForLastOperation:0000000000000000 FLASH_WaitForLastOperation
     /tmp/cc0u25wI.s:678    .text.FLASH_WaitForLastOperation:000000000000007c $d
     /tmp/cc0u25wI.s:684    .text.HAL_FLASH_Program:0000000000000000 $t
     /tmp/cc0u25wI.s:690    .text.HAL_FLASH_Program:0000000000000000 HAL_FLASH_Program
     /tmp/cc0u25wI.s:878    .text.HAL_FLASH_Program:0000000000000080 $d
     /tmp/cc0u25wI.s:884    .text.HAL_FLASH_Program_IT:0000000000000000 $t
     /tmp/cc0u25wI.s:890    .text.HAL_FLASH_Program_IT:0000000000000000 HAL_FLASH_Program_IT
     /tmp/cc0u25wI.s:1083   .text.HAL_FLASH_Program_IT:0000000000000080 $d
     /tmp/cc0u25wI.s:1089   .text.FLASH_OB_WaitForLastOperation:0000000000000000 $t
     /tmp/cc0u25wI.s:1095   .text.FLASH_OB_WaitForLastOperation:0000000000000000 FLASH_OB_WaitForLastOperation
     /tmp/cc0u25wI.s:1186   .text.FLASH_OB_WaitForLastOperation:0000000000000058 $d
     /tmp/cc0u25wI.s:1192   .text.FLASH_CRC_WaitForLastOperation:0000000000000000 $t
     /tmp/cc0u25wI.s:1198   .text.FLASH_CRC_WaitForLastOperation:0000000000000000 FLASH_CRC_WaitForLastOperation
     /tmp/cc0u25wI.s:1309   .text.FLASH_CRC_WaitForLastOperation:0000000000000068 $d
     /tmp/cc0u25wI.s:1316   .text.HAL_FLASH_OB_Launch:0000000000000000 $t
     /tmp/cc0u25wI.s:1322   .text.HAL_FLASH_OB_Launch:0000000000000000 HAL_FLASH_OB_Launch
     /tmp/cc0u25wI.s:1368   .text.HAL_FLASH_OB_Launch:0000000000000028 $d
     /tmp/cc0u25wI.s:1374   .bss.pFlash:0000000000000000 $d

UNDEFINED SYMBOLS
FLASH_Erase_Sector
HAL_GetTick
