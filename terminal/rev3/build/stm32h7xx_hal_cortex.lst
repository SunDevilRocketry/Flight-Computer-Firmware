ARM GAS  /tmp/cc3oKnwN.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_hal_cortex.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c"
  19              		.section	.text.__NVIC_EnableIRQ,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	__NVIC_EnableIRQ:
  26              	.LVL0:
  27              	.LFB106:
  28              		.file 2 "lib/Drivers/CMSIS/Include/core_cm7.h"
   1:lib/Drivers/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:lib/Drivers/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:lib/Drivers/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:lib/Drivers/CMSIS/Include/core_cm7.h ****  * @version  V5.1.1
   5:lib/Drivers/CMSIS/Include/core_cm7.h ****  * @date     28. March 2019
   6:lib/Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:lib/Drivers/CMSIS/Include/core_cm7.h **** /*
   8:lib/Drivers/CMSIS/Include/core_cm7.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:lib/Drivers/CMSIS/Include/core_cm7.h ****  *
  10:lib/Drivers/CMSIS/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:lib/Drivers/CMSIS/Include/core_cm7.h ****  *
  12:lib/Drivers/CMSIS/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:lib/Drivers/CMSIS/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:lib/Drivers/CMSIS/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:lib/Drivers/CMSIS/Include/core_cm7.h ****  *
  16:lib/Drivers/CMSIS/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:lib/Drivers/CMSIS/Include/core_cm7.h ****  *
  18:lib/Drivers/CMSIS/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:lib/Drivers/CMSIS/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:lib/Drivers/CMSIS/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:lib/Drivers/CMSIS/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:lib/Drivers/CMSIS/Include/core_cm7.h ****  * limitations under the License.
  23:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
  24:lib/Drivers/CMSIS/Include/core_cm7.h **** 
  25:lib/Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:lib/Drivers/CMSIS/Include/core_cm7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:lib/Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__clang__)
  28:lib/Drivers/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:lib/Drivers/CMSIS/Include/core_cm7.h **** #endif
  30:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 2


  31:lib/Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:lib/Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  33:lib/Drivers/CMSIS/Include/core_cm7.h **** 
  34:lib/Drivers/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  35:lib/Drivers/CMSIS/Include/core_cm7.h **** 
  36:lib/Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  37:lib/Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
  38:lib/Drivers/CMSIS/Include/core_cm7.h **** #endif
  39:lib/Drivers/CMSIS/Include/core_cm7.h **** 
  40:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
  41:lib/Drivers/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:lib/Drivers/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:lib/Drivers/CMSIS/Include/core_cm7.h **** 
  44:lib/Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:lib/Drivers/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:lib/Drivers/CMSIS/Include/core_cm7.h **** 
  47:lib/Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:lib/Drivers/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:lib/Drivers/CMSIS/Include/core_cm7.h **** 
  50:lib/Drivers/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:lib/Drivers/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
  53:lib/Drivers/CMSIS/Include/core_cm7.h **** 
  54:lib/Drivers/CMSIS/Include/core_cm7.h **** 
  55:lib/Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  56:lib/Drivers/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  57:lib/Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  58:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
  59:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
  61:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
  62:lib/Drivers/CMSIS/Include/core_cm7.h **** 
  63:lib/Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_version.h"
  64:lib/Drivers/CMSIS/Include/core_cm7.h **** 
  65:lib/Drivers/CMSIS/Include/core_cm7.h **** /* CMSIS CM7 definitions */
  66:lib/Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [31:1
  67:lib/Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( __CM_CMSIS_VERSION_SUB)                  /*!< \deprecated [15:0
  68:lib/Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  69:lib/Drivers/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< \deprecated CMSIS
  70:lib/Drivers/CMSIS/Include/core_cm7.h **** 
  71:lib/Drivers/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  72:lib/Drivers/CMSIS/Include/core_cm7.h **** 
  73:lib/Drivers/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:lib/Drivers/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:lib/Drivers/CMSIS/Include/core_cm7.h **** */
  76:lib/Drivers/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
  77:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  78:lib/Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:lib/Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  80:lib/Drivers/CMSIS/Include/core_cm7.h ****     #else
  81:lib/Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:lib/Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  83:lib/Drivers/CMSIS/Include/core_cm7.h ****     #endif
  84:lib/Drivers/CMSIS/Include/core_cm7.h ****   #else
  85:lib/Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  86:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
  87:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 3


  88:lib/Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARM_FP
  90:lib/Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:lib/Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  92:lib/Drivers/CMSIS/Include/core_cm7.h ****     #else
  93:lib/Drivers/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:lib/Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  95:lib/Drivers/CMSIS/Include/core_cm7.h ****     #endif
  96:lib/Drivers/CMSIS/Include/core_cm7.h ****   #else
  97:lib/Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  98:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
  99:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 100:lib/Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 101:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:lib/Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:lib/Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 104:lib/Drivers/CMSIS/Include/core_cm7.h ****     #else
 105:lib/Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:lib/Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 107:lib/Drivers/CMSIS/Include/core_cm7.h ****     #endif
 108:lib/Drivers/CMSIS/Include/core_cm7.h ****   #else
 109:lib/Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 110:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
 111:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 112:lib/Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 113:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 114:lib/Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:lib/Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 116:lib/Drivers/CMSIS/Include/core_cm7.h ****     #else
 117:lib/Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:lib/Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 119:lib/Drivers/CMSIS/Include/core_cm7.h ****     #endif
 120:lib/Drivers/CMSIS/Include/core_cm7.h ****   #else
 121:lib/Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 122:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
 123:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 124:lib/Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 125:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 126:lib/Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:lib/Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:lib/Drivers/CMSIS/Include/core_cm7.h ****     #else
 129:lib/Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:lib/Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:lib/Drivers/CMSIS/Include/core_cm7.h ****     #endif
 132:lib/Drivers/CMSIS/Include/core_cm7.h ****   #else
 133:lib/Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 134:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
 135:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 136:lib/Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 137:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 138:lib/Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:lib/Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:lib/Drivers/CMSIS/Include/core_cm7.h ****     #else
 141:lib/Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:lib/Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 143:lib/Drivers/CMSIS/Include/core_cm7.h ****     #endif
 144:lib/Drivers/CMSIS/Include/core_cm7.h ****   #else
ARM GAS  /tmp/cc3oKnwN.s 			page 4


 145:lib/Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 146:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
 147:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 148:lib/Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 149:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 150:lib/Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:lib/Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:lib/Drivers/CMSIS/Include/core_cm7.h ****     #else
 153:lib/Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:lib/Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:lib/Drivers/CMSIS/Include/core_cm7.h ****     #endif
 156:lib/Drivers/CMSIS/Include/core_cm7.h ****   #else
 157:lib/Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
 159:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 160:lib/Drivers/CMSIS/Include/core_cm7.h **** #endif
 161:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 162:lib/Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 164:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 165:lib/Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 166:lib/Drivers/CMSIS/Include/core_cm7.h **** }
 167:lib/Drivers/CMSIS/Include/core_cm7.h **** #endif
 168:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 169:lib/Drivers/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 170:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 171:lib/Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 172:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 173:lib/Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 174:lib/Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 175:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 176:lib/Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 177:lib/Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
 178:lib/Drivers/CMSIS/Include/core_cm7.h **** #endif
 179:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 180:lib/Drivers/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 181:lib/Drivers/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 182:lib/Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 183:lib/Drivers/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 184:lib/Drivers/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 185:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
 186:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 187:lib/Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 188:lib/Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 189:lib/Drivers/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
 191:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 192:lib/Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 193:lib/Drivers/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 194:lib/Drivers/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
 196:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 197:lib/Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 198:lib/Drivers/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 199:lib/Drivers/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 200:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
 201:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 5


 202:lib/Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 203:lib/Drivers/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 204:lib/Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 205:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
 206:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 207:lib/Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 208:lib/Drivers/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 209:lib/Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 210:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
 211:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 212:lib/Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 213:lib/Drivers/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 214:lib/Drivers/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 215:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
 216:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 217:lib/Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 218:lib/Drivers/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 219:lib/Drivers/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 220:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
 221:lib/Drivers/CMSIS/Include/core_cm7.h **** #endif
 222:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 223:lib/Drivers/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 224:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
 225:lib/Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 226:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 227:lib/Drivers/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 228:lib/Drivers/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 229:lib/Drivers/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 230:lib/Drivers/CMSIS/Include/core_cm7.h **** */
 231:lib/Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 232:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 233:lib/Drivers/CMSIS/Include/core_cm7.h **** #else
 234:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 235:lib/Drivers/CMSIS/Include/core_cm7.h **** #endif
 236:lib/Drivers/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 237:lib/Drivers/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 238:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 239:lib/Drivers/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 240:lib/Drivers/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 241:lib/Drivers/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 242:lib/Drivers/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 243:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 244:lib/Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 245:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 246:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 247:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 248:lib/Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 249:lib/Drivers/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 250:lib/Drivers/CMSIS/Include/core_cm7.h ****   Core Register contain:
 251:lib/Drivers/CMSIS/Include/core_cm7.h ****   - Core Register
 252:lib/Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 253:lib/Drivers/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 254:lib/Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 255:lib/Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 256:lib/Drivers/CMSIS/Include/core_cm7.h ****   - Core MPU Register
 257:lib/Drivers/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 258:lib/Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
ARM GAS  /tmp/cc3oKnwN.s 			page 6


 259:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
 260:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 261:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 262:lib/Drivers/CMSIS/Include/core_cm7.h **** */
 263:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 264:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
 265:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 266:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 267:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
 268:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
 269:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
 270:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 271:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
 272:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 273:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
 274:lib/Drivers/CMSIS/Include/core_cm7.h **** typedef union
 275:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 276:lib/Drivers/CMSIS/Include/core_cm7.h ****   struct
 277:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 278:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 279:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 280:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 281:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 282:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 283:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 284:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 285:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 286:lib/Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 287:lib/Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 288:lib/Drivers/CMSIS/Include/core_cm7.h **** } APSR_Type;
 289:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 290:lib/Drivers/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 291:lib/Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 292:lib/Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 293:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 294:lib/Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 295:lib/Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 296:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 297:lib/Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 298:lib/Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 299:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 300:lib/Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 301:lib/Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 302:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 303:lib/Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 304:lib/Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 305:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 306:lib/Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 307:lib/Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 308:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 309:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 310:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
 311:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 312:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
 313:lib/Drivers/CMSIS/Include/core_cm7.h **** typedef union
 314:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 315:lib/Drivers/CMSIS/Include/core_cm7.h ****   struct
ARM GAS  /tmp/cc3oKnwN.s 			page 7


 316:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 317:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 318:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 319:lib/Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 320:lib/Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:lib/Drivers/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 322:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 323:lib/Drivers/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 324:lib/Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 325:lib/Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 326:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 327:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 328:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
 329:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 330:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
 331:lib/Drivers/CMSIS/Include/core_cm7.h **** typedef union
 332:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 333:lib/Drivers/CMSIS/Include/core_cm7.h ****   struct
 334:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 335:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 336:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 337:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 338:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 339:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 340:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 341:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 342:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 343:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 344:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 345:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 346:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 347:lib/Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 348:lib/Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 349:lib/Drivers/CMSIS/Include/core_cm7.h **** } xPSR_Type;
 350:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 351:lib/Drivers/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 352:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 353:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 354:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 355:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 356:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 357:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 358:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 359:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 360:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 361:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 362:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 363:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 364:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 365:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 366:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 367:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 368:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 369:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 370:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 371:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 372:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 8


 373:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 374:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 375:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 376:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 377:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 378:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 379:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 380:lib/Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 381:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 382:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 383:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
 384:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 385:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
 386:lib/Drivers/CMSIS/Include/core_cm7.h **** typedef union
 387:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 388:lib/Drivers/CMSIS/Include/core_cm7.h ****   struct
 389:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 390:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 391:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 392:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 393:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 394:lib/Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 395:lib/Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 396:lib/Drivers/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 397:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 398:lib/Drivers/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 399:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 400:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 401:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 402:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 403:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 404:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 405:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 406:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 407:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 408:lib/Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 409:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 410:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 411:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
 412:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 413:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 414:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 415:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
 416:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
 417:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 418:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
 419:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 420:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
 421:lib/Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 422:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 423:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 424:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 425:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 426:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[24U];
 427:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 428:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 429:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
ARM GAS  /tmp/cc3oKnwN.s 			page 9


 430:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 431:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 432:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 433:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 434:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 435:lib/Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 436:lib/Drivers/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 437:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 438:lib/Drivers/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 439:lib/Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 440:lib/Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 441:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 442:lib/Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 443:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 444:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 445:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
 446:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 447:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 448:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 449:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
 450:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
 451:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 452:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
 453:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 454:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
 455:lib/Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 456:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 457:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 458:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 459:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 460:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 461:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 462:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 463:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 464:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 465:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 466:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 467:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 468:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 469:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 470:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 471:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 472:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 473:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 474:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 475:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 476:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 477:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 478:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 479:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 480:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 481:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 482:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 483:lib/Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 484:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 485:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 486:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
ARM GAS  /tmp/cc3oKnwN.s 			page 10


 487:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2
 488:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 489:lib/Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 490:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 491:lib/Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 492:lib/Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 493:lib/Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 494:lib/Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 495:lib/Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 496:lib/Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 497:lib/Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 498:lib/Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 499:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 500:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 501:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 502:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 503:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 504:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 505:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 506:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 507:lib/Drivers/CMSIS/Include/core_cm7.h **** } SCB_Type;
 508:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 509:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 510:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 511:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 512:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 513:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 514:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 515:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 516:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 517:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 518:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 519:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 520:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 521:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 522:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 523:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 524:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 525:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 526:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 527:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 528:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 529:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 530:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 531:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 532:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 533:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 534:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 535:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 536:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 537:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 538:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 539:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 540:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 541:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 542:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 543:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 11


 544:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 545:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 546:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 547:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 548:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 549:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 550:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 551:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 552:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 553:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 554:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 555:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 556:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 557:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 558:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 559:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 560:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 561:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 562:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 563:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 564:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 565:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 566:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 567:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 568:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 569:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 570:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 571:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 572:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 573:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 574:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 575:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 576:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 577:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 578:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 579:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 580:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 581:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 582:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 583:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 584:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 585:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 586:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 587:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 588:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 589:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 590:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 591:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 592:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 593:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 594:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 595:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 596:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 597:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 598:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 599:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 600:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
ARM GAS  /tmp/cc3oKnwN.s 			page 12


 601:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 602:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 603:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 604:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 605:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 606:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 607:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 608:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 609:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 610:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 611:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 612:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 613:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 614:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 615:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 616:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 617:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 618:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 619:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 620:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 621:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 622:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 623:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 624:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 625:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 626:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 627:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 628:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 629:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 630:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 631:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 632:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 633:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 634:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 635:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 636:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 637:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 638:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 639:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 640:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 641:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 642:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 643:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 644:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 645:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 646:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 647:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 648:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 649:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 650:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 651:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 652:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 653:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 654:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 655:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 656:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 657:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
ARM GAS  /tmp/cc3oKnwN.s 			page 13


 658:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 659:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 660:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 661:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 662:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 663:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 664:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 665:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 666:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 667:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 668:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 669:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 670:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 671:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 672:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 673:lib/Drivers/CMSIS/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 674:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 675:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 676:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 677:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 678:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 679:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 680:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 681:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 682:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 683:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 684:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 685:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 686:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 687:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 688:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 689:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 690:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 691:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 692:lib/Drivers/CMSIS/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 693:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 694:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 695:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 696:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 697:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 698:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 699:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 700:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 701:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 702:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 703:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 704:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 705:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 706:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 707:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 708:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 709:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 710:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 711:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 712:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 713:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 714:lib/Drivers/CMSIS/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
ARM GAS  /tmp/cc3oKnwN.s 			page 14


 715:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 716:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 717:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 718:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 719:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 720:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 721:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 722:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 723:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 724:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 725:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 726:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 727:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 728:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 729:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 730:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 731:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 732:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 733:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 734:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 735:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 736:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 737:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 738:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 739:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 740:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 741:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 742:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 743:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 744:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 745:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 746:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 747:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 748:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 749:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 750:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 751:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 752:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 753:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 754:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 755:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 756:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 757:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 758:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 759:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 760:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 761:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 762:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 763:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 764:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 765:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 766:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 767:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 768:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 769:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 770:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 771:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
ARM GAS  /tmp/cc3oKnwN.s 			page 15


 772:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 773:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 774:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 775:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 776:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 777:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 778:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 779:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 780:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 781:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 782:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 783:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 784:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 785:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 786:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 787:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 788:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 789:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 790:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 791:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 792:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 793:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 794:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 795:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 796:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 797:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 798:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 799:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 800:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 801:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 802:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 803:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 804:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 805:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 806:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 807:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 808:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 809:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 810:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 811:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 812:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 813:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 814:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 815:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 816:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 817:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 818:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 819:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 820:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 821:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 822:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 823:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 824:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 825:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 826:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 827:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 828:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 16


 829:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 830:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 831:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 832:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 833:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 834:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 835:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 836:lib/Drivers/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 837:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 838:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 839:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 840:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 841:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 842:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 843:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 844:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 845:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 846:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 847:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 848:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 849:lib/Drivers/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 850:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 851:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 852:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 853:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 854:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 855:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 856:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 857:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 858:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 859:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 860:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 861:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 862:lib/Drivers/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 863:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 864:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 865:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 866:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 867:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 868:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 869:lib/Drivers/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 870:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 871:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 872:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 873:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 874:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 875:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 876:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 877:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 878:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 879:lib/Drivers/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 880:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 881:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 882:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 883:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 884:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 885:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 17


 886:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 887:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 888:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 889:lib/Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 890:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 891:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 892:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 893:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 894:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 895:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 896:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 897:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 898:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 899:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 900:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 901:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 902:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 903:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 904:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 905:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 906:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 907:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 908:lib/Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 909:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 910:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 911:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
 912:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 913:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 914:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 915:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
 916:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
 917:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 918:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
 919:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 920:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
 921:lib/Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 922:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 923:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 924:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 925:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 926:lib/Drivers/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 927:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 928:lib/Drivers/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 929:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 930:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 931:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 932:lib/Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 933:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDYNADD_Pos         26U                                         /*!< ACTLR: 
 934:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDYNADD_Msk         (1UL << SCnSCB_ACTLR_DISDYNADD_Pos)         /*!< ACTLR: 
 935:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 936:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISISSCH1_Pos         21U                                         /*!< ACTLR: 
 937:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISISSCH1_Msk         (0x1FUL << SCnSCB_ACTLR_DISISSCH1_Pos)      /*!< ACTLR: 
 938:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 939:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDI_Pos             16U                                         /*!< ACTLR: 
 940:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDI_Msk             (0x1FUL << SCnSCB_ACTLR_DISDI_Pos)          /*!< ACTLR: 
 941:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 942:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISCRITAXIRUR_Pos     15U                                         /*!< ACTLR: 
ARM GAS  /tmp/cc3oKnwN.s 			page 18


 943:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISCRITAXIRUR_Msk     (1UL << SCnSCB_ACTLR_DISCRITAXIRUR_Pos)     /*!< ACTLR: 
 944:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 945:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACALLOC_Pos      14U                                         /*!< ACTLR: 
 946:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACALLOC_Msk      (1UL << SCnSCB_ACTLR_DISBTACALLOC_Pos)      /*!< ACTLR: 
 947:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 948:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACREAD_Pos       13U                                         /*!< ACTLR: 
 949:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACREAD_Msk       (1UL << SCnSCB_ACTLR_DISBTACREAD_Pos)       /*!< ACTLR: 
 950:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 951:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 952:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 953:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 954:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 955:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 956:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 957:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 958:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 959:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 960:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 961:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 962:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 963:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 964:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 965:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 966:lib/Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 967:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 968:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 969:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
 970:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 971:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 972:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 973:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
 974:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
 975:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 976:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
 977:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 978:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
 979:lib/Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 980:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 981:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 982:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 983:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 984:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 985:lib/Drivers/CMSIS/Include/core_cm7.h **** } SysTick_Type;
 986:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 987:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 988:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 989:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 990:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 991:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 992:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 993:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 994:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 995:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 996:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 997:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 998:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 999:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 19


1000:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
1001:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
1002:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
1003:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1004:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
1005:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
1006:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
1007:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1008:lib/Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
1009:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
1010:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
1011:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1012:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
1013:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
1014:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1015:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
1016:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
1017:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1018:lib/Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
1019:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1020:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1021:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1022:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1023:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1024:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1025:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
1026:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1027:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1028:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1029:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1030:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1031:lib/Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1032:lib/Drivers/CMSIS/Include/core_cm7.h **** {
1033:lib/Drivers/CMSIS/Include/core_cm7.h ****   __OM  union
1034:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
1035:lib/Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1036:lib/Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1037:lib/Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1038:lib/Drivers/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1039:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1040:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1041:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1042:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1043:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1044:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1045:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[32U];
1046:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1047:lib/Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1048:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1049:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1050:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1051:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1052:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1053:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1054:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1055:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1056:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
ARM GAS  /tmp/cc3oKnwN.s 			page 20


1057:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1058:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1059:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1060:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1061:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1062:lib/Drivers/CMSIS/Include/core_cm7.h **** } ITM_Type;
1063:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1064:lib/Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1065:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1066:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
1067:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1068:lib/Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1069:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1070:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1071:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1072:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1073:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1074:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1075:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1076:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1077:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1078:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1079:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1080:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1081:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1082:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1083:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1084:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1085:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1086:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1087:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1088:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1089:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1090:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1091:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1092:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1093:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1094:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1095:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1096:lib/Drivers/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1097:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1098:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1099:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1100:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1101:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1102:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1103:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1104:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1105:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1106:lib/Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1107:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1108:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1109:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1110:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1111:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1112:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1113:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
ARM GAS  /tmp/cc3oKnwN.s 			page 21


1114:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1115:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1116:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1117:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1118:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1119:lib/Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1120:lib/Drivers/CMSIS/Include/core_cm7.h **** {
1121:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1122:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1123:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1124:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1125:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1126:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1127:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1128:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1129:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1130:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1131:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1132:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1133:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1134:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1135:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1136:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1137:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1138:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1139:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1140:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1141:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1142:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1143:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1144:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1145:lib/Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1146:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1147:lib/Drivers/CMSIS/Include/core_cm7.h **** } DWT_Type;
1148:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1149:lib/Drivers/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1150:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1151:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1152:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1153:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1154:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1155:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1156:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1157:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1158:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1159:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1160:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1161:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1162:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1163:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1164:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1165:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1166:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1167:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1168:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1169:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1170:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 22


1171:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1172:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1173:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1174:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1175:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1176:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1177:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1178:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1179:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1180:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1181:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1182:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1183:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1184:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1185:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1186:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1187:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1188:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1189:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1190:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1191:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1192:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1193:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1194:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1195:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1196:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1197:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1198:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1199:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1200:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1201:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1202:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1203:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1204:lib/Drivers/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1205:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1206:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1207:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1208:lib/Drivers/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1209:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1210:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1211:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1212:lib/Drivers/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1213:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1214:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1215:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1216:lib/Drivers/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1217:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1218:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1219:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1220:lib/Drivers/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1221:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1222:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1223:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1224:lib/Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1225:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1226:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1227:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 23


1228:lib/Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1229:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1230:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1231:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1232:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1233:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1234:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1235:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1236:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1237:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1238:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1239:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1240:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1241:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1242:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1243:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1244:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1245:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1246:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1247:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1248:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1249:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1250:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1251:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1252:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1253:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1254:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1255:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1256:lib/Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1257:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1258:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1259:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1260:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1261:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1262:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1263:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
1264:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1265:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1266:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1267:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1268:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1269:lib/Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1270:lib/Drivers/CMSIS/Include/core_cm7.h **** {
1271:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1272:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1273:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1274:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1275:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1276:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1277:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1278:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1279:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1280:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1281:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1282:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1283:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1284:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
ARM GAS  /tmp/cc3oKnwN.s 			page 24


1285:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1286:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1287:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1288:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1289:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1290:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1291:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1292:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1293:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1294:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1295:lib/Drivers/CMSIS/Include/core_cm7.h **** } TPI_Type;
1296:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1297:lib/Drivers/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1298:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1299:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1300:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1301:lib/Drivers/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1302:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1303:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1304:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1305:lib/Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1306:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1307:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1308:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1309:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1310:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1311:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1312:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1313:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1314:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1315:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1316:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1317:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1318:lib/Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1319:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1320:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1321:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1322:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1323:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1324:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1325:lib/Drivers/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1326:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1327:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1328:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1329:lib/Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1330:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1331:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1332:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1333:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1334:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1335:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1336:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1337:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1338:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1339:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1340:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1341:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 25


1342:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1343:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1344:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1345:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1346:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1347:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1348:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1349:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1350:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1351:lib/Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1352:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1353:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1354:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1355:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1356:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1357:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1358:lib/Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1359:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1360:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1361:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1362:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1363:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1364:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1365:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1366:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1367:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1368:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1369:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1370:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1371:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1372:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1373:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1374:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1375:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1376:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1377:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1378:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1379:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1380:lib/Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1381:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1382:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1383:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1384:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1385:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1386:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1387:lib/Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1388:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1389:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1390:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1391:lib/Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1392:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1393:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1394:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1395:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1396:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1397:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1398:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
ARM GAS  /tmp/cc3oKnwN.s 			page 26


1399:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1400:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1401:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1402:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1403:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1404:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1405:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1406:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1407:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1408:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1409:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1410:lib/Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1411:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1412:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1413:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1414:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1415:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1416:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1417:lib/Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1418:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1419:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1420:lib/Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1421:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1422:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1423:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1424:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1425:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
1426:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1427:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1428:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1429:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1430:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1431:lib/Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1432:lib/Drivers/CMSIS/Include/core_cm7.h **** {
1433:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1434:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1435:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1436:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1437:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1438:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1439:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1440:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1441:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1442:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1443:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1444:lib/Drivers/CMSIS/Include/core_cm7.h **** } MPU_Type;
1445:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1446:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_RALIASES                  4U
1447:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1448:lib/Drivers/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1449:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1450:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1451:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1452:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1453:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1454:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1455:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
ARM GAS  /tmp/cc3oKnwN.s 			page 27


1456:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1457:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1458:lib/Drivers/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1459:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1460:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1461:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1462:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1463:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1464:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1465:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1466:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1467:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1468:lib/Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1469:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1470:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1471:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1472:lib/Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1473:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1474:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1475:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1476:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1477:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1478:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1479:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1480:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1481:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1482:lib/Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1483:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1484:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1485:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1486:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1487:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1488:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1489:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1490:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1491:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1492:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1493:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1494:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1495:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1496:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1497:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1498:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1499:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1500:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1501:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1502:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1503:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1504:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1505:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1506:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1507:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1508:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1509:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1510:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1511:lib/Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1512:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 28


1513:lib/Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1514:lib/Drivers/CMSIS/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1515:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1516:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1517:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1518:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1519:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1520:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1521:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
1522:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1523:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1524:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1525:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1526:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1527:lib/Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1528:lib/Drivers/CMSIS/Include/core_cm7.h **** {
1529:lib/Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1530:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1531:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1532:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1533:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1534:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1535:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1536:lib/Drivers/CMSIS/Include/core_cm7.h **** } FPU_Type;
1537:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1538:lib/Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1539:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1540:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1541:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1542:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1543:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1544:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1545:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1546:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1547:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1548:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1549:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1550:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1551:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1552:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1553:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1554:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1555:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1556:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1557:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1558:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1559:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1560:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1561:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1562:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1563:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1564:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1565:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1566:lib/Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1567:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1568:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1569:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 29


1570:lib/Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1571:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1572:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1573:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1574:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1575:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1576:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1577:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1578:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1579:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1580:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1581:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1582:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1583:lib/Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1584:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1585:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1586:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1587:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1588:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1589:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1590:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1591:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1592:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1593:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1594:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1595:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1596:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1597:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1598:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1599:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1600:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1601:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1602:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1603:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1604:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1605:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1606:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1607:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1608:lib/Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1609:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1610:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1611:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1612:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1613:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1614:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1615:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1616:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1617:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1618:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1619:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1620:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1621:lib/Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1622:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1623:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1624:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1625:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1626:lib/Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
ARM GAS  /tmp/cc3oKnwN.s 			page 30


1627:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1628:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1629:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1630:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1631:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1632:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1633:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
1634:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1635:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1636:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1637:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1638:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1639:lib/Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1640:lib/Drivers/CMSIS/Include/core_cm7.h **** {
1641:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1642:lib/Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1643:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1644:lib/Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1645:lib/Drivers/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1646:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1647:lib/Drivers/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1648:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1649:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1650:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1651:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1652:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1653:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1654:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1655:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1656:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1657:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1658:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1659:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1660:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1661:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1662:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1663:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1664:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1665:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1666:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1667:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1668:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1669:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1670:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1671:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1672:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1673:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1674:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1675:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1676:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1677:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1678:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1679:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1680:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1681:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1682:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1683:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 31


1684:lib/Drivers/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1685:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1686:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1687:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1688:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1689:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1690:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1691:lib/Drivers/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1692:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1693:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1694:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1695:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1696:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1697:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1698:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1699:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1700:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1701:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1702:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1703:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1704:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1705:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1706:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1707:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1708:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1709:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1710:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1711:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1712:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1713:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1714:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1715:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1716:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1717:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1718:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1719:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1720:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1721:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1722:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1723:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1724:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1725:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1726:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1727:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1728:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1729:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1730:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1731:lib/Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1732:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1733:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1734:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1735:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1736:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1737:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1738:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
1739:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1740:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 32


1741:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1742:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1743:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1744:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1745:lib/Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1746:lib/Drivers/CMSIS/Include/core_cm7.h **** */
1747:lib/Drivers/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1748:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1749:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1750:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1751:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1752:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1753:lib/Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1754:lib/Drivers/CMSIS/Include/core_cm7.h **** */
1755:lib/Drivers/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1756:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1757:lib/Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1758:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1759:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1760:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1761:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1762:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1763:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1764:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
1765:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1766:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1767:lib/Drivers/CMSIS/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1768:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1769:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1770:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1771:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1772:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1773:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1774:lib/Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1775:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1776:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1777:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1778:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1779:lib/Drivers/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1780:lib/Drivers/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1781:lib/Drivers/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1782:lib/Drivers/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1783:lib/Drivers/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1784:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1785:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1786:lib/Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1787:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1788:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1789:lib/Drivers/CMSIS/Include/core_cm7.h **** #endif
1790:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1791:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1792:lib/Drivers/CMSIS/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1793:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1794:lib/Drivers/CMSIS/Include/core_cm7.h **** /*@} */
1795:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1796:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1797:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 33


1798:lib/Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1799:lib/Drivers/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1800:lib/Drivers/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1801:lib/Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
1802:lib/Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1803:lib/Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1804:lib/Drivers/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1805:lib/Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1806:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1807:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1808:lib/Drivers/CMSIS/Include/core_cm7.h **** */
1809:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1810:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1811:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1812:lib/Drivers/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1813:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1814:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1815:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1816:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1817:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
1818:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1819:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1820:lib/Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_NVIC_VIRTUAL
1821:lib/Drivers/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1822:lib/Drivers/CMSIS/Include/core_cm7.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1823:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
1824:lib/Drivers/CMSIS/Include/core_cm7.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1825:lib/Drivers/CMSIS/Include/core_cm7.h **** #else
1826:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1827:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1828:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1829:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1830:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1831:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1832:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1833:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1834:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1835:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1836:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1837:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1838:lib/Drivers/CMSIS/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1839:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1840:lib/Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1841:lib/Drivers/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1842:lib/Drivers/CMSIS/Include/core_cm7.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1843:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
1844:lib/Drivers/CMSIS/Include/core_cm7.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1845:lib/Drivers/CMSIS/Include/core_cm7.h **** #else
1846:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1847:lib/Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1848:lib/Drivers/CMSIS/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1849:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1850:lib/Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1851:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1852:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1853:lib/Drivers/CMSIS/Include/core_cm7.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1854:lib/Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
ARM GAS  /tmp/cc3oKnwN.s 			page 34


1855:lib/Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1856:lib/Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1857:lib/Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1858:lib/Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1859:lib/Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1860:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1861:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1862:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1863:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1864:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1865:lib/Drivers/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1866:lib/Drivers/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1867:lib/Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1868:lib/Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1869:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1870:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1871:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1872:lib/Drivers/CMSIS/Include/core_cm7.h **** {
1873:lib/Drivers/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
1874:lib/Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1875:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1876:lib/Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1877:lib/Drivers/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1878:lib/Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1879:lib/Drivers/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1880:lib/Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1881:lib/Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
1882:lib/Drivers/CMSIS/Include/core_cm7.h **** }
1883:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1884:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1885:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1886:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
1887:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1888:lib/Drivers/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1889:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1890:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1891:lib/Drivers/CMSIS/Include/core_cm7.h **** {
1892:lib/Drivers/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1893:lib/Drivers/CMSIS/Include/core_cm7.h **** }
1894:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1895:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1896:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1897:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable Interrupt
1898:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1899:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1900:lib/Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1901:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1902:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1903:lib/Drivers/CMSIS/Include/core_cm7.h **** {
  29              		.loc 2 1903 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
1904:lib/Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
  34              		.loc 2 1904 3 view .LVU1
  35              		.loc 2 1904 6 is_stmt 0 view .LVU2
ARM GAS  /tmp/cc3oKnwN.s 			page 35


  36 0000 0028     		cmp	r0, #0
  37              	.LVL1:
  38              		.loc 2 1904 6 view .LVU3
  39 0002 07DB     		blt	.L1
1905:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
1906:lib/Drivers/CMSIS/Include/core_cm7.h ****     __COMPILER_BARRIER();
  40              		.loc 2 1906 5 is_stmt 1 view .LVU4
1907:lib/Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  41              		.loc 2 1907 5 view .LVU5
  42              		.loc 2 1907 81 is_stmt 0 view .LVU6
  43 0004 00F01F02 		and	r2, r0, #31
  44              		.loc 2 1907 34 view .LVU7
  45 0008 4009     		lsrs	r0, r0, #5
  46              		.loc 2 1907 45 view .LVU8
  47 000a 0123     		movs	r3, #1
  48 000c 9340     		lsls	r3, r3, r2
  49              		.loc 2 1907 43 view .LVU9
  50 000e 024A     		ldr	r2, .L3
  51 0010 42F82030 		str	r3, [r2, r0, lsl #2]
1908:lib/Drivers/CMSIS/Include/core_cm7.h ****     __COMPILER_BARRIER();
  52              		.loc 2 1908 5 is_stmt 1 view .LVU10
  53              	.L1:
1909:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
1910:lib/Drivers/CMSIS/Include/core_cm7.h **** }
  54              		.loc 2 1910 1 is_stmt 0 view .LVU11
  55 0014 7047     		bx	lr
  56              	.L4:
  57 0016 00BF     		.align	2
  58              	.L3:
  59 0018 00E100E0 		.word	-536813312
  60              		.cfi_endproc
  61              	.LFE106:
  63              		.section	.text.__NVIC_DisableIRQ,"ax",%progbits
  64              		.align	1
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  69              	__NVIC_DisableIRQ:
  70              	.LVL2:
  71              	.LFB108:
1911:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1912:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1913:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1914:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1915:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1916:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1917:lib/Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
1918:lib/Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1919:lib/Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1920:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1921:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1922:lib/Drivers/CMSIS/Include/core_cm7.h **** {
1923:lib/Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1924:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
1925:lib/Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1926:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
1927:lib/Drivers/CMSIS/Include/core_cm7.h ****   else
ARM GAS  /tmp/cc3oKnwN.s 			page 36


1928:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
1929:lib/Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1930:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
1931:lib/Drivers/CMSIS/Include/core_cm7.h **** }
1932:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1933:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1934:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1935:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable Interrupt
1936:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1937:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1938:lib/Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1939:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1940:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1941:lib/Drivers/CMSIS/Include/core_cm7.h **** {
  72              		.loc 2 1941 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
1942:lib/Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
  77              		.loc 2 1942 3 view .LVU13
  78              		.loc 2 1942 6 is_stmt 0 view .LVU14
  79 0000 0028     		cmp	r0, #0
  80              	.LVL3:
  81              		.loc 2 1942 6 view .LVU15
  82 0002 0CDB     		blt	.L5
1943:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
1944:lib/Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  83              		.loc 2 1944 5 is_stmt 1 view .LVU16
  84              		.loc 2 1944 81 is_stmt 0 view .LVU17
  85 0004 00F01F02 		and	r2, r0, #31
  86              		.loc 2 1944 34 view .LVU18
  87 0008 4009     		lsrs	r0, r0, #5
  88              		.loc 2 1944 45 view .LVU19
  89 000a 0123     		movs	r3, #1
  90 000c 9340     		lsls	r3, r3, r2
  91              		.loc 2 1944 43 view .LVU20
  92 000e 2030     		adds	r0, r0, #32
  93 0010 034A     		ldr	r2, .L7
  94 0012 42F82030 		str	r3, [r2, r0, lsl #2]
1945:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
  95              		.loc 2 1945 5 is_stmt 1 view .LVU21
  96              	.LBB36:
  97              	.LBI36:
  98              		.file 3 "lib/Drivers/CMSIS/Include/cmsis_gcc.h"
   1:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
ARM GAS  /tmp/cc3oKnwN.s 			page 37


  13:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc3oKnwN.s 			page 38


  70:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
ARM GAS  /tmp/cc3oKnwN.s 			page 39


 127:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc3oKnwN.s 			page 40


 184:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc3oKnwN.s 			page 41


 241:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
ARM GAS  /tmp/cc3oKnwN.s 			page 42


 298:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
ARM GAS  /tmp/cc3oKnwN.s 			page 43


 355:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc3oKnwN.s 			page 44


 412:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
ARM GAS  /tmp/cc3oKnwN.s 			page 45


 469:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
ARM GAS  /tmp/cc3oKnwN.s 			page 46


 526:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc3oKnwN.s 			page 47


 583:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc3oKnwN.s 			page 48


 640:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
ARM GAS  /tmp/cc3oKnwN.s 			page 49


 697:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/cc3oKnwN.s 			page 50


 754:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
ARM GAS  /tmp/cc3oKnwN.s 			page 51


 811:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
ARM GAS  /tmp/cc3oKnwN.s 			page 52


 868:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
ARM GAS  /tmp/cc3oKnwN.s 			page 53


 925:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
  99              		.loc 3 944 27 view .LVU22
 100              	.LBB37:
 945:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 101              		.loc 3 946 3 view .LVU23
 102              		.syntax unified
 103              	@ 946 "lib/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 104 0016 BFF34F8F 		dsb 0xF
 105              	@ 0 "" 2
 106              		.thumb
 107              		.syntax unified
 108              	.LBE37:
 109              	.LBE36:
1946:lib/Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
 110              		.loc 2 1946 5 view .LVU24
 111              	.LBB38:
 112              	.LBI38:
 933:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 113              		.loc 3 933 27 view .LVU25
 114              	.LBB39:
 935:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 115              		.loc 3 935 3 view .LVU26
 116              		.syntax unified
 117              	@ 935 "lib/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 118 001a BFF36F8F 		isb 0xF
 119              	@ 0 "" 2
 120              		.thumb
 121              		.syntax unified
 122              	.L5:
 123              	.LBE39:
 124              	.LBE38:
1947:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
1948:lib/Drivers/CMSIS/Include/core_cm7.h **** }
 125              		.loc 2 1948 1 is_stmt 0 view .LVU27
 126 001e 7047     		bx	lr
 127              	.L8:
 128              		.align	2
ARM GAS  /tmp/cc3oKnwN.s 			page 54


 129              	.L7:
 130 0020 00E100E0 		.word	-536813312
 131              		.cfi_endproc
 132              	.LFE108:
 134              		.section	.text.__NVIC_SetPriority,"ax",%progbits
 135              		.align	1
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	__NVIC_SetPriority:
 141              	.LVL4:
 142              	.LFB113:
1949:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1950:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1951:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1952:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1953:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1954:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1955:lib/Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1956:lib/Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1957:lib/Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1958:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1959:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1960:lib/Drivers/CMSIS/Include/core_cm7.h **** {
1961:lib/Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1962:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
1963:lib/Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1964:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
1965:lib/Drivers/CMSIS/Include/core_cm7.h ****   else
1966:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
1967:lib/Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1968:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
1969:lib/Drivers/CMSIS/Include/core_cm7.h **** }
1970:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1971:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1972:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1973:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1974:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1975:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1976:lib/Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1977:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1978:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1979:lib/Drivers/CMSIS/Include/core_cm7.h **** {
1980:lib/Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1981:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
1982:lib/Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1983:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
1984:lib/Drivers/CMSIS/Include/core_cm7.h **** }
1985:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1986:lib/Drivers/CMSIS/Include/core_cm7.h **** 
1987:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
1988:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1989:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1990:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1991:lib/Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1992:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
1993:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
ARM GAS  /tmp/cc3oKnwN.s 			page 55


1994:lib/Drivers/CMSIS/Include/core_cm7.h **** {
1995:lib/Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1996:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
1997:lib/Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1998:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
1999:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2000:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2001:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2002:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2003:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
2004:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
2005:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
2006:lib/Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
2007:lib/Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
2008:lib/Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
2009:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
2010:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
2011:lib/Drivers/CMSIS/Include/core_cm7.h **** {
2012:lib/Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2013:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
2014:lib/Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2015:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
2016:lib/Drivers/CMSIS/Include/core_cm7.h ****   else
2017:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
2018:lib/Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
2019:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
2020:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2021:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2022:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2023:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2024:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
2025:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
2026:lib/Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2027:lib/Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2028:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
2029:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
2030:lib/Drivers/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
2031:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
2032:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
2033:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 143              		.loc 2 2033 1 is_stmt 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
2034:lib/Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
 148              		.loc 2 2034 3 view .LVU29
 149              		.loc 2 2034 6 is_stmt 0 view .LVU30
 150 0000 0028     		cmp	r0, #0
 151              	.LVL5:
 152              		.loc 2 2034 6 view .LVU31
 153 0002 04DB     		blt	.L10
2035:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
2036:lib/Drivers/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
 154              		.loc 2 2036 5 is_stmt 1 view .LVU32
 155              		.loc 2 2036 49 is_stmt 0 view .LVU33
 156 0004 0901     		lsls	r1, r1, #4
ARM GAS  /tmp/cc3oKnwN.s 			page 56


 157              	.LVL6:
 158              		.loc 2 2036 49 view .LVU34
 159 0006 C9B2     		uxtb	r1, r1
 160              		.loc 2 2036 47 view .LVU35
 161 0008 044B     		ldr	r3, .L12
 162 000a 1954     		strb	r1, [r3, r0]
 163 000c 7047     		bx	lr
 164              	.LVL7:
 165              	.L10:
2037:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
2038:lib/Drivers/CMSIS/Include/core_cm7.h ****   else
2039:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
2040:lib/Drivers/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
 166              		.loc 2 2040 5 is_stmt 1 view .LVU36
 167              		.loc 2 2040 33 is_stmt 0 view .LVU37
 168 000e 00F00F00 		and	r0, r0, #15
 169              		.loc 2 2040 49 view .LVU38
 170 0012 0901     		lsls	r1, r1, #4
 171              	.LVL8:
 172              		.loc 2 2040 49 view .LVU39
 173 0014 C9B2     		uxtb	r1, r1
 174              		.loc 2 2040 47 view .LVU40
 175 0016 024B     		ldr	r3, .L12+4
 176 0018 1954     		strb	r1, [r3, r0]
2041:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
2042:lib/Drivers/CMSIS/Include/core_cm7.h **** }
 177              		.loc 2 2042 1 view .LVU41
 178 001a 7047     		bx	lr
 179              	.L13:
 180              		.align	2
 181              	.L12:
 182 001c 00E400E0 		.word	-536812544
 183 0020 14ED00E0 		.word	-536810220
 184              		.cfi_endproc
 185              	.LFE113:
 187              		.section	.text.__NVIC_GetPriority,"ax",%progbits
 188              		.align	1
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 193              	__NVIC_GetPriority:
 194              	.LVL9:
 195              	.LFB114:
2043:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2044:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2045:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2046:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2047:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2048:lib/Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2049:lib/Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2050:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2051:lib/Drivers/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
2052:lib/Drivers/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2053:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
2054:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2055:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 196              		.loc 2 2055 1 is_stmt 1 view -0
ARM GAS  /tmp/cc3oKnwN.s 			page 57


 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
2056:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2057:lib/Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
 201              		.loc 2 2057 3 view .LVU43
 202              		.loc 2 2057 6 is_stmt 0 view .LVU44
 203 0000 0028     		cmp	r0, #0
 204              	.LVL10:
 205              		.loc 2 2057 6 view .LVU45
 206 0002 03DB     		blt	.L15
2058:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
2059:lib/Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)));
 207              		.loc 2 2059 5 is_stmt 1 view .LVU46
 208              		.loc 2 2059 31 is_stmt 0 view .LVU47
 209 0004 044B     		ldr	r3, .L17
 210 0006 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 211              		.loc 2 2059 65 view .LVU48
 212 0008 0009     		lsrs	r0, r0, #4
 213 000a 7047     		bx	lr
 214              	.L15:
2060:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
2061:lib/Drivers/CMSIS/Include/core_cm7.h ****   else
2062:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
2063:lib/Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
 215              		.loc 2 2063 5 is_stmt 1 view .LVU49
 216              		.loc 2 2063 51 is_stmt 0 view .LVU50
 217 000c 00F00F00 		and	r0, r0, #15
 218              		.loc 2 2063 32 view .LVU51
 219 0010 024B     		ldr	r3, .L17+4
 220 0012 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 221              		.loc 2 2063 65 view .LVU52
 222 0014 0009     		lsrs	r0, r0, #4
2064:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
2065:lib/Drivers/CMSIS/Include/core_cm7.h **** }
 223              		.loc 2 2065 1 view .LVU53
 224 0016 7047     		bx	lr
 225              	.L18:
 226              		.align	2
 227              	.L17:
 228 0018 00E400E0 		.word	-536812544
 229 001c 14ED00E0 		.word	-536810220
 230              		.cfi_endproc
 231              	.LFE114:
 233              		.section	.text.NVIC_EncodePriority,"ax",%progbits
 234              		.align	1
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 239              	NVIC_EncodePriority:
 240              	.LVL11:
 241              	.LFB115:
2066:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2067:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2068:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2069:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
ARM GAS  /tmp/cc3oKnwN.s 			page 58


2070:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2071:lib/Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
2072:lib/Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2073:lib/Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2074:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2075:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2076:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2077:lib/Drivers/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2078:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
2079:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2080:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 242              		.loc 2 2080 1 is_stmt 1 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		.loc 2 2080 1 is_stmt 0 view .LVU55
 247 0000 00B5     		push	{lr}
 248              	.LCFI0:
 249              		.cfi_def_cfa_offset 4
 250              		.cfi_offset 14, -4
2081:lib/Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 251              		.loc 2 2081 3 is_stmt 1 view .LVU56
 252              		.loc 2 2081 12 is_stmt 0 view .LVU57
 253 0002 00F00700 		and	r0, r0, #7
 254              	.LVL12:
2082:lib/Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
 255              		.loc 2 2082 3 is_stmt 1 view .LVU58
2083:lib/Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
 256              		.loc 2 2083 3 view .LVU59
2084:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2085:lib/Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 257              		.loc 2 2085 3 view .LVU60
 258              		.loc 2 2085 31 is_stmt 0 view .LVU61
 259 0006 C0F1070C 		rsb	ip, r0, #7
 260              		.loc 2 2085 23 view .LVU62
 261 000a BCF1040F 		cmp	ip, #4
 262 000e 28BF     		it	cs
 263 0010 4FF0040C 		movcs	ip, #4
 264              	.LVL13:
2086:lib/Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 265              		.loc 2 2086 3 is_stmt 1 view .LVU63
 266              		.loc 2 2086 44 is_stmt 0 view .LVU64
 267 0014 031D     		adds	r3, r0, #4
 268              		.loc 2 2086 109 view .LVU65
 269 0016 062B     		cmp	r3, #6
 270 0018 0FD9     		bls	.L21
 271              		.loc 2 2086 109 discriminator 1 view .LVU66
 272 001a C31E     		subs	r3, r0, #3
 273              	.L20:
 274              	.LVL14:
2087:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2088:lib/Drivers/CMSIS/Include/core_cm7.h ****   return (
 275              		.loc 2 2088 3 is_stmt 1 discriminator 4 view .LVU67
2089:lib/Drivers/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 276              		.loc 2 2089 30 is_stmt 0 discriminator 4 view .LVU68
 277 001c 4FF0FF3E 		mov	lr, #-1
 278 0020 0EFA0CF0 		lsl	r0, lr, ip
ARM GAS  /tmp/cc3oKnwN.s 			page 59


 279              	.LVL15:
 280              		.loc 2 2089 30 discriminator 4 view .LVU69
 281 0024 21EA0001 		bic	r1, r1, r0
 282              	.LVL16:
 283              		.loc 2 2089 82 discriminator 4 view .LVU70
 284 0028 9940     		lsls	r1, r1, r3
2090:lib/Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 285              		.loc 2 2090 30 discriminator 4 view .LVU71
 286 002a 0EFA03FE 		lsl	lr, lr, r3
 287 002e 22EA0E02 		bic	r2, r2, lr
 288              	.LVL17:
2091:lib/Drivers/CMSIS/Include/core_cm7.h ****          );
2092:lib/Drivers/CMSIS/Include/core_cm7.h **** }
 289              		.loc 2 2092 1 discriminator 4 view .LVU72
 290 0032 41EA0200 		orr	r0, r1, r2
 291 0036 5DF804FB 		ldr	pc, [sp], #4
 292              	.LVL18:
 293              	.L21:
2086:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 294              		.loc 2 2086 109 view .LVU73
 295 003a 0023     		movs	r3, #0
 296 003c EEE7     		b	.L20
 297              		.cfi_endproc
 298              	.LFE115:
 300              		.section	.text.NVIC_DecodePriority,"ax",%progbits
 301              		.align	1
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 306              	NVIC_DecodePriority:
 307              	.LVL19:
 308              	.LFB116:
2093:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2094:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2095:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2096:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
2097:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2098:lib/Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2099:lib/Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2100:lib/Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2101:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2102:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2103:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2104:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2105:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
2106:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2107:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 309              		.loc 2 2107 1 is_stmt 1 view -0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		.loc 2 2107 1 is_stmt 0 view .LVU75
 314 0000 10B5     		push	{r4, lr}
 315              	.LCFI1:
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 4, -8
 318              		.cfi_offset 14, -4
ARM GAS  /tmp/cc3oKnwN.s 			page 60


2108:lib/Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 319              		.loc 2 2108 3 is_stmt 1 view .LVU76
 320              		.loc 2 2108 12 is_stmt 0 view .LVU77
 321 0002 01F00701 		and	r1, r1, #7
 322              	.LVL20:
2109:lib/Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
 323              		.loc 2 2109 3 is_stmt 1 view .LVU78
2110:lib/Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
 324              		.loc 2 2110 3 view .LVU79
2111:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2112:lib/Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 325              		.loc 2 2112 3 view .LVU80
 326              		.loc 2 2112 31 is_stmt 0 view .LVU81
 327 0006 C1F1070C 		rsb	ip, r1, #7
 328              		.loc 2 2112 23 view .LVU82
 329 000a BCF1040F 		cmp	ip, #4
 330 000e 28BF     		it	cs
 331 0010 4FF0040C 		movcs	ip, #4
 332              	.LVL21:
2113:lib/Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 333              		.loc 2 2113 3 is_stmt 1 view .LVU83
 334              		.loc 2 2113 44 is_stmt 0 view .LVU84
 335 0014 0C1D     		adds	r4, r1, #4
 336              		.loc 2 2113 109 view .LVU85
 337 0016 062C     		cmp	r4, #6
 338 0018 0FD9     		bls	.L25
 339              		.loc 2 2113 109 discriminator 1 view .LVU86
 340 001a 0339     		subs	r1, r1, #3
 341              	.LVL22:
 342              	.L24:
2114:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2115:lib/Drivers/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
 343              		.loc 2 2115 3 is_stmt 1 discriminator 4 view .LVU87
 344              		.loc 2 2115 33 is_stmt 0 discriminator 4 view .LVU88
 345 001c 20FA01F4 		lsr	r4, r0, r1
 346              	.LVL23:
 347              		.loc 2 2115 53 discriminator 4 view .LVU89
 348 0020 4FF0FF3E 		mov	lr, #-1
 349 0024 0EFA0CFC 		lsl	ip, lr, ip
 350              	.LVL24:
 351              		.loc 2 2115 53 discriminator 4 view .LVU90
 352 0028 24EA0C04 		bic	r4, r4, ip
 353              		.loc 2 2115 21 discriminator 4 view .LVU91
 354 002c 1460     		str	r4, [r2]
2116:lib/Drivers/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 355              		.loc 2 2116 3 is_stmt 1 discriminator 4 view .LVU92
 356              		.loc 2 2116 53 is_stmt 0 discriminator 4 view .LVU93
 357 002e 0EFA01FE 		lsl	lr, lr, r1
 358 0032 20EA0E00 		bic	r0, r0, lr
 359              	.LVL25:
 360              		.loc 2 2116 21 discriminator 4 view .LVU94
 361 0036 1860     		str	r0, [r3]
2117:lib/Drivers/CMSIS/Include/core_cm7.h **** }
 362              		.loc 2 2117 1 discriminator 4 view .LVU95
 363 0038 10BD     		pop	{r4, pc}
 364              	.LVL26:
 365              	.L25:
ARM GAS  /tmp/cc3oKnwN.s 			page 61


2113:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 366              		.loc 2 2113 109 view .LVU96
 367 003a 0021     		movs	r1, #0
 368              	.LVL27:
2113:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 369              		.loc 2 2113 109 view .LVU97
 370 003c EEE7     		b	.L24
 371              		.cfi_endproc
 372              	.LFE116:
 374              		.section	.text.__NVIC_SystemReset,"ax",%progbits
 375              		.align	1
 376              		.syntax unified
 377              		.thumb
 378              		.thumb_func
 380              	__NVIC_SystemReset:
 381              	.LFB119:
2118:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2119:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2120:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2121:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Vector
2122:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2123:lib/Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2124:lib/Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2125:lib/Drivers/CMSIS/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2126:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2127:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2128:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
2129:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2130:lib/Drivers/CMSIS/Include/core_cm7.h **** {
2131:lib/Drivers/CMSIS/Include/core_cm7.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
2132:lib/Drivers/CMSIS/Include/core_cm7.h ****   (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
2133:lib/Drivers/CMSIS/Include/core_cm7.h ****   __DSB();
2134:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2135:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2136:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2137:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2138:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2139:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2140:lib/Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2141:lib/Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2142:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2143:lib/Drivers/CMSIS/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2144:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
2145:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2146:lib/Drivers/CMSIS/Include/core_cm7.h **** {
2147:lib/Drivers/CMSIS/Include/core_cm7.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
2148:lib/Drivers/CMSIS/Include/core_cm7.h ****   return (uint32_t)(* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4));
2149:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2150:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2151:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2152:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2153:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Reset
2154:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2155:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
2156:lib/Drivers/CMSIS/Include/core_cm7.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
2157:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 382              		.loc 2 2157 1 is_stmt 1 view -0
ARM GAS  /tmp/cc3oKnwN.s 			page 62


 383              		.cfi_startproc
 384              		@ Volatile: function does not return.
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		@ link register save eliminated.
2158:lib/Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
 388              		.loc 2 2158 3 view .LVU99
 389              	.LBB40:
 390              	.LBI40:
 944:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 391              		.loc 3 944 27 view .LVU100
 392              	.LBB41:
 393              		.loc 3 946 3 view .LVU101
 394              		.syntax unified
 395              	@ 946 "lib/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 396 0000 BFF34F8F 		dsb 0xF
 397              	@ 0 "" 2
 398              		.thumb
 399              		.syntax unified
 400              	.LBE41:
 401              	.LBE40:
2159:lib/Drivers/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
2160:lib/Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 402              		.loc 2 2160 3 view .LVU102
2161:lib/Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 403              		.loc 2 2161 32 is_stmt 0 view .LVU103
 404 0004 0549     		ldr	r1, .L29
 405 0006 CA68     		ldr	r2, [r1, #12]
 406              		.loc 2 2161 40 view .LVU104
 407 0008 02F4E062 		and	r2, r2, #1792
2160:lib/Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 408              		.loc 2 2160 17 view .LVU105
 409 000c 044B     		ldr	r3, .L29+4
 410 000e 1343     		orrs	r3, r3, r2
2160:lib/Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 411              		.loc 2 2160 15 view .LVU106
 412 0010 CB60     		str	r3, [r1, #12]
2162:lib/Drivers/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2163:lib/Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
 413              		.loc 2 2163 3 is_stmt 1 view .LVU107
 414              	.LBB42:
 415              	.LBI42:
 944:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 416              		.loc 3 944 27 view .LVU108
 417              	.LBB43:
 418              		.loc 3 946 3 view .LVU109
 419              		.syntax unified
 420              	@ 946 "lib/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 421 0012 BFF34F8F 		dsb 0xF
 422              	@ 0 "" 2
 423              		.thumb
 424              		.syntax unified
 425              	.L28:
 426              	.LBE43:
 427              	.LBE42:
2164:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2165:lib/Drivers/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
ARM GAS  /tmp/cc3oKnwN.s 			page 63


 428              		.loc 2 2165 3 discriminator 1 view .LVU110
2166:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
2167:lib/Drivers/CMSIS/Include/core_cm7.h ****     __NOP();
 429              		.loc 2 2167 5 discriminator 1 view .LVU111
 430              		.syntax unified
 431              	@ 2167 "lib/Drivers/CMSIS/Include/core_cm7.h" 1
 432 0016 00BF     		nop
 433              	@ 0 "" 2
2165:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 434              		.loc 2 2165 3 discriminator 1 view .LVU112
 435              		.thumb
 436              		.syntax unified
 437 0018 FDE7     		b	.L28
 438              	.L30:
 439 001a 00BF     		.align	2
 440              	.L29:
 441 001c 00ED00E0 		.word	-536810240
 442 0020 0400FA05 		.word	100270084
 443              		.cfi_endproc
 444              	.LFE119:
 446              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
 447              		.align	1
 448              		.global	HAL_NVIC_SetPriorityGrouping
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 453              	HAL_NVIC_SetPriorityGrouping:
 454              	.LVL28:
 455              	.LFB144:
   1:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
   2:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ******************************************************************************
   3:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @file    stm32h7xx_hal_cortex.c
   4:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @author  MCD Application Team
   5:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   6:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following
   7:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *          functionalities of the CORTEX:
   8:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           + Initialization and de-initialization functions
   9:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           + Peripheral Control functions
  10:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *
  11:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   @verbatim
  12:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
  13:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                         ##### How to use this driver #####
  14:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
  15:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  16:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
  17:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  18:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     ===========================================================
  19:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
  20:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  21:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     The Cortex-M exceptions are managed by CMSIS functions.
  22:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  23:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping()
  24:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         function according to the following table.
  25:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority().
  26:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  27:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     (#) please refer to programming manual for details in how to configure priority.
  28:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 64


  29:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ preemption is no more possible.
  30:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  31:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  32:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  33:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (+@) Lowest preemption priority
  34:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (+@) Lowest sub priority
  35:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  36:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  37:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
  38:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     *** How to configure Systick using CORTEX HAL driver ***
  39:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     ========================================================
  40:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
  41:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  42:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  43:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  44:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        is a CMSIS function that:
  45:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  46:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
  47:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  48:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  49:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  50:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  51:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  52:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  53:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  54:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The HAL_SYSTICK_CLKSourceConfig() macro is defined
  55:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        inside the stm32h7xx_hal_cortex.h file.
  56:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  57:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  58:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  59:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  60:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  61:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  62:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  63:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  64:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  65:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  66:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  67:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   @endverbatim
  68:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ******************************************************************************
  69:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @attention
  70:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *
  71:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * Copyright (c) 2017 STMicroelectronics.
  72:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * All rights reserved.
  73:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *
  74:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  75:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * the root directory of this software component.
  76:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  77:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *
  78:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ******************************************************************************
  79:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
  80:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  81:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
  82:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #include "stm32h7xx_hal.h"
  83:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  84:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @addtogroup STM32H7xx_HAL_Driver
  85:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
ARM GAS  /tmp/cc3oKnwN.s 			page 65


  86:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
  87:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  88:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @defgroup CORTEX CORTEX
  89:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief CORTEX HAL module driver
  90:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
  91:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
  92:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  93:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
  94:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  95:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
  96:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
  97:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
  98:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
  99:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 100:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 101:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 102:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions CORTEX Exported Functions
 103:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
 104:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 105:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 106:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 107:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group1 Initialization and de-initialization functions
 108:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions
 109:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  *
 110:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** @verbatim
 111:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
 112:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****               ##### Initialization and de-initialization functions #####
 113:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
 114:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
 115:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 116:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****       Systick functionalities
 117:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 118:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** @endverbatim
 119:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
 120:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 121:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 122:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 123:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 124:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Sets the priority grouping field (preemption priority and subpriority)
 125:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         using the required unlock sequence.
 126:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  PriorityGroup The priority grouping bits length.
 127:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 128:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 129:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    4 bits for subpriority
 130:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 131:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    3 bits for subpriority
 132:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 133:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    2 bits for subpriority
 134:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 135:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    1 bits for subpriority
 136:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 137:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    0 bits for subpriority
 138:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible.
 139:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority.
 140:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 141:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 142:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
ARM GAS  /tmp/cc3oKnwN.s 			page 66


 143:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 456              		.loc 1 143 1 view -0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 144:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 145:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 461              		.loc 1 145 3 view .LVU114
 146:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 147:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 148:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
 462              		.loc 1 148 3 view .LVU115
 463              	.LBB44:
 464              	.LBI44:
1871:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 465              		.loc 2 1871 22 view .LVU116
 466              	.LBB45:
1873:lib/Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
 467              		.loc 2 1873 3 view .LVU117
1874:lib/Drivers/CMSIS/Include/core_cm7.h **** 
 468              		.loc 2 1874 3 view .LVU118
1876:lib/Drivers/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
 469              		.loc 2 1876 3 view .LVU119
1876:lib/Drivers/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
 470              		.loc 2 1876 14 is_stmt 0 view .LVU120
 471 0000 0649     		ldr	r1, .L32
 472 0002 CB68     		ldr	r3, [r1, #12]
 473              	.LVL29:
1877:lib/Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
 474              		.loc 2 1877 3 is_stmt 1 view .LVU121
1877:lib/Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
 475              		.loc 2 1877 13 is_stmt 0 view .LVU122
 476 0004 23F4E063 		bic	r3, r3, #1792
 477              	.LVL30:
1877:lib/Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
 478              		.loc 2 1877 13 view .LVU123
 479 0008 1B04     		lsls	r3, r3, #16
 480 000a 1B0C     		lsrs	r3, r3, #16
 481              	.LVL31:
1878:lib/Drivers/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 482              		.loc 2 1878 3 is_stmt 1 view .LVU124
1880:lib/Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
 483              		.loc 2 1880 35 is_stmt 0 view .LVU125
 484 000c 0002     		lsls	r0, r0, #8
 485              	.LVL32:
1880:lib/Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
 486              		.loc 2 1880 35 view .LVU126
 487 000e 00F4E060 		and	r0, r0, #1792
1879:lib/Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
 488              		.loc 2 1879 62 view .LVU127
 489 0012 0343     		orrs	r3, r3, r0
 490              	.LVL33:
1878:lib/Drivers/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 491              		.loc 2 1878 14 view .LVU128
 492 0014 024A     		ldr	r2, .L32+4
 493 0016 1A43     		orrs	r2, r2, r3
ARM GAS  /tmp/cc3oKnwN.s 			page 67


 494              	.LVL34:
1881:lib/Drivers/CMSIS/Include/core_cm7.h **** }
 495              		.loc 2 1881 3 is_stmt 1 view .LVU129
1881:lib/Drivers/CMSIS/Include/core_cm7.h **** }
 496              		.loc 2 1881 14 is_stmt 0 view .LVU130
 497 0018 CA60     		str	r2, [r1, #12]
 498              	.LVL35:
1881:lib/Drivers/CMSIS/Include/core_cm7.h **** }
 499              		.loc 2 1881 14 view .LVU131
 500              	.LBE45:
 501              	.LBE44:
 149:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 502              		.loc 1 149 1 view .LVU132
 503 001a 7047     		bx	lr
 504              	.L33:
 505              		.align	2
 506              	.L32:
 507 001c 00ED00E0 		.word	-536810240
 508 0020 0000FA05 		.word	100270080
 509              		.cfi_endproc
 510              	.LFE144:
 512              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
 513              		.align	1
 514              		.global	HAL_NVIC_SetPriority
 515              		.syntax unified
 516              		.thumb
 517              		.thumb_func
 519              	HAL_NVIC_SetPriority:
 520              	.LVL36:
 521              	.LFB145:
 150:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 151:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 152:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Sets the priority of an interrupt.
 153:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 154:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 155:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 156:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  PreemptPriority The preemption priority for the IRQn channel.
 157:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 158:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority
 159:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  SubPriority the subpriority level for the IRQ channel.
 160:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 161:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.
 162:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 163:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 164:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 165:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 522              		.loc 1 165 1 is_stmt 1 view -0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		.loc 1 165 1 is_stmt 0 view .LVU134
 527 0000 10B5     		push	{r4, lr}
 528              	.LCFI2:
 529              		.cfi_def_cfa_offset 8
 530              		.cfi_offset 4, -8
 531              		.cfi_offset 14, -4
 532 0002 0446     		mov	r4, r0
ARM GAS  /tmp/cc3oKnwN.s 			page 68


 166:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   uint32_t prioritygroup;
 533              		.loc 1 166 3 is_stmt 1 view .LVU135
 167:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 168:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 169:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 534              		.loc 1 169 3 view .LVU136
 170:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 535              		.loc 1 170 3 view .LVU137
 171:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 172:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 536              		.loc 1 172 3 view .LVU138
 537              	.LBB46:
 538              	.LBI46:
1890:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 539              		.loc 2 1890 26 view .LVU139
 540              	.LBB47:
1892:lib/Drivers/CMSIS/Include/core_cm7.h **** }
 541              		.loc 2 1892 3 view .LVU140
1892:lib/Drivers/CMSIS/Include/core_cm7.h **** }
 542              		.loc 2 1892 26 is_stmt 0 view .LVU141
 543 0004 054B     		ldr	r3, .L36
 544 0006 D868     		ldr	r0, [r3, #12]
 545              	.LVL37:
1892:lib/Drivers/CMSIS/Include/core_cm7.h **** }
 546              		.loc 2 1892 26 view .LVU142
 547              	.LBE47:
 548              	.LBE46:
 173:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 174:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 549              		.loc 1 174 3 is_stmt 1 view .LVU143
 550 0008 C0F30220 		ubfx	r0, r0, #8, #3
 551              	.LVL38:
 552              		.loc 1 174 3 is_stmt 0 view .LVU144
 553 000c FFF7FEFF 		bl	NVIC_EncodePriority
 554              	.LVL39:
 555              		.loc 1 174 3 view .LVU145
 556 0010 0146     		mov	r1, r0
 557 0012 2046     		mov	r0, r4
 558 0014 FFF7FEFF 		bl	__NVIC_SetPriority
 559              	.LVL40:
 175:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 560              		.loc 1 175 1 view .LVU146
 561 0018 10BD     		pop	{r4, pc}
 562              	.L37:
 563 001a 00BF     		.align	2
 564              	.L36:
 565 001c 00ED00E0 		.word	-536810240
 566              		.cfi_endproc
 567              	.LFE145:
 569              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 570              		.align	1
 571              		.global	HAL_NVIC_EnableIRQ
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
 576              	HAL_NVIC_EnableIRQ:
 577              	.LVL41:
ARM GAS  /tmp/cc3oKnwN.s 			page 69


 578              	.LFB146:
 176:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 177:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 178:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Enables a device specific interrupt in the NVIC interrupt controller.
 179:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 180:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         function should be called before.
 181:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 182:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 183:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 184:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 185:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 186:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 187:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 579              		.loc 1 187 1 is_stmt 1 view -0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              		.loc 1 187 1 is_stmt 0 view .LVU148
 584 0000 08B5     		push	{r3, lr}
 585              	.LCFI3:
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 3, -8
 588              		.cfi_offset 14, -4
 188:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 189:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 589              		.loc 1 189 3 is_stmt 1 view .LVU149
 190:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 191:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Enable interrupt */
 192:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 590              		.loc 1 192 3 view .LVU150
 591 0002 FFF7FEFF 		bl	__NVIC_EnableIRQ
 592              	.LVL42:
 193:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 593              		.loc 1 193 1 is_stmt 0 view .LVU151
 594 0006 08BD     		pop	{r3, pc}
 595              		.cfi_endproc
 596              	.LFE146:
 598              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 599              		.align	1
 600              		.global	HAL_NVIC_DisableIRQ
 601              		.syntax unified
 602              		.thumb
 603              		.thumb_func
 605              	HAL_NVIC_DisableIRQ:
 606              	.LVL43:
 607              	.LFB147:
 194:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 195:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 196:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Disables a device specific interrupt in the NVIC interrupt controller.
 197:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 198:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 199:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 200:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 201:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 202:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 203:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 608              		.loc 1 203 1 is_stmt 1 view -0
ARM GAS  /tmp/cc3oKnwN.s 			page 70


 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              		.loc 1 203 1 is_stmt 0 view .LVU153
 613 0000 08B5     		push	{r3, lr}
 614              	.LCFI4:
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 3, -8
 617              		.cfi_offset 14, -4
 204:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 205:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 618              		.loc 1 205 3 is_stmt 1 view .LVU154
 206:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 207:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Disable interrupt */
 208:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 619              		.loc 1 208 3 view .LVU155
 620 0002 FFF7FEFF 		bl	__NVIC_DisableIRQ
 621              	.LVL44:
 209:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 622              		.loc 1 209 1 is_stmt 0 view .LVU156
 623 0006 08BD     		pop	{r3, pc}
 624              		.cfi_endproc
 625              	.LFE147:
 627              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 628              		.align	1
 629              		.global	HAL_NVIC_SystemReset
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 634              	HAL_NVIC_SystemReset:
 635              	.LFB148:
 210:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 211:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 212:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Initiates a system reset request to reset the MCU.
 213:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 214:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 215:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 216:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 636              		.loc 1 216 1 is_stmt 1 view -0
 637              		.cfi_startproc
 638              		@ Volatile: function does not return.
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641 0000 08B5     		push	{r3, lr}
 642              	.LCFI5:
 643              		.cfi_def_cfa_offset 8
 644              		.cfi_offset 3, -8
 645              		.cfi_offset 14, -4
 217:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* System Reset */
 218:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_SystemReset();
 646              		.loc 1 218 3 view .LVU158
 647 0002 FFF7FEFF 		bl	__NVIC_SystemReset
 648              	.LVL45:
 649              		.cfi_endproc
 650              	.LFE148:
 652              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 653              		.align	1
ARM GAS  /tmp/cc3oKnwN.s 			page 71


 654              		.global	HAL_SYSTICK_Config
 655              		.syntax unified
 656              		.thumb
 657              		.thumb_func
 659              	HAL_SYSTICK_Config:
 660              	.LVL46:
 661              	.LFB149:
 219:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 220:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 221:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 222:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 223:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 224:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
 225:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval status   - 0  Function succeeded.
 226:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                  - 1  Function failed.
 227:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 228:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 229:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 662              		.loc 1 229 1 view -0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 230:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 667              		.loc 1 230 4 view .LVU160
 668              	.LBB48:
 669              	.LBI48:
2168:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
2169:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2170:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2171:lib/Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2172:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2173:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2174:lib/Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  MPU functions  #################################### */
2175:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2176:lib/Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
2177:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2178:lib/Drivers/CMSIS/Include/core_cm7.h **** #include "mpu_armv7.h"
2179:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2180:lib/Drivers/CMSIS/Include/core_cm7.h **** #endif
2181:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2182:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2183:lib/Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2184:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2185:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2186:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2187:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2188:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
2189:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
2190:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2191:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2192:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2193:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
2194:lib/Drivers/CMSIS/Include/core_cm7.h ****   \returns
2195:lib/Drivers/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2196:lib/Drivers/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
2197:lib/Drivers/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
ARM GAS  /tmp/cc3oKnwN.s 			page 72


2198:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
2199:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2200:lib/Drivers/CMSIS/Include/core_cm7.h **** {
2201:lib/Drivers/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
2202:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2203:lib/Drivers/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2204:lib/Drivers/CMSIS/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2205:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
2206:lib/Drivers/CMSIS/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2207:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
2208:lib/Drivers/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2209:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
2210:lib/Drivers/CMSIS/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2211:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
2212:lib/Drivers/CMSIS/Include/core_cm7.h ****   else
2213:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
2214:lib/Drivers/CMSIS/Include/core_cm7.h ****     return 0U;           /* No FPU */
2215:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
2216:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2217:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2218:lib/Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2219:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2220:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2221:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2222:lib/Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2223:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2224:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2225:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2226:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2227:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
2228:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
2229:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2230:lib/Drivers/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2231:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2232:lib/Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2233:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2234:lib/Drivers/CMSIS/Include/core_cm7.h **** #define __SCB_DCACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
2235:lib/Drivers/CMSIS/Include/core_cm7.h **** #define __SCB_ICACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
2236:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2237:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2238:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2239:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2240:lib/Drivers/CMSIS/Include/core_cm7.h ****   */
2241:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_EnableICache (void)
2242:lib/Drivers/CMSIS/Include/core_cm7.h **** {
2243:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2244:lib/Drivers/CMSIS/Include/core_cm7.h ****     if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
2245:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2246:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2247:lib/Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2248:lib/Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2249:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2250:lib/Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2251:lib/Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
2252:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2253:lib/Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2254:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
ARM GAS  /tmp/cc3oKnwN.s 			page 73


2255:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2256:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2257:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2258:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2259:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2260:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2261:lib/Drivers/CMSIS/Include/core_cm7.h ****   */
2262:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_DisableICache (void)
2263:lib/Drivers/CMSIS/Include/core_cm7.h **** {
2264:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2265:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2266:lib/Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2267:lib/Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2268:lib/Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2269:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2270:lib/Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2271:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
2272:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2273:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2274:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2275:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2276:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2277:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
2278:lib/Drivers/CMSIS/Include/core_cm7.h ****   */
2279:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache (void)
2280:lib/Drivers/CMSIS/Include/core_cm7.h **** {
2281:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2282:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2283:lib/Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2284:lib/Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2285:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2286:lib/Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2287:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
2288:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2289:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2290:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2291:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2292:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   I-Cache Invalidate by address
2293:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache for the given address.
2294:lib/Drivers/CMSIS/Include/core_cm7.h ****            I-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
2295:lib/Drivers/CMSIS/Include/core_cm7.h ****            I-Cache memory blocks which are part of given address + given size are invalidated.
2296:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address
2297:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   isize   size of memory block (in number of bytes)
2298:lib/Drivers/CMSIS/Include/core_cm7.h **** */
2299:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache_by_Addr (void *addr, int32_t isize)
2300:lib/Drivers/CMSIS/Include/core_cm7.h **** {
2301:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2302:lib/Drivers/CMSIS/Include/core_cm7.h ****     if ( isize > 0 ) {
2303:lib/Drivers/CMSIS/Include/core_cm7.h ****        int32_t op_size = isize + (((uint32_t)addr) & (__SCB_ICACHE_LINE_SIZE - 1U));
2304:lib/Drivers/CMSIS/Include/core_cm7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_ICACHE_LINE_SIZE - 1U) */;
2305:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2306:lib/Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2307:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2308:lib/Drivers/CMSIS/Include/core_cm7.h ****       do {
2309:lib/Drivers/CMSIS/Include/core_cm7.h ****         SCB->ICIMVAU = op_addr;             /* register accepts only 32byte aligned values, only bi
2310:lib/Drivers/CMSIS/Include/core_cm7.h ****         op_addr += __SCB_ICACHE_LINE_SIZE;
2311:lib/Drivers/CMSIS/Include/core_cm7.h ****         op_size -= __SCB_ICACHE_LINE_SIZE;
ARM GAS  /tmp/cc3oKnwN.s 			page 74


2312:lib/Drivers/CMSIS/Include/core_cm7.h ****       } while ( op_size > 0 );
2313:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2314:lib/Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2315:lib/Drivers/CMSIS/Include/core_cm7.h ****       __ISB();
2316:lib/Drivers/CMSIS/Include/core_cm7.h ****     }
2317:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
2318:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2319:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2320:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2321:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2322:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2323:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
2324:lib/Drivers/CMSIS/Include/core_cm7.h ****   */
2325:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_EnableDCache (void)
2326:lib/Drivers/CMSIS/Include/core_cm7.h **** {
2327:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2328:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2329:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2330:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2331:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2332:lib/Drivers/CMSIS/Include/core_cm7.h ****     if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
2333:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2334:lib/Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2335:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2336:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2337:lib/Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2338:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2339:lib/Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2340:lib/Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2341:lib/Drivers/CMSIS/Include/core_cm7.h ****     do {
2342:lib/Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2343:lib/Drivers/CMSIS/Include/core_cm7.h ****       do {
2344:lib/Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2345:lib/Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2346:lib/Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2347:lib/Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2348:lib/Drivers/CMSIS/Include/core_cm7.h ****         #endif
2349:lib/Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2350:lib/Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2351:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2352:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2353:lib/Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
2354:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2355:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2356:lib/Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2357:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
2358:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2359:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2360:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2361:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2362:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable D-Cache
2363:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off D-Cache
2364:lib/Drivers/CMSIS/Include/core_cm7.h ****   */
2365:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_DisableDCache (void)
2366:lib/Drivers/CMSIS/Include/core_cm7.h **** {
2367:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2368:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
ARM GAS  /tmp/cc3oKnwN.s 			page 75


2369:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2370:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2371:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2372:lib/Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2373:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2374:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2375:lib/Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
2376:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2377:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2378:lib/Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2379:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2380:lib/Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2381:lib/Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2382:lib/Drivers/CMSIS/Include/core_cm7.h ****     do {
2383:lib/Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2384:lib/Drivers/CMSIS/Include/core_cm7.h ****       do {
2385:lib/Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2386:lib/Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2387:lib/Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2388:lib/Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2389:lib/Drivers/CMSIS/Include/core_cm7.h ****         #endif
2390:lib/Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2391:lib/Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2392:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2393:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2394:lib/Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2395:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
2396:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2397:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2398:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2399:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2400:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate D-Cache
2401:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache
2402:lib/Drivers/CMSIS/Include/core_cm7.h ****   */
2403:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache (void)
2404:lib/Drivers/CMSIS/Include/core_cm7.h **** {
2405:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2406:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2407:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2408:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2409:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2410:lib/Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2411:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2412:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2413:lib/Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2414:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2415:lib/Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2416:lib/Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2417:lib/Drivers/CMSIS/Include/core_cm7.h ****     do {
2418:lib/Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2419:lib/Drivers/CMSIS/Include/core_cm7.h ****       do {
2420:lib/Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2421:lib/Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2422:lib/Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2423:lib/Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2424:lib/Drivers/CMSIS/Include/core_cm7.h ****         #endif
2425:lib/Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
ARM GAS  /tmp/cc3oKnwN.s 			page 76


2426:lib/Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2427:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2428:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2429:lib/Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2430:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
2431:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2432:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2433:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2434:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2435:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean D-Cache
2436:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache
2437:lib/Drivers/CMSIS/Include/core_cm7.h ****   */
2438:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache (void)
2439:lib/Drivers/CMSIS/Include/core_cm7.h **** {
2440:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2441:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2442:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2443:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2444:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2445:lib/Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2446:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2447:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2448:lib/Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2449:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2450:lib/Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean D-Cache */
2451:lib/Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2452:lib/Drivers/CMSIS/Include/core_cm7.h ****     do {
2453:lib/Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2454:lib/Drivers/CMSIS/Include/core_cm7.h ****       do {
2455:lib/Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
2456:lib/Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
2457:lib/Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2458:lib/Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2459:lib/Drivers/CMSIS/Include/core_cm7.h ****         #endif
2460:lib/Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2461:lib/Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2462:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2463:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2464:lib/Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2465:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
2466:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2467:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2468:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2469:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2470:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean & Invalidate D-Cache
2471:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans and Invalidates D-Cache
2472:lib/Drivers/CMSIS/Include/core_cm7.h ****   */
2473:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache (void)
2474:lib/Drivers/CMSIS/Include/core_cm7.h **** {
2475:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2476:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2477:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2478:lib/Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2479:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2480:lib/Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2481:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2482:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 77


2483:lib/Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2484:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2485:lib/Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2486:lib/Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2487:lib/Drivers/CMSIS/Include/core_cm7.h ****     do {
2488:lib/Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2489:lib/Drivers/CMSIS/Include/core_cm7.h ****       do {
2490:lib/Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2491:lib/Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2492:lib/Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2493:lib/Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2494:lib/Drivers/CMSIS/Include/core_cm7.h ****         #endif
2495:lib/Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2496:lib/Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2497:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2498:lib/Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2499:lib/Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2500:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
2501:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2502:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2503:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2504:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2505:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Invalidate by address
2506:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache for the given address.
2507:lib/Drivers/CMSIS/Include/core_cm7.h ****            D-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
2508:lib/Drivers/CMSIS/Include/core_cm7.h ****            D-Cache memory blocks which are part of given address + given size are invalidated.
2509:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address
2510:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2511:lib/Drivers/CMSIS/Include/core_cm7.h **** */
2512:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache_by_Addr (void *addr, int32_t dsize)
2513:lib/Drivers/CMSIS/Include/core_cm7.h **** {
2514:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2515:lib/Drivers/CMSIS/Include/core_cm7.h ****     if ( dsize > 0 ) { 
2516:lib/Drivers/CMSIS/Include/core_cm7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
2517:lib/Drivers/CMSIS/Include/core_cm7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
2518:lib/Drivers/CMSIS/Include/core_cm7.h ****     
2519:lib/Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2520:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2521:lib/Drivers/CMSIS/Include/core_cm7.h ****       do {
2522:lib/Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
2523:lib/Drivers/CMSIS/Include/core_cm7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
2524:lib/Drivers/CMSIS/Include/core_cm7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
2525:lib/Drivers/CMSIS/Include/core_cm7.h ****       } while ( op_size > 0 );
2526:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2527:lib/Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2528:lib/Drivers/CMSIS/Include/core_cm7.h ****       __ISB();
2529:lib/Drivers/CMSIS/Include/core_cm7.h ****     }
2530:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
2531:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2532:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2533:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2534:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2535:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Clean by address
2536:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache for the given address
2537:lib/Drivers/CMSIS/Include/core_cm7.h ****            D-Cache is cleaned starting from a 32 byte aligned address in 32 byte granularity.
2538:lib/Drivers/CMSIS/Include/core_cm7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned.
2539:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address
ARM GAS  /tmp/cc3oKnwN.s 			page 78


2540:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2541:lib/Drivers/CMSIS/Include/core_cm7.h **** */
2542:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
2543:lib/Drivers/CMSIS/Include/core_cm7.h **** {
2544:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2545:lib/Drivers/CMSIS/Include/core_cm7.h ****     if ( dsize > 0 ) { 
2546:lib/Drivers/CMSIS/Include/core_cm7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
2547:lib/Drivers/CMSIS/Include/core_cm7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
2548:lib/Drivers/CMSIS/Include/core_cm7.h ****     
2549:lib/Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2550:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2551:lib/Drivers/CMSIS/Include/core_cm7.h ****       do {
2552:lib/Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
2553:lib/Drivers/CMSIS/Include/core_cm7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
2554:lib/Drivers/CMSIS/Include/core_cm7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
2555:lib/Drivers/CMSIS/Include/core_cm7.h ****       } while ( op_size > 0 );
2556:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2557:lib/Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2558:lib/Drivers/CMSIS/Include/core_cm7.h ****       __ISB();
2559:lib/Drivers/CMSIS/Include/core_cm7.h ****     }
2560:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
2561:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2562:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2563:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2564:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2565:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Clean and Invalidate by address
2566:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans and invalidates D_Cache for the given address
2567:lib/Drivers/CMSIS/Include/core_cm7.h ****            D-Cache is cleaned and invalidated starting from a 32 byte aligned address in 32 byte gr
2568:lib/Drivers/CMSIS/Include/core_cm7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned and inval
2569:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2570:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2571:lib/Drivers/CMSIS/Include/core_cm7.h **** */
2572:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache_by_Addr (uint32_t *addr, int32_t dsize)
2573:lib/Drivers/CMSIS/Include/core_cm7.h **** {
2574:lib/Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2575:lib/Drivers/CMSIS/Include/core_cm7.h ****     if ( dsize > 0 ) { 
2576:lib/Drivers/CMSIS/Include/core_cm7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
2577:lib/Drivers/CMSIS/Include/core_cm7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
2578:lib/Drivers/CMSIS/Include/core_cm7.h ****     
2579:lib/Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2580:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2581:lib/Drivers/CMSIS/Include/core_cm7.h ****       do {
2582:lib/Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
2583:lib/Drivers/CMSIS/Include/core_cm7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
2584:lib/Drivers/CMSIS/Include/core_cm7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
2585:lib/Drivers/CMSIS/Include/core_cm7.h ****       } while ( op_size > 0 );
2586:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2587:lib/Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2588:lib/Drivers/CMSIS/Include/core_cm7.h ****       __ISB();
2589:lib/Drivers/CMSIS/Include/core_cm7.h ****     }
2590:lib/Drivers/CMSIS/Include/core_cm7.h ****   #endif
2591:lib/Drivers/CMSIS/Include/core_cm7.h **** }
2592:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2593:lib/Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_CacheFunctions */
2594:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2595:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2596:lib/Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 79


2597:lib/Drivers/CMSIS/Include/core_cm7.h **** /* ##################################    SysTick function  ########################################
2598:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2599:lib/Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2600:lib/Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2601:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure the System.
2602:lib/Drivers/CMSIS/Include/core_cm7.h ****   @{
2603:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
2604:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2605:lib/Drivers/CMSIS/Include/core_cm7.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
2606:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2607:lib/Drivers/CMSIS/Include/core_cm7.h **** /**
2608:lib/Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Tick Configuration
2609:lib/Drivers/CMSIS/Include/core_cm7.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2610:lib/Drivers/CMSIS/Include/core_cm7.h ****            Counter is in free running mode to generate periodic interrupts.
2611:lib/Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2612:lib/Drivers/CMSIS/Include/core_cm7.h ****   \return          0  Function succeeded.
2613:lib/Drivers/CMSIS/Include/core_cm7.h ****   \return          1  Function failed.
2614:lib/Drivers/CMSIS/Include/core_cm7.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2615:lib/Drivers/CMSIS/Include/core_cm7.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2616:lib/Drivers/CMSIS/Include/core_cm7.h ****            must contain a vendor-specific implementation of this function.
2617:lib/Drivers/CMSIS/Include/core_cm7.h ****  */
2618:lib/Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 670              		.loc 2 2618 26 view .LVU161
 671              	.LBB49:
2619:lib/Drivers/CMSIS/Include/core_cm7.h **** {
2620:lib/Drivers/CMSIS/Include/core_cm7.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 672              		.loc 2 2620 3 view .LVU162
 673              		.loc 2 2620 14 is_stmt 0 view .LVU163
 674 0000 0138     		subs	r0, r0, #1
 675              	.LVL47:
 676              		.loc 2 2620 6 view .LVU164
 677 0002 B0F1807F 		cmp	r0, #16777216
 678 0006 0BD2     		bcs	.L46
2621:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
2622:lib/Drivers/CMSIS/Include/core_cm7.h ****     return (1UL);                                                   /* Reload value impossible */
2623:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
2624:lib/Drivers/CMSIS/Include/core_cm7.h **** 
2625:lib/Drivers/CMSIS/Include/core_cm7.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 679              		.loc 2 2625 3 is_stmt 1 view .LVU165
 680              		.loc 2 2625 18 is_stmt 0 view .LVU166
 681 0008 4FF0E023 		mov	r3, #-536813568
 682 000c 5861     		str	r0, [r3, #20]
2626:lib/Drivers/CMSIS/Include/core_cm7.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 683              		.loc 2 2626 3 is_stmt 1 view .LVU167
 684              	.LVL48:
 685              	.LBB50:
 686              	.LBI50:
2032:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 687              		.loc 2 2032 22 view .LVU168
 688              	.LBB51:
2034:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 689              		.loc 2 2034 3 view .LVU169
2040:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 690              		.loc 2 2040 5 view .LVU170
2040:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 691              		.loc 2 2040 47 is_stmt 0 view .LVU171
 692 000e 054A     		ldr	r2, .L47
ARM GAS  /tmp/cc3oKnwN.s 			page 80


 693 0010 F021     		movs	r1, #240
 694 0012 82F82310 		strb	r1, [r2, #35]
 695              	.LVL49:
2040:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 696              		.loc 2 2040 47 view .LVU172
 697              	.LBE51:
 698              	.LBE50:
2627:lib/Drivers/CMSIS/Include/core_cm7.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 699              		.loc 2 2627 3 is_stmt 1 view .LVU173
 700              		.loc 2 2627 18 is_stmt 0 view .LVU174
 701 0016 0020     		movs	r0, #0
 702              	.LVL50:
 703              		.loc 2 2627 18 view .LVU175
 704 0018 9861     		str	r0, [r3, #24]
2628:lib/Drivers/CMSIS/Include/core_cm7.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 705              		.loc 2 2628 3 is_stmt 1 view .LVU176
 706              		.loc 2 2628 18 is_stmt 0 view .LVU177
 707 001a 0722     		movs	r2, #7
 708 001c 1A61     		str	r2, [r3, #16]
2629:lib/Drivers/CMSIS/Include/core_cm7.h ****                    SysTick_CTRL_TICKINT_Msk   |
2630:lib/Drivers/CMSIS/Include/core_cm7.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
2631:lib/Drivers/CMSIS/Include/core_cm7.h ****   return (0UL);                                                     /* Function successful */
 709              		.loc 2 2631 3 is_stmt 1 view .LVU178
 710              		.loc 2 2631 10 is_stmt 0 view .LVU179
 711 001e 7047     		bx	lr
 712              	.L46:
2622:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 713              		.loc 2 2622 12 view .LVU180
 714 0020 0120     		movs	r0, #1
 715              	.LVL51:
2622:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 716              		.loc 2 2622 12 view .LVU181
 717              	.LBE49:
 718              	.LBE48:
 231:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 719              		.loc 1 231 1 view .LVU182
 720 0022 7047     		bx	lr
 721              	.L48:
 722              		.align	2
 723              	.L47:
 724 0024 00ED00E0 		.word	-536810240
 725              		.cfi_endproc
 726              	.LFE149:
 728              		.section	.text.HAL_MPU_Disable,"ax",%progbits
 729              		.align	1
 730              		.global	HAL_MPU_Disable
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 735              	HAL_MPU_Disable:
 736              	.LFB150:
 232:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 233:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @}
 234:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 235:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 236:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group2 Peripheral Control functions
 237:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  *  @brief   Cortex control functions
ARM GAS  /tmp/cc3oKnwN.s 			page 81


 238:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  *
 239:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** @verbatim
 240:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
 241:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 242:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
 243:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
 244:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 245:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities.
 246:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 247:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 248:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** @endverbatim
 249:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
 250:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 251:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #if (__MPU_PRESENT == 1)
 252:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 253:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Disables the MPU
 254:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 255:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 256:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_MPU_Disable(void)
 257:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 737              		.loc 1 257 1 is_stmt 1 view -0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 258:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Make sure outstanding transfers are done */
 259:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   __DMB();
 742              		.loc 1 259 3 view .LVU184
 743              	.LBB52:
 744              	.LBI52:
 947:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 745              		.loc 3 955 27 view .LVU185
 746              	.LBB53:
 956:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:lib/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 747              		.loc 3 957 3 view .LVU186
 748              		.syntax unified
 749              	@ 957 "lib/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 750 0000 BFF35F8F 		dmb 0xF
 751              	@ 0 "" 2
 752              		.thumb
 753              		.syntax unified
 754              	.LBE53:
 755              	.LBE52:
 260:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 261:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Disable fault exceptions */
 262:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 756              		.loc 1 262 3 view .LVU187
 757              		.loc 1 262 6 is_stmt 0 view .LVU188
ARM GAS  /tmp/cc3oKnwN.s 			page 82


 758 0004 044B     		ldr	r3, .L50
 759 0006 5A6A     		ldr	r2, [r3, #36]
 760              		.loc 1 262 14 view .LVU189
 761 0008 22F48032 		bic	r2, r2, #65536
 762 000c 5A62     		str	r2, [r3, #36]
 263:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 264:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Disable the MPU and clear the control register*/
 265:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   MPU->CTRL = 0;
 763              		.loc 1 265 3 is_stmt 1 view .LVU190
 764              		.loc 1 265 13 is_stmt 0 view .LVU191
 765 000e 0022     		movs	r2, #0
 766 0010 C3F89420 		str	r2, [r3, #148]
 266:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 767              		.loc 1 266 1 view .LVU192
 768 0014 7047     		bx	lr
 769              	.L51:
 770 0016 00BF     		.align	2
 771              	.L50:
 772 0018 00ED00E0 		.word	-536810240
 773              		.cfi_endproc
 774              	.LFE150:
 776              		.section	.text.HAL_MPU_Enable,"ax",%progbits
 777              		.align	1
 778              		.global	HAL_MPU_Enable
 779              		.syntax unified
 780              		.thumb
 781              		.thumb_func
 783              	HAL_MPU_Enable:
 784              	.LVL52:
 785              	.LFB151:
 267:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 268:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 269:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Enables the MPU
 270:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  MPU_Control Specifies the control mode of the MPU during hard fault,
 271:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         NMI, FAULTMASK and privileged access to the default memory
 272:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 273:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF_NONE
 274:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *            @arg MPU_HARDFAULT_NMI
 275:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *            @arg MPU_PRIVILEGED_DEFAULT
 276:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF
 277:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 278:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 279:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_MPU_Enable(uint32_t MPU_Control)
 280:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 786              		.loc 1 280 1 is_stmt 1 view -0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 0, uses_anonymous_args = 0
 790              		@ link register save eliminated.
 281:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Enable the MPU */
 282:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 791              		.loc 1 282 3 view .LVU194
 792              		.loc 1 282 27 is_stmt 0 view .LVU195
 793 0000 40F00100 		orr	r0, r0, #1
 794              	.LVL53:
 795              		.loc 1 282 13 view .LVU196
 796 0004 054B     		ldr	r3, .L53
ARM GAS  /tmp/cc3oKnwN.s 			page 83


 797 0006 C3F89400 		str	r0, [r3, #148]
 283:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 284:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Enable fault exceptions */
 285:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 798              		.loc 1 285 3 is_stmt 1 view .LVU197
 799              		.loc 1 285 6 is_stmt 0 view .LVU198
 800 000a 5A6A     		ldr	r2, [r3, #36]
 801              		.loc 1 285 14 view .LVU199
 802 000c 42F48032 		orr	r2, r2, #65536
 803 0010 5A62     		str	r2, [r3, #36]
 286:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 287:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Ensure MPU setting take effects */
 288:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   __DSB();
 804              		.loc 1 288 3 is_stmt 1 view .LVU200
 805              	.LBB54:
 806              	.LBI54:
 944:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 807              		.loc 3 944 27 view .LVU201
 808              	.LBB55:
 946:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 809              		.loc 3 946 3 view .LVU202
 810              		.syntax unified
 811              	@ 946 "lib/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 812 0012 BFF34F8F 		dsb 0xF
 813              	@ 0 "" 2
 814              		.thumb
 815              		.syntax unified
 816              	.LBE55:
 817              	.LBE54:
 289:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   __ISB();
 818              		.loc 1 289 3 view .LVU203
 819              	.LBB56:
 820              	.LBI56:
 933:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821              		.loc 3 933 27 view .LVU204
 822              	.LBB57:
 935:lib/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823              		.loc 3 935 3 view .LVU205
 824              		.syntax unified
 825              	@ 935 "lib/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 826 0016 BFF36F8F 		isb 0xF
 827              	@ 0 "" 2
 828              		.thumb
 829              		.syntax unified
 830              	.LBE57:
 831              	.LBE56:
 290:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 832              		.loc 1 290 1 is_stmt 0 view .LVU206
 833 001a 7047     		bx	lr
 834              	.L54:
 835              		.align	2
 836              	.L53:
 837 001c 00ED00E0 		.word	-536810240
 838              		.cfi_endproc
 839              	.LFE151:
 841              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 842              		.align	1
ARM GAS  /tmp/cc3oKnwN.s 			page 84


 843              		.global	HAL_MPU_ConfigRegion
 844              		.syntax unified
 845              		.thumb
 846              		.thumb_func
 848              	HAL_MPU_ConfigRegion:
 849              	.LVL54:
 850              	.LFB152:
 291:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 292:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Initializes and configures the Region and the memory to be protected.
 293:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  MPU_Init Pointer to a MPU_Region_InitTypeDef structure that contains
 294:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                  the initialization and configuration information.
 295:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 296:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 297:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 298:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 851              		.loc 1 298 1 is_stmt 1 view -0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 0
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 855              		@ link register save eliminated.
 299:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 300:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 856              		.loc 1 300 3 view .LVU208
 301:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 857              		.loc 1 301 3 view .LVU209
 302:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 303:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Set the Region number */
 304:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 858              		.loc 1 304 3 view .LVU210
 859              		.loc 1 304 22 is_stmt 0 view .LVU211
 860 0000 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 861              		.loc 1 304 12 view .LVU212
 862 0002 164B     		ldr	r3, .L58
 863 0004 C3F89820 		str	r2, [r3, #152]
 305:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 306:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   if ((MPU_Init->Enable) != 0UL)
 864              		.loc 1 306 3 is_stmt 1 view .LVU213
 865              		.loc 1 306 16 is_stmt 0 view .LVU214
 866 0008 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 867              		.loc 1 306 6 view .LVU215
 868 000a FBB1     		cbz	r3, .L56
 307:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 308:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     /* Check the parameters */
 309:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 869              		.loc 1 309 5 is_stmt 1 view .LVU216
 310:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 870              		.loc 1 310 5 view .LVU217
 311:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 871              		.loc 1 311 5 view .LVU218
 312:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 872              		.loc 1 312 5 view .LVU219
 313:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 873              		.loc 1 313 5 view .LVU220
 314:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 874              		.loc 1 314 5 view .LVU221
 315:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 875              		.loc 1 315 5 view .LVU222
ARM GAS  /tmp/cc3oKnwN.s 			page 85


 316:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 876              		.loc 1 316 5 view .LVU223
 317:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 318:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RBAR = MPU_Init->BaseAddress;
 877              		.loc 1 318 5 view .LVU224
 878              		.loc 1 318 25 is_stmt 0 view .LVU225
 879 000c 4368     		ldr	r3, [r0, #4]
 880              		.loc 1 318 15 view .LVU226
 881 000e 134A     		ldr	r2, .L58
 882 0010 C2F89C30 		str	r3, [r2, #156]
 319:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 883              		.loc 1 319 5 is_stmt 1 view .LVU227
 884              		.loc 1 319 36 is_stmt 0 view .LVU228
 885 0014 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 320:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 886              		.loc 1 320 36 view .LVU229
 887 0016 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 888              		.loc 1 320 62 view .LVU230
 889 0018 1B06     		lsls	r3, r3, #24
 319:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 890              		.loc 1 319 84 view .LVU231
 891 001a 43EA0173 		orr	r3, r3, r1, lsl #28
 321:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 892              		.loc 1 321 36 view .LVU232
 893 001e 817A     		ldrb	r1, [r0, #10]	@ zero_extendqisi2
 320:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 894              		.loc 1 320 84 view .LVU233
 895 0020 43EAC143 		orr	r3, r3, r1, lsl #19
 322:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 896              		.loc 1 322 36 view .LVU234
 897 0024 417B     		ldrb	r1, [r0, #13]	@ zero_extendqisi2
 321:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 898              		.loc 1 321 84 view .LVU235
 899 0026 43EA8143 		orr	r3, r3, r1, lsl #18
 323:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 900              		.loc 1 323 36 view .LVU236
 901 002a 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 322:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 902              		.loc 1 322 84 view .LVU237
 903 002c 43EA4143 		orr	r3, r3, r1, lsl #17
 324:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 904              		.loc 1 324 36 view .LVU238
 905 0030 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 323:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 906              		.loc 1 323 84 view .LVU239
 907 0032 43EA0143 		orr	r3, r3, r1, lsl #16
 325:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 908              		.loc 1 325 36 view .LVU240
 909 0036 417A     		ldrb	r1, [r0, #9]	@ zero_extendqisi2
 324:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 910              		.loc 1 324 84 view .LVU241
 911 0038 43EA0123 		orr	r3, r3, r1, lsl #8
 326:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 912              		.loc 1 326 36 view .LVU242
 913 003c 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 325:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 914              		.loc 1 325 84 view .LVU243
ARM GAS  /tmp/cc3oKnwN.s 			page 86


 915 003e 43EA4103 		orr	r3, r3, r1, lsl #1
 327:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 916              		.loc 1 327 36 view .LVU244
 917 0042 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 326:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 918              		.loc 1 326 84 view .LVU245
 919 0044 0B43     		orrs	r3, r3, r1
 319:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 920              		.loc 1 319 15 view .LVU246
 921 0046 C2F8A030 		str	r3, [r2, #160]
 922 004a 7047     		bx	lr
 923              	.L56:
 328:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 329:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   else
 330:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 331:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RBAR = 0x00;
 924              		.loc 1 331 5 is_stmt 1 view .LVU247
 925              		.loc 1 331 15 is_stmt 0 view .LVU248
 926 004c 034B     		ldr	r3, .L58
 927 004e 0022     		movs	r2, #0
 928 0050 C3F89C20 		str	r2, [r3, #156]
 332:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RASR = 0x00;
 929              		.loc 1 332 5 is_stmt 1 view .LVU249
 930              		.loc 1 332 15 is_stmt 0 view .LVU250
 931 0054 C3F8A020 		str	r2, [r3, #160]
 333:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 334:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 932              		.loc 1 334 1 view .LVU251
 933 0058 7047     		bx	lr
 934              	.L59:
 935 005a 00BF     		.align	2
 936              	.L58:
 937 005c 00ED00E0 		.word	-536810240
 938              		.cfi_endproc
 939              	.LFE152:
 941              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 942              		.align	1
 943              		.global	HAL_NVIC_GetPriorityGrouping
 944              		.syntax unified
 945              		.thumb
 946              		.thumb_func
 948              	HAL_NVIC_GetPriorityGrouping:
 949              	.LFB153:
 335:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #endif /* __MPU_PRESENT */
 336:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 337:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 338:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Gets the priority grouping field from the NVIC Interrupt Controller.
 339:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 340:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 341:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 342:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 950              		.loc 1 342 1 is_stmt 1 view -0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 343:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
ARM GAS  /tmp/cc3oKnwN.s 			page 87


 344:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 955              		.loc 1 344 3 view .LVU253
 956              	.LBB58:
 957              	.LBI58:
1890:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 958              		.loc 2 1890 26 view .LVU254
 959              	.LBB59:
1892:lib/Drivers/CMSIS/Include/core_cm7.h **** }
 960              		.loc 2 1892 3 view .LVU255
1892:lib/Drivers/CMSIS/Include/core_cm7.h **** }
 961              		.loc 2 1892 26 is_stmt 0 view .LVU256
 962 0000 024B     		ldr	r3, .L61
 963 0002 D868     		ldr	r0, [r3, #12]
 964              	.LBE59:
 965              	.LBE58:
 345:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 966              		.loc 1 345 1 view .LVU257
 967 0004 C0F30220 		ubfx	r0, r0, #8, #3
 968 0008 7047     		bx	lr
 969              	.L62:
 970 000a 00BF     		.align	2
 971              	.L61:
 972 000c 00ED00E0 		.word	-536810240
 973              		.cfi_endproc
 974              	.LFE153:
 976              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 977              		.align	1
 978              		.global	HAL_NVIC_GetPriority
 979              		.syntax unified
 980              		.thumb
 981              		.thumb_func
 983              	HAL_NVIC_GetPriority:
 984              	.LVL55:
 985              	.LFB154:
 346:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 347:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 348:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Gets the priority of an interrupt.
 349:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 350:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 351:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 352:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param   PriorityGroup the priority grouping bits length.
 353:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 354:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 355:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      4 bits for subpriority
 356:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 357:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      3 bits for subpriority
 358:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 359:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      2 bits for subpriority
 360:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 361:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      1 bits for subpriority
 362:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 363:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      0 bits for subpriority
 364:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  pPreemptPriority Pointer on the Preemptive priority value (starting from 0).
 365:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  pSubPriority Pointer on the Subpriority value (starting from 0).
 366:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 367:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 368:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
ARM GAS  /tmp/cc3oKnwN.s 			page 88


 369:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 986              		.loc 1 369 1 is_stmt 1 view -0
 987              		.cfi_startproc
 988              		@ args = 0, pretend = 0, frame = 0
 989              		@ frame_needed = 0, uses_anonymous_args = 0
 990              		.loc 1 369 1 is_stmt 0 view .LVU259
 991 0000 70B5     		push	{r4, r5, r6, lr}
 992              	.LCFI6:
 993              		.cfi_def_cfa_offset 16
 994              		.cfi_offset 4, -16
 995              		.cfi_offset 5, -12
 996              		.cfi_offset 6, -8
 997              		.cfi_offset 14, -4
 998 0002 0C46     		mov	r4, r1
 999 0004 1546     		mov	r5, r2
 1000 0006 1E46     		mov	r6, r3
 370:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 371:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 1001              		.loc 1 371 3 is_stmt 1 view .LVU260
 372:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 373:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 1002              		.loc 1 373 3 view .LVU261
 1003 0008 FFF7FEFF 		bl	__NVIC_GetPriority
 1004              	.LVL56:
 1005              		.loc 1 373 3 is_stmt 0 view .LVU262
 1006 000c 3346     		mov	r3, r6
 1007 000e 2A46     		mov	r2, r5
 1008 0010 2146     		mov	r1, r4
 1009 0012 FFF7FEFF 		bl	NVIC_DecodePriority
 1010              	.LVL57:
 374:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1011              		.loc 1 374 1 view .LVU263
 1012 0016 70BD     		pop	{r4, r5, r6, pc}
 1013              		.loc 1 374 1 view .LVU264
 1014              		.cfi_endproc
 1015              	.LFE154:
 1017              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 1018              		.align	1
 1019              		.global	HAL_NVIC_SetPendingIRQ
 1020              		.syntax unified
 1021              		.thumb
 1022              		.thumb_func
 1024              	HAL_NVIC_SetPendingIRQ:
 1025              	.LVL58:
 1026              	.LFB155:
 375:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 376:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 377:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Sets Pending bit of an external interrupt.
 378:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 379:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 380:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 381:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 382:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 383:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 384:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1027              		.loc 1 384 1 is_stmt 1 view -0
 1028              		.cfi_startproc
ARM GAS  /tmp/cc3oKnwN.s 			page 89


 1029              		@ args = 0, pretend = 0, frame = 0
 1030              		@ frame_needed = 0, uses_anonymous_args = 0
 1031              		@ link register save eliminated.
 385:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 386:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1032              		.loc 1 386 3 view .LVU266
 387:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 388:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Set interrupt pending */
 389:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 1033              		.loc 1 389 3 view .LVU267
 1034              	.LBB60:
 1035              	.LBI60:
1978:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 1036              		.loc 2 1978 22 view .LVU268
 1037              	.LBB61:
1980:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 1038              		.loc 2 1980 3 view .LVU269
1980:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 1039              		.loc 2 1980 6 is_stmt 0 view .LVU270
 1040 0000 0028     		cmp	r0, #0
 1041              	.LVL59:
1980:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 1042              		.loc 2 1980 6 view .LVU271
 1043 0002 08DB     		blt	.L65
1982:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1044              		.loc 2 1982 5 is_stmt 1 view .LVU272
1982:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1045              		.loc 2 1982 81 is_stmt 0 view .LVU273
 1046 0004 00F01F02 		and	r2, r0, #31
1982:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1047              		.loc 2 1982 34 view .LVU274
 1048 0008 4009     		lsrs	r0, r0, #5
1982:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1049              		.loc 2 1982 45 view .LVU275
 1050 000a 0123     		movs	r3, #1
 1051 000c 9340     		lsls	r3, r3, r2
1982:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1052              		.loc 2 1982 43 view .LVU276
 1053 000e 4030     		adds	r0, r0, #64
 1054 0010 014A     		ldr	r2, .L67
 1055 0012 42F82030 		str	r3, [r2, r0, lsl #2]
 1056              	.LVL60:
 1057              	.L65:
1982:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1058              		.loc 2 1982 43 view .LVU277
 1059              	.LBE61:
 1060              	.LBE60:
 390:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1061              		.loc 1 390 1 view .LVU278
 1062 0016 7047     		bx	lr
 1063              	.L68:
 1064              		.align	2
 1065              	.L67:
 1066 0018 00E100E0 		.word	-536813312
 1067              		.cfi_endproc
 1068              	.LFE155:
 1070              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
ARM GAS  /tmp/cc3oKnwN.s 			page 90


 1071              		.align	1
 1072              		.global	HAL_NVIC_GetPendingIRQ
 1073              		.syntax unified
 1074              		.thumb
 1075              		.thumb_func
 1077              	HAL_NVIC_GetPendingIRQ:
 1078              	.LVL61:
 1079              	.LFB156:
 391:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 392:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 393:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Gets Pending Interrupt (reads the pending register in the NVIC
 394:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         and returns the pending bit for the specified interrupt).
 395:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 396:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *          This parameter can be an enumerator of IRQn_Type enumeration
 397:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 398:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval status  - 0  Interrupt status is not pending.
 399:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 400:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 401:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 402:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1080              		.loc 1 402 1 is_stmt 1 view -0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 0
 1083              		@ frame_needed = 0, uses_anonymous_args = 0
 1084              		@ link register save eliminated.
 403:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 404:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1085              		.loc 1 404 3 view .LVU280
 405:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 406:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 407:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 1086              		.loc 1 407 3 view .LVU281
 1087              	.LBB62:
 1088              	.LBI62:
1959:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 1089              		.loc 2 1959 26 view .LVU282
 1090              	.LBB63:
1961:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 1091              		.loc 2 1961 3 view .LVU283
1961:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 1092              		.loc 2 1961 6 is_stmt 0 view .LVU284
 1093 0000 0028     		cmp	r0, #0
 1094              	.LVL62:
1961:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 1095              		.loc 2 1961 6 view .LVU285
 1096 0002 0BDB     		blt	.L71
1963:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1097              		.loc 2 1963 5 is_stmt 1 view .LVU286
1963:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1098              		.loc 2 1963 54 is_stmt 0 view .LVU287
 1099 0004 4309     		lsrs	r3, r0, #5
1963:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1100              		.loc 2 1963 35 view .LVU288
 1101 0006 4033     		adds	r3, r3, #64
 1102 0008 054A     		ldr	r2, .L72
 1103 000a 52F82330 		ldr	r3, [r2, r3, lsl #2]
1963:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
ARM GAS  /tmp/cc3oKnwN.s 			page 91


 1104              		.loc 2 1963 91 view .LVU289
 1105 000e 00F01F00 		and	r0, r0, #31
1963:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1106              		.loc 2 1963 103 view .LVU290
 1107 0012 23FA00F0 		lsr	r0, r3, r0
1963:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1108              		.loc 2 1963 12 view .LVU291
 1109 0016 00F00100 		and	r0, r0, #1
 1110 001a 7047     		bx	lr
 1111              	.L71:
1967:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1112              		.loc 2 1967 11 view .LVU292
 1113 001c 0020     		movs	r0, #0
 1114              	.LVL63:
1967:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1115              		.loc 2 1967 11 view .LVU293
 1116              	.LBE63:
 1117              	.LBE62:
 408:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1118              		.loc 1 408 1 view .LVU294
 1119 001e 7047     		bx	lr
 1120              	.L73:
 1121              		.align	2
 1122              	.L72:
 1123 0020 00E100E0 		.word	-536813312
 1124              		.cfi_endproc
 1125              	.LFE156:
 1127              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 1128              		.align	1
 1129              		.global	HAL_NVIC_ClearPendingIRQ
 1130              		.syntax unified
 1131              		.thumb
 1132              		.thumb_func
 1134              	HAL_NVIC_ClearPendingIRQ:
 1135              	.LVL64:
 1136              	.LFB157:
 409:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 410:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 411:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Clears the pending bit of an external interrupt.
 412:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 413:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 414:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 415:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 416:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 417:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 418:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1137              		.loc 1 418 1 is_stmt 1 view -0
 1138              		.cfi_startproc
 1139              		@ args = 0, pretend = 0, frame = 0
 1140              		@ frame_needed = 0, uses_anonymous_args = 0
 1141              		@ link register save eliminated.
 419:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 420:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1142              		.loc 1 420 3 view .LVU296
 421:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 422:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Clear pending interrupt */
 423:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
ARM GAS  /tmp/cc3oKnwN.s 			page 92


 1143              		.loc 1 423 3 view .LVU297
 1144              	.LBB64:
 1145              	.LBI64:
1993:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 1146              		.loc 2 1993 22 view .LVU298
 1147              	.LBB65:
1995:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 1148              		.loc 2 1995 3 view .LVU299
1995:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 1149              		.loc 2 1995 6 is_stmt 0 view .LVU300
 1150 0000 0028     		cmp	r0, #0
 1151              	.LVL65:
1995:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 1152              		.loc 2 1995 6 view .LVU301
 1153 0002 08DB     		blt	.L74
1997:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1154              		.loc 2 1997 5 is_stmt 1 view .LVU302
1997:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1155              		.loc 2 1997 81 is_stmt 0 view .LVU303
 1156 0004 00F01F02 		and	r2, r0, #31
1997:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1157              		.loc 2 1997 34 view .LVU304
 1158 0008 4009     		lsrs	r0, r0, #5
1997:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1159              		.loc 2 1997 45 view .LVU305
 1160 000a 0123     		movs	r3, #1
 1161 000c 9340     		lsls	r3, r3, r2
1997:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1162              		.loc 2 1997 43 view .LVU306
 1163 000e 6030     		adds	r0, r0, #96
 1164 0010 014A     		ldr	r2, .L76
 1165 0012 42F82030 		str	r3, [r2, r0, lsl #2]
 1166              	.LVL66:
 1167              	.L74:
1997:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1168              		.loc 2 1997 43 view .LVU307
 1169              	.LBE65:
 1170              	.LBE64:
 424:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1171              		.loc 1 424 1 view .LVU308
 1172 0016 7047     		bx	lr
 1173              	.L77:
 1174              		.align	2
 1175              	.L76:
 1176 0018 00E100E0 		.word	-536813312
 1177              		.cfi_endproc
 1178              	.LFE157:
 1180              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 1181              		.align	1
 1182              		.global	HAL_NVIC_GetActive
 1183              		.syntax unified
 1184              		.thumb
 1185              		.thumb_func
 1187              	HAL_NVIC_GetActive:
 1188              	.LVL67:
 1189              	.LFB158:
 425:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
ARM GAS  /tmp/cc3oKnwN.s 			page 93


 426:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 427:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief Gets active interrupt ( reads the active register in NVIC and returns the active bit).
 428:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param IRQn External interrupt number
 429:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 430:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 431:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval status  - 0  Interrupt status is not pending.
 432:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 433:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 434:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 435:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1190              		.loc 1 435 1 is_stmt 1 view -0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 0
 1193              		@ frame_needed = 0, uses_anonymous_args = 0
 1194              		@ link register save eliminated.
 436:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 437:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1195              		.loc 1 437 3 view .LVU310
 438:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 439:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 440:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 1196              		.loc 1 440 3 view .LVU311
 1197              	.LBB66:
 1198              	.LBI66:
2010:lib/Drivers/CMSIS/Include/core_cm7.h **** {
 1199              		.loc 2 2010 26 view .LVU312
 1200              	.LBB67:
2012:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 1201              		.loc 2 2012 3 view .LVU313
2012:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 1202              		.loc 2 2012 6 is_stmt 0 view .LVU314
 1203 0000 0028     		cmp	r0, #0
 1204              	.LVL68:
2012:lib/Drivers/CMSIS/Include/core_cm7.h ****   {
 1205              		.loc 2 2012 6 view .LVU315
 1206 0002 0BDB     		blt	.L80
2014:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1207              		.loc 2 2014 5 is_stmt 1 view .LVU316
2014:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1208              		.loc 2 2014 54 is_stmt 0 view .LVU317
 1209 0004 4309     		lsrs	r3, r0, #5
2014:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1210              		.loc 2 2014 35 view .LVU318
 1211 0006 8033     		adds	r3, r3, #128
 1212 0008 054A     		ldr	r2, .L81
 1213 000a 52F82330 		ldr	r3, [r2, r3, lsl #2]
2014:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1214              		.loc 2 2014 91 view .LVU319
 1215 000e 00F01F00 		and	r0, r0, #31
2014:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1216              		.loc 2 2014 103 view .LVU320
 1217 0012 23FA00F0 		lsr	r0, r3, r0
2014:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1218              		.loc 2 2014 12 view .LVU321
 1219 0016 00F00100 		and	r0, r0, #1
 1220 001a 7047     		bx	lr
 1221              	.L80:
ARM GAS  /tmp/cc3oKnwN.s 			page 94


2018:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1222              		.loc 2 2018 11 view .LVU322
 1223 001c 0020     		movs	r0, #0
 1224              	.LVL69:
2018:lib/Drivers/CMSIS/Include/core_cm7.h ****   }
 1225              		.loc 2 2018 11 view .LVU323
 1226              	.LBE67:
 1227              	.LBE66:
 441:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1228              		.loc 1 441 1 view .LVU324
 1229 001e 7047     		bx	lr
 1230              	.L82:
 1231              		.align	2
 1232              	.L81:
 1233 0020 00E100E0 		.word	-536813312
 1234              		.cfi_endproc
 1235              	.LFE158:
 1237              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 1238              		.align	1
 1239              		.global	HAL_SYSTICK_CLKSourceConfig
 1240              		.syntax unified
 1241              		.thumb
 1242              		.thumb_func
 1244              	HAL_SYSTICK_CLKSourceConfig:
 1245              	.LVL70:
 1246              	.LFB159:
 442:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 443:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 444:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Configures the SysTick clock source.
 445:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  CLKSource specifies the SysTick clock source.
 446:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 447:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 448:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 449:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 450:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 451:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 452:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1247              		.loc 1 452 1 is_stmt 1 view -0
 1248              		.cfi_startproc
 1249              		@ args = 0, pretend = 0, frame = 0
 1250              		@ frame_needed = 0, uses_anonymous_args = 0
 1251              		@ link register save eliminated.
 453:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 454:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 1252              		.loc 1 454 3 view .LVU326
 455:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 1253              		.loc 1 455 3 view .LVU327
 1254              		.loc 1 455 6 is_stmt 0 view .LVU328
 1255 0000 0428     		cmp	r0, #4
 1256 0002 06D0     		beq	.L86
 456:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 457:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 458:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 459:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   else
 460:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 461:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 1257              		.loc 1 461 5 is_stmt 1 view .LVU329
ARM GAS  /tmp/cc3oKnwN.s 			page 95


 1258              		.loc 1 461 12 is_stmt 0 view .LVU330
 1259 0004 4FF0E022 		mov	r2, #-536813568
 1260 0008 1369     		ldr	r3, [r2, #16]
 1261              		.loc 1 461 19 view .LVU331
 1262 000a 23F00403 		bic	r3, r3, #4
 1263 000e 1361     		str	r3, [r2, #16]
 462:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 463:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1264              		.loc 1 463 1 view .LVU332
 1265 0010 7047     		bx	lr
 1266              	.L86:
 457:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 1267              		.loc 1 457 5 is_stmt 1 view .LVU333
 457:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 1268              		.loc 1 457 12 is_stmt 0 view .LVU334
 1269 0012 4FF0E022 		mov	r2, #-536813568
 1270 0016 1369     		ldr	r3, [r2, #16]
 457:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 1271              		.loc 1 457 19 view .LVU335
 1272 0018 43F00403 		orr	r3, r3, #4
 1273 001c 1361     		str	r3, [r2, #16]
 1274 001e 7047     		bx	lr
 1275              		.cfi_endproc
 1276              	.LFE159:
 1278              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 1279              		.align	1
 1280              		.weak	HAL_SYSTICK_Callback
 1281              		.syntax unified
 1282              		.thumb
 1283              		.thumb_func
 1285              	HAL_SYSTICK_Callback:
 1286              	.LFB161:
 464:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 465:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 466:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  This function handles SYSTICK interrupt request.
 467:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 468:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 469:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 470:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 471:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 472:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 473:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 474:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 475:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 476:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 477:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 478:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 479:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1287              		.loc 1 479 1 is_stmt 1 view -0
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 0
 1290              		@ frame_needed = 0, uses_anonymous_args = 0
 1291              		@ link register save eliminated.
 480:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 481:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 482:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    */
 483:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
ARM GAS  /tmp/cc3oKnwN.s 			page 96


 1292              		.loc 1 483 1 view .LVU337
 1293 0000 7047     		bx	lr
 1294              		.cfi_endproc
 1295              	.LFE161:
 1297              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 1298              		.align	1
 1299              		.global	HAL_SYSTICK_IRQHandler
 1300              		.syntax unified
 1301              		.thumb
 1302              		.thumb_func
 1304              	HAL_SYSTICK_IRQHandler:
 1305              	.LFB160:
 470:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 1306              		.loc 1 470 1 view -0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 0
 1309              		@ frame_needed = 0, uses_anonymous_args = 0
 1310 0000 08B5     		push	{r3, lr}
 1311              	.LCFI7:
 1312              		.cfi_def_cfa_offset 8
 1313              		.cfi_offset 3, -8
 1314              		.cfi_offset 14, -4
 471:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1315              		.loc 1 471 3 view .LVU339
 1316 0002 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 1317              	.LVL71:
 472:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 1318              		.loc 1 472 1 is_stmt 0 view .LVU340
 1319 0006 08BD     		pop	{r3, pc}
 1320              		.cfi_endproc
 1321              	.LFE160:
 1323              		.section	.text.HAL_GetCurrentCPUID,"ax",%progbits
 1324              		.align	1
 1325              		.global	HAL_GetCurrentCPUID
 1326              		.syntax unified
 1327              		.thumb
 1328              		.thumb_func
 1330              	HAL_GetCurrentCPUID:
 1331              	.LFB162:
 484:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 485:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #if defined(DUAL_CORE)
 486:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 487:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 488:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Returns the current CPU ID.
 489:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval CPU identifier
 490:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 491:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_GetCurrentCPUID(void)
 492:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 493:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   if (((SCB->CPUID & 0x000000F0U) >> 4 )== 0x7U)
 494:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 495:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     return  CM7_CPUID;
 496:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 497:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   else
 498:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 499:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     return CM4_CPUID;
 500:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 501:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
ARM GAS  /tmp/cc3oKnwN.s 			page 97


 502:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 503:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #else
 504:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 505:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 506:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** * @brief  Returns the current CPU ID.
 507:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** * @retval CPU identifier
 508:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** */
 509:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_GetCurrentCPUID(void)
 510:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1332              		.loc 1 510 1 is_stmt 1 view -0
 1333              		.cfi_startproc
 1334              		@ args = 0, pretend = 0, frame = 0
 1335              		@ frame_needed = 0, uses_anonymous_args = 0
 1336              		@ link register save eliminated.
 511:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   return  CM7_CPUID;
 1337              		.loc 1 511 3 view .LVU342
 512:lib/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1338              		.loc 1 512 1 is_stmt 0 view .LVU343
 1339 0000 0320     		movs	r0, #3
 1340 0002 7047     		bx	lr
 1341              		.cfi_endproc
 1342              	.LFE162:
 1344              		.text
 1345              	.Letext0:
 1346              		.file 4 "lib/Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h750xx.h"
 1347              		.file 5 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1348              		.file 6 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1349              		.file 7 "lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
ARM GAS  /tmp/cc3oKnwN.s 			page 98


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_cortex.c
     /tmp/cc3oKnwN.s:20     .text.__NVIC_EnableIRQ:0000000000000000 $t
     /tmp/cc3oKnwN.s:25     .text.__NVIC_EnableIRQ:0000000000000000 __NVIC_EnableIRQ
     /tmp/cc3oKnwN.s:59     .text.__NVIC_EnableIRQ:0000000000000018 $d
     /tmp/cc3oKnwN.s:64     .text.__NVIC_DisableIRQ:0000000000000000 $t
     /tmp/cc3oKnwN.s:69     .text.__NVIC_DisableIRQ:0000000000000000 __NVIC_DisableIRQ
     /tmp/cc3oKnwN.s:130    .text.__NVIC_DisableIRQ:0000000000000020 $d
     /tmp/cc3oKnwN.s:135    .text.__NVIC_SetPriority:0000000000000000 $t
     /tmp/cc3oKnwN.s:140    .text.__NVIC_SetPriority:0000000000000000 __NVIC_SetPriority
     /tmp/cc3oKnwN.s:182    .text.__NVIC_SetPriority:000000000000001c $d
     /tmp/cc3oKnwN.s:188    .text.__NVIC_GetPriority:0000000000000000 $t
     /tmp/cc3oKnwN.s:193    .text.__NVIC_GetPriority:0000000000000000 __NVIC_GetPriority
     /tmp/cc3oKnwN.s:228    .text.__NVIC_GetPriority:0000000000000018 $d
     /tmp/cc3oKnwN.s:234    .text.NVIC_EncodePriority:0000000000000000 $t
     /tmp/cc3oKnwN.s:239    .text.NVIC_EncodePriority:0000000000000000 NVIC_EncodePriority
     /tmp/cc3oKnwN.s:301    .text.NVIC_DecodePriority:0000000000000000 $t
     /tmp/cc3oKnwN.s:306    .text.NVIC_DecodePriority:0000000000000000 NVIC_DecodePriority
     /tmp/cc3oKnwN.s:375    .text.__NVIC_SystemReset:0000000000000000 $t
     /tmp/cc3oKnwN.s:380    .text.__NVIC_SystemReset:0000000000000000 __NVIC_SystemReset
     /tmp/cc3oKnwN.s:441    .text.__NVIC_SystemReset:000000000000001c $d
     /tmp/cc3oKnwN.s:447    .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 $t
     /tmp/cc3oKnwN.s:453    .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 HAL_NVIC_SetPriorityGrouping
     /tmp/cc3oKnwN.s:507    .text.HAL_NVIC_SetPriorityGrouping:000000000000001c $d
     /tmp/cc3oKnwN.s:513    .text.HAL_NVIC_SetPriority:0000000000000000 $t
     /tmp/cc3oKnwN.s:519    .text.HAL_NVIC_SetPriority:0000000000000000 HAL_NVIC_SetPriority
     /tmp/cc3oKnwN.s:565    .text.HAL_NVIC_SetPriority:000000000000001c $d
     /tmp/cc3oKnwN.s:570    .text.HAL_NVIC_EnableIRQ:0000000000000000 $t
     /tmp/cc3oKnwN.s:576    .text.HAL_NVIC_EnableIRQ:0000000000000000 HAL_NVIC_EnableIRQ
     /tmp/cc3oKnwN.s:599    .text.HAL_NVIC_DisableIRQ:0000000000000000 $t
     /tmp/cc3oKnwN.s:605    .text.HAL_NVIC_DisableIRQ:0000000000000000 HAL_NVIC_DisableIRQ
     /tmp/cc3oKnwN.s:628    .text.HAL_NVIC_SystemReset:0000000000000000 $t
     /tmp/cc3oKnwN.s:634    .text.HAL_NVIC_SystemReset:0000000000000000 HAL_NVIC_SystemReset
     /tmp/cc3oKnwN.s:653    .text.HAL_SYSTICK_Config:0000000000000000 $t
     /tmp/cc3oKnwN.s:659    .text.HAL_SYSTICK_Config:0000000000000000 HAL_SYSTICK_Config
     /tmp/cc3oKnwN.s:724    .text.HAL_SYSTICK_Config:0000000000000024 $d
     /tmp/cc3oKnwN.s:729    .text.HAL_MPU_Disable:0000000000000000 $t
     /tmp/cc3oKnwN.s:735    .text.HAL_MPU_Disable:0000000000000000 HAL_MPU_Disable
     /tmp/cc3oKnwN.s:772    .text.HAL_MPU_Disable:0000000000000018 $d
     /tmp/cc3oKnwN.s:777    .text.HAL_MPU_Enable:0000000000000000 $t
     /tmp/cc3oKnwN.s:783    .text.HAL_MPU_Enable:0000000000000000 HAL_MPU_Enable
     /tmp/cc3oKnwN.s:837    .text.HAL_MPU_Enable:000000000000001c $d
     /tmp/cc3oKnwN.s:842    .text.HAL_MPU_ConfigRegion:0000000000000000 $t
     /tmp/cc3oKnwN.s:848    .text.HAL_MPU_ConfigRegion:0000000000000000 HAL_MPU_ConfigRegion
     /tmp/cc3oKnwN.s:937    .text.HAL_MPU_ConfigRegion:000000000000005c $d
     /tmp/cc3oKnwN.s:942    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 $t
     /tmp/cc3oKnwN.s:948    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 HAL_NVIC_GetPriorityGrouping
     /tmp/cc3oKnwN.s:972    .text.HAL_NVIC_GetPriorityGrouping:000000000000000c $d
     /tmp/cc3oKnwN.s:977    .text.HAL_NVIC_GetPriority:0000000000000000 $t
     /tmp/cc3oKnwN.s:983    .text.HAL_NVIC_GetPriority:0000000000000000 HAL_NVIC_GetPriority
     /tmp/cc3oKnwN.s:1018   .text.HAL_NVIC_SetPendingIRQ:0000000000000000 $t
     /tmp/cc3oKnwN.s:1024   .text.HAL_NVIC_SetPendingIRQ:0000000000000000 HAL_NVIC_SetPendingIRQ
     /tmp/cc3oKnwN.s:1066   .text.HAL_NVIC_SetPendingIRQ:0000000000000018 $d
     /tmp/cc3oKnwN.s:1071   .text.HAL_NVIC_GetPendingIRQ:0000000000000000 $t
     /tmp/cc3oKnwN.s:1077   .text.HAL_NVIC_GetPendingIRQ:0000000000000000 HAL_NVIC_GetPendingIRQ
     /tmp/cc3oKnwN.s:1123   .text.HAL_NVIC_GetPendingIRQ:0000000000000020 $d
     /tmp/cc3oKnwN.s:1128   .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 $t
ARM GAS  /tmp/cc3oKnwN.s 			page 99


     /tmp/cc3oKnwN.s:1134   .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 HAL_NVIC_ClearPendingIRQ
     /tmp/cc3oKnwN.s:1176   .text.HAL_NVIC_ClearPendingIRQ:0000000000000018 $d
     /tmp/cc3oKnwN.s:1181   .text.HAL_NVIC_GetActive:0000000000000000 $t
     /tmp/cc3oKnwN.s:1187   .text.HAL_NVIC_GetActive:0000000000000000 HAL_NVIC_GetActive
     /tmp/cc3oKnwN.s:1233   .text.HAL_NVIC_GetActive:0000000000000020 $d
     /tmp/cc3oKnwN.s:1238   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 $t
     /tmp/cc3oKnwN.s:1244   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 HAL_SYSTICK_CLKSourceConfig
     /tmp/cc3oKnwN.s:1279   .text.HAL_SYSTICK_Callback:0000000000000000 $t
     /tmp/cc3oKnwN.s:1285   .text.HAL_SYSTICK_Callback:0000000000000000 HAL_SYSTICK_Callback
     /tmp/cc3oKnwN.s:1298   .text.HAL_SYSTICK_IRQHandler:0000000000000000 $t
     /tmp/cc3oKnwN.s:1304   .text.HAL_SYSTICK_IRQHandler:0000000000000000 HAL_SYSTICK_IRQHandler
     /tmp/cc3oKnwN.s:1324   .text.HAL_GetCurrentCPUID:0000000000000000 $t
     /tmp/cc3oKnwN.s:1330   .text.HAL_GetCurrentCPUID:0000000000000000 HAL_GetCurrentCPUID

NO UNDEFINED SYMBOLS
