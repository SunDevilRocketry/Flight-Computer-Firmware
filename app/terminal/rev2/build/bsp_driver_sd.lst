ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"bsp_driver_sd.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.BSP_SD_ITConfig,"ax",%progbits
  19              		.align	1
  20              		.weak	BSP_SD_ITConfig
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	BSP_SD_ITConfig:
  26              	.LFB145:
  27              		.file 1 "../../../lib/FATFS/Target/bsp_driver_sd.c"
   1:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN Header */
   2:../../../lib/FATFS/Target/bsp_driver_sd.c **** /**
   3:../../../lib/FATFS/Target/bsp_driver_sd.c ****  ******************************************************************************
   4:../../../lib/FATFS/Target/bsp_driver_sd.c ****  * @file    bsp_driver_sd.c for H7 (based on stm32h743i_eval_sd.c)
   5:../../../lib/FATFS/Target/bsp_driver_sd.c ****  * @brief   This file includes a generic uSD card driver.
   6:../../../lib/FATFS/Target/bsp_driver_sd.c ****  *          To be completed by the user according to the board used for the project.
   7:../../../lib/FATFS/Target/bsp_driver_sd.c ****  * @note    Some functions generated as weak: they can be overridden by
   8:../../../lib/FATFS/Target/bsp_driver_sd.c ****  *          - code in user files
   9:../../../lib/FATFS/Target/bsp_driver_sd.c ****  *          - or BSP code from the FW pack files
  10:../../../lib/FATFS/Target/bsp_driver_sd.c ****  *          if such files are added to the generated project (by the user).
  11:../../../lib/FATFS/Target/bsp_driver_sd.c ****  ******************************************************************************
  12:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @attention
  13:../../../lib/FATFS/Target/bsp_driver_sd.c ****   *
  14:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * Copyright (c) 2022 STMicroelectronics.
  15:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * All rights reserved.
  16:../../../lib/FATFS/Target/bsp_driver_sd.c ****   *
  17:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * This software is licensed under terms that can be found in the LICENSE file
  18:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * in the root directory of this software component.
  19:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  20:../../../lib/FATFS/Target/bsp_driver_sd.c ****   *
  21:../../../lib/FATFS/Target/bsp_driver_sd.c ****  ******************************************************************************
  22:../../../lib/FATFS/Target/bsp_driver_sd.c ****  */
  23:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE END Header */
  24:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
  25:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN FirstSection */
  26:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* can be used to modify / undefine following code or add new definitions */
  27:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE END FirstSection */
  28:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* Includes ------------------------------------------------------------------*/
  29:../../../lib/FATFS/Target/bsp_driver_sd.c **** #include "bsp_driver_sd.h"
  30:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
  31:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* Extern variables ---------------------------------------------------------*/
ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 2


  32:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
  33:../../../lib/FATFS/Target/bsp_driver_sd.c **** extern SD_HandleTypeDef hsd1;
  34:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
  35:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeInitSection */
  36:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* can be used to modify / undefine following code or add code */
  37:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeInitSection */
  38:../../../lib/FATFS/Target/bsp_driver_sd.c **** /**
  39:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @brief  Initializes the SD card device.
  40:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
  41:../../../lib/FATFS/Target/bsp_driver_sd.c ****   */
  42:../../../lib/FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_Init(void)
  43:../../../lib/FATFS/Target/bsp_driver_sd.c **** {
  44:../../../lib/FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
  45:../../../lib/FATFS/Target/bsp_driver_sd.c ****   /* Check if the SD card is plugged in the slot */
  46:../../../lib/FATFS/Target/bsp_driver_sd.c ****   if (BSP_SD_IsDetected() != SD_PRESENT)
  47:../../../lib/FATFS/Target/bsp_driver_sd.c ****   {
  48:../../../lib/FATFS/Target/bsp_driver_sd.c ****     return MSD_ERROR_SD_NOT_PRESENT;
  49:../../../lib/FATFS/Target/bsp_driver_sd.c ****   }
  50:../../../lib/FATFS/Target/bsp_driver_sd.c ****   /* HAL SD initialization */
  51:../../../lib/FATFS/Target/bsp_driver_sd.c ****   sd_state = HAL_SD_Init(&hsd1);
  52:../../../lib/FATFS/Target/bsp_driver_sd.c ****   /* Configure SD Bus width (4 bits mode selected) */
  53:../../../lib/FATFS/Target/bsp_driver_sd.c ****   if (sd_state == MSD_OK)
  54:../../../lib/FATFS/Target/bsp_driver_sd.c ****   {
  55:../../../lib/FATFS/Target/bsp_driver_sd.c ****     /* Enable wide operation */
  56:../../../lib/FATFS/Target/bsp_driver_sd.c ****     if (HAL_SD_ConfigWideBusOperation(&hsd1, SDMMC_BUS_WIDE_4B) != HAL_OK)
  57:../../../lib/FATFS/Target/bsp_driver_sd.c ****     {
  58:../../../lib/FATFS/Target/bsp_driver_sd.c ****       sd_state = MSD_ERROR;
  59:../../../lib/FATFS/Target/bsp_driver_sd.c ****     }
  60:../../../lib/FATFS/Target/bsp_driver_sd.c ****   }
  61:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
  62:../../../lib/FATFS/Target/bsp_driver_sd.c ****   return sd_state;
  63:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
  64:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN AfterInitSection */
  65:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
  66:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE END AfterInitSection */
  67:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
  68:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN InterruptMode */
  69:../../../lib/FATFS/Target/bsp_driver_sd.c **** /**
  70:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @brief  Configures Interrupt mode for SD detection pin.
  71:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @retval Returns 0
  72:../../../lib/FATFS/Target/bsp_driver_sd.c ****   */
  73:../../../lib/FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_ITConfig(void)
  74:../../../lib/FATFS/Target/bsp_driver_sd.c **** {
  28              		.loc 1 74 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  75:../../../lib/FATFS/Target/bsp_driver_sd.c ****   /* Code to be updated by the user or replaced by one from the FW pack (in a stmxxxx_sd.c file) */
  76:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
  77:../../../lib/FATFS/Target/bsp_driver_sd.c ****   return (uint8_t)0;
  33              		.loc 1 77 3 view .LVU1
  78:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
  34              		.loc 1 78 1 is_stmt 0 view .LVU2
  35 0000 0020     		movs	r0, #0
  36 0002 7047     		bx	lr
  37              		.cfi_endproc
ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 3


  38              	.LFE145:
  40              		.section	.text.BSP_SD_ReadBlocks,"ax",%progbits
  41              		.align	1
  42              		.weak	BSP_SD_ReadBlocks
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  47              	BSP_SD_ReadBlocks:
  48              	.LVL0:
  49              	.LFB146:
  79:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
  80:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE END InterruptMode */
  81:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
  82:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeReadBlocksSection */
  83:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
  84:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeReadBlocksSection */
  85:../../../lib/FATFS/Target/bsp_driver_sd.c **** /**
  86:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @brief  Reads block(s) from a specified address in an SD card, in polling mode.
  87:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
  88:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  ReadAddr: Address from where data is to be read
  89:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to read
  90:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  Timeout: Timeout for read operation
  91:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
  92:../../../lib/FATFS/Target/bsp_driver_sd.c ****   */
  93:../../../lib/FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_ReadBlocks(uint32_t *pData, uint32_t ReadAddr, uint32_t NumOfBlocks, uint32_t
  94:../../../lib/FATFS/Target/bsp_driver_sd.c **** {
  50              		.loc 1 94 1 is_stmt 1 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		.loc 1 94 1 is_stmt 0 view .LVU4
  55 0000 00B5     		push	{lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 83B0     		sub	sp, sp, #12
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 16
  95:../../../lib/FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
  62              		.loc 1 95 3 is_stmt 1 view .LVU5
  63              	.LVL1:
  96:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
  97:../../../lib/FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_ReadBlocks(&hsd1, (uint8_t *)pData, ReadAddr, NumOfBlocks, Timeout) != HAL_OK)
  64              		.loc 1 97 3 view .LVU6
  65              		.loc 1 97 7 is_stmt 0 view .LVU7
  66 0004 0093     		str	r3, [sp]
  67 0006 1346     		mov	r3, r2
  68              	.LVL2:
  69              		.loc 1 97 7 view .LVU8
  70 0008 0A46     		mov	r2, r1
  71              	.LVL3:
  72              		.loc 1 97 7 view .LVU9
  73 000a 0146     		mov	r1, r0
  74              	.LVL4:
  75              		.loc 1 97 7 view .LVU10
  76 000c 0348     		ldr	r0, .L6
  77              	.LVL5:
ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 4


  78              		.loc 1 97 7 view .LVU11
  79 000e FFF7FEFF 		bl	HAL_SD_ReadBlocks
  80              	.LVL6:
  81              		.loc 1 97 6 view .LVU12
  82 0012 00B1     		cbz	r0, .L3
  98:../../../lib/FATFS/Target/bsp_driver_sd.c ****   {
  99:../../../lib/FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
  83              		.loc 1 99 14 view .LVU13
  84 0014 0120     		movs	r0, #1
  85              	.L3:
  86              	.LVL7:
 100:../../../lib/FATFS/Target/bsp_driver_sd.c ****   }
 101:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 102:../../../lib/FATFS/Target/bsp_driver_sd.c ****   return sd_state;
  87              		.loc 1 102 3 is_stmt 1 view .LVU14
 103:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
  88              		.loc 1 103 1 is_stmt 0 view .LVU15
  89 0016 03B0     		add	sp, sp, #12
  90              	.LCFI2:
  91              		.cfi_def_cfa_offset 4
  92              		@ sp needed
  93 0018 5DF804FB 		ldr	pc, [sp], #4
  94              	.L7:
  95              		.align	2
  96              	.L6:
  97 001c 00000000 		.word	hsd1
  98              		.cfi_endproc
  99              	.LFE146:
 101              		.section	.text.BSP_SD_WriteBlocks,"ax",%progbits
 102              		.align	1
 103              		.weak	BSP_SD_WriteBlocks
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 108              	BSP_SD_WriteBlocks:
 109              	.LVL8:
 110              	.LFB147:
 104:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 105:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeWriteBlocksSection */
 106:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 107:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeWriteBlocksSection */
 108:../../../lib/FATFS/Target/bsp_driver_sd.c **** /**
 109:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @brief  Writes block(s) to a specified address in an SD card, in polling mode.
 110:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 111:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  WriteAddr: Address from where data is to be written
 112:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to write
 113:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  Timeout: Timeout for write operation
 114:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
 115:../../../lib/FATFS/Target/bsp_driver_sd.c ****   */
 116:../../../lib/FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_WriteBlocks(uint32_t *pData, uint32_t WriteAddr, uint32_t NumOfBlocks, uint32
 117:../../../lib/FATFS/Target/bsp_driver_sd.c **** {
 111              		.loc 1 117 1 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		.loc 1 117 1 is_stmt 0 view .LVU17
 116 0000 00B5     		push	{lr}
ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 5


 117              	.LCFI3:
 118              		.cfi_def_cfa_offset 4
 119              		.cfi_offset 14, -4
 120 0002 83B0     		sub	sp, sp, #12
 121              	.LCFI4:
 122              		.cfi_def_cfa_offset 16
 118:../../../lib/FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 123              		.loc 1 118 3 is_stmt 1 view .LVU18
 124              	.LVL9:
 119:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 120:../../../lib/FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_WriteBlocks(&hsd1, (uint8_t *)pData, WriteAddr, NumOfBlocks, Timeout) != HAL_OK)
 125              		.loc 1 120 3 view .LVU19
 126              		.loc 1 120 7 is_stmt 0 view .LVU20
 127 0004 0093     		str	r3, [sp]
 128 0006 1346     		mov	r3, r2
 129              	.LVL10:
 130              		.loc 1 120 7 view .LVU21
 131 0008 0A46     		mov	r2, r1
 132              	.LVL11:
 133              		.loc 1 120 7 view .LVU22
 134 000a 0146     		mov	r1, r0
 135              	.LVL12:
 136              		.loc 1 120 7 view .LVU23
 137 000c 0348     		ldr	r0, .L12
 138              	.LVL13:
 139              		.loc 1 120 7 view .LVU24
 140 000e FFF7FEFF 		bl	HAL_SD_WriteBlocks
 141              	.LVL14:
 142              		.loc 1 120 6 view .LVU25
 143 0012 00B1     		cbz	r0, .L9
 121:../../../lib/FATFS/Target/bsp_driver_sd.c ****   {
 122:../../../lib/FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 144              		.loc 1 122 14 view .LVU26
 145 0014 0120     		movs	r0, #1
 146              	.L9:
 147              	.LVL15:
 123:../../../lib/FATFS/Target/bsp_driver_sd.c ****   }
 124:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 125:../../../lib/FATFS/Target/bsp_driver_sd.c ****   return sd_state;
 148              		.loc 1 125 3 is_stmt 1 view .LVU27
 126:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
 149              		.loc 1 126 1 is_stmt 0 view .LVU28
 150 0016 03B0     		add	sp, sp, #12
 151              	.LCFI5:
 152              		.cfi_def_cfa_offset 4
 153              		@ sp needed
 154 0018 5DF804FB 		ldr	pc, [sp], #4
 155              	.L13:
 156              		.align	2
 157              	.L12:
 158 001c 00000000 		.word	hsd1
 159              		.cfi_endproc
 160              	.LFE147:
 162              		.section	.text.BSP_SD_ReadBlocks_DMA,"ax",%progbits
 163              		.align	1
 164              		.weak	BSP_SD_ReadBlocks_DMA
 165              		.syntax unified
ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 6


 166              		.thumb
 167              		.thumb_func
 169              	BSP_SD_ReadBlocks_DMA:
 170              	.LVL16:
 171              	.LFB148:
 127:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 128:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeReadDMABlocksSection */
 129:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 130:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeReadDMABlocksSection */
 131:../../../lib/FATFS/Target/bsp_driver_sd.c **** /**
 132:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @brief  Reads block(s) from a specified address in an SD card, in DMA mode.
 133:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 134:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  ReadAddr: Address from where data is to be read
 135:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to read
 136:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
 137:../../../lib/FATFS/Target/bsp_driver_sd.c ****   */
 138:../../../lib/FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_ReadBlocks_DMA(uint32_t *pData, uint32_t ReadAddr, uint32_t NumOfBlocks)
 139:../../../lib/FATFS/Target/bsp_driver_sd.c **** {
 172              		.loc 1 139 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		.loc 1 139 1 is_stmt 0 view .LVU30
 177 0000 08B5     		push	{r3, lr}
 178              	.LCFI6:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 3, -8
 181              		.cfi_offset 14, -4
 182 0002 1346     		mov	r3, r2
 140:../../../lib/FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 183              		.loc 1 140 3 is_stmt 1 view .LVU31
 184              	.LVL17:
 141:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 142:../../../lib/FATFS/Target/bsp_driver_sd.c ****   /* Read block(s) in DMA transfer mode */
 143:../../../lib/FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_ReadBlocks_DMA(&hsd1, (uint8_t *)pData, ReadAddr, NumOfBlocks) != HAL_OK)
 185              		.loc 1 143 3 view .LVU32
 186              		.loc 1 143 7 is_stmt 0 view .LVU33
 187 0004 0A46     		mov	r2, r1
 188              	.LVL18:
 189              		.loc 1 143 7 view .LVU34
 190 0006 0146     		mov	r1, r0
 191              	.LVL19:
 192              		.loc 1 143 7 view .LVU35
 193 0008 0248     		ldr	r0, .L18
 194              	.LVL20:
 195              		.loc 1 143 7 view .LVU36
 196 000a FFF7FEFF 		bl	HAL_SD_ReadBlocks_DMA
 197              	.LVL21:
 198              		.loc 1 143 6 view .LVU37
 199 000e 00B1     		cbz	r0, .L15
 144:../../../lib/FATFS/Target/bsp_driver_sd.c ****   {
 145:../../../lib/FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 200              		.loc 1 145 14 view .LVU38
 201 0010 0120     		movs	r0, #1
 202              	.L15:
 203              	.LVL22:
 146:../../../lib/FATFS/Target/bsp_driver_sd.c ****   }
ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 7


 147:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 148:../../../lib/FATFS/Target/bsp_driver_sd.c ****   return sd_state;
 204              		.loc 1 148 3 is_stmt 1 view .LVU39
 149:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
 205              		.loc 1 149 1 is_stmt 0 view .LVU40
 206 0012 08BD     		pop	{r3, pc}
 207              	.L19:
 208              		.align	2
 209              	.L18:
 210 0014 00000000 		.word	hsd1
 211              		.cfi_endproc
 212              	.LFE148:
 214              		.section	.text.BSP_SD_WriteBlocks_DMA,"ax",%progbits
 215              		.align	1
 216              		.weak	BSP_SD_WriteBlocks_DMA
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	BSP_SD_WriteBlocks_DMA:
 222              	.LVL23:
 223              	.LFB149:
 150:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 151:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeWriteDMABlocksSection */
 152:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 153:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeWriteDMABlocksSection */
 154:../../../lib/FATFS/Target/bsp_driver_sd.c **** /**
 155:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @brief  Writes block(s) to a specified address in an SD card, in DMA mode.
 156:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 157:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  WriteAddr: Address from where data is to be written
 158:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to write
 159:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
 160:../../../lib/FATFS/Target/bsp_driver_sd.c ****   */
 161:../../../lib/FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_WriteBlocks_DMA(uint32_t *pData, uint32_t WriteAddr, uint32_t NumOfBlocks)
 162:../../../lib/FATFS/Target/bsp_driver_sd.c **** {
 224              		.loc 1 162 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		.loc 1 162 1 is_stmt 0 view .LVU42
 229 0000 08B5     		push	{r3, lr}
 230              	.LCFI7:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 234 0002 1346     		mov	r3, r2
 163:../../../lib/FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 235              		.loc 1 163 3 is_stmt 1 view .LVU43
 236              	.LVL24:
 164:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 165:../../../lib/FATFS/Target/bsp_driver_sd.c ****   /* Write block(s) in DMA transfer mode */
 166:../../../lib/FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_WriteBlocks_DMA(&hsd1, (uint8_t *)pData, WriteAddr, NumOfBlocks) != HAL_OK)
 237              		.loc 1 166 3 view .LVU44
 238              		.loc 1 166 7 is_stmt 0 view .LVU45
 239 0004 0A46     		mov	r2, r1
 240              	.LVL25:
 241              		.loc 1 166 7 view .LVU46
 242 0006 0146     		mov	r1, r0
ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 8


 243              	.LVL26:
 244              		.loc 1 166 7 view .LVU47
 245 0008 0248     		ldr	r0, .L24
 246              	.LVL27:
 247              		.loc 1 166 7 view .LVU48
 248 000a FFF7FEFF 		bl	HAL_SD_WriteBlocks_DMA
 249              	.LVL28:
 250              		.loc 1 166 6 view .LVU49
 251 000e 00B1     		cbz	r0, .L21
 167:../../../lib/FATFS/Target/bsp_driver_sd.c ****   {
 168:../../../lib/FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 252              		.loc 1 168 14 view .LVU50
 253 0010 0120     		movs	r0, #1
 254              	.L21:
 255              	.LVL29:
 169:../../../lib/FATFS/Target/bsp_driver_sd.c ****   }
 170:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 171:../../../lib/FATFS/Target/bsp_driver_sd.c ****   return sd_state;
 256              		.loc 1 171 3 is_stmt 1 view .LVU51
 172:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
 257              		.loc 1 172 1 is_stmt 0 view .LVU52
 258 0012 08BD     		pop	{r3, pc}
 259              	.L25:
 260              		.align	2
 261              	.L24:
 262 0014 00000000 		.word	hsd1
 263              		.cfi_endproc
 264              	.LFE149:
 266              		.section	.text.BSP_SD_Erase,"ax",%progbits
 267              		.align	1
 268              		.weak	BSP_SD_Erase
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 273              	BSP_SD_Erase:
 274              	.LVL30:
 275              	.LFB150:
 173:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 174:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeEraseSection */
 175:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 176:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeEraseSection */
 177:../../../lib/FATFS/Target/bsp_driver_sd.c **** /**
 178:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @brief  Erases the specified memory area of the given SD card.
 179:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  StartAddr: Start byte address
 180:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  EndAddr: End byte address
 181:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
 182:../../../lib/FATFS/Target/bsp_driver_sd.c ****   */
 183:../../../lib/FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_Erase(uint32_t StartAddr, uint32_t EndAddr)
 184:../../../lib/FATFS/Target/bsp_driver_sd.c **** {
 276              		.loc 1 184 1 is_stmt 1 view -0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              		.loc 1 184 1 is_stmt 0 view .LVU54
 281 0000 08B5     		push	{r3, lr}
 282              	.LCFI8:
 283              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 9


 284              		.cfi_offset 3, -8
 285              		.cfi_offset 14, -4
 286 0002 0A46     		mov	r2, r1
 185:../../../lib/FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 287              		.loc 1 185 3 is_stmt 1 view .LVU55
 288              	.LVL31:
 186:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 187:../../../lib/FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_Erase(&hsd1, StartAddr, EndAddr) != HAL_OK)
 289              		.loc 1 187 3 view .LVU56
 290              		.loc 1 187 7 is_stmt 0 view .LVU57
 291 0004 0146     		mov	r1, r0
 292              	.LVL32:
 293              		.loc 1 187 7 view .LVU58
 294 0006 0348     		ldr	r0, .L30
 295              	.LVL33:
 296              		.loc 1 187 7 view .LVU59
 297 0008 FFF7FEFF 		bl	HAL_SD_Erase
 298              	.LVL34:
 299              		.loc 1 187 6 view .LVU60
 300 000c 00B1     		cbz	r0, .L27
 188:../../../lib/FATFS/Target/bsp_driver_sd.c ****   {
 189:../../../lib/FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 301              		.loc 1 189 14 view .LVU61
 302 000e 0120     		movs	r0, #1
 303              	.L27:
 304              	.LVL35:
 190:../../../lib/FATFS/Target/bsp_driver_sd.c ****   }
 191:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 192:../../../lib/FATFS/Target/bsp_driver_sd.c ****   return sd_state;
 305              		.loc 1 192 3 is_stmt 1 view .LVU62
 193:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
 306              		.loc 1 193 1 is_stmt 0 view .LVU63
 307 0010 08BD     		pop	{r3, pc}
 308              	.L31:
 309 0012 00BF     		.align	2
 310              	.L30:
 311 0014 00000000 		.word	hsd1
 312              		.cfi_endproc
 313              	.LFE150:
 315              		.section	.text.BSP_SD_GetCardState,"ax",%progbits
 316              		.align	1
 317              		.weak	BSP_SD_GetCardState
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 322              	BSP_SD_GetCardState:
 323              	.LFB151:
 194:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 195:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeGetCardStateSection */
 196:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 197:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeGetCardStateSection */
 198:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 199:../../../lib/FATFS/Target/bsp_driver_sd.c **** /**
 200:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @brief  Gets the current SD card data status.
 201:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  None
 202:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @retval Data transfer state.
 203:../../../lib/FATFS/Target/bsp_driver_sd.c ****   *          This value can be one of the following values:
ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 10


 204:../../../lib/FATFS/Target/bsp_driver_sd.c ****   *            @arg  SD_TRANSFER_OK: No data transfer is acting
 205:../../../lib/FATFS/Target/bsp_driver_sd.c ****   *            @arg  SD_TRANSFER_BUSY: Data transfer is acting
 206:../../../lib/FATFS/Target/bsp_driver_sd.c ****   */
 207:../../../lib/FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_GetCardState(void)
 208:../../../lib/FATFS/Target/bsp_driver_sd.c **** {
 324              		.loc 1 208 1 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328 0000 08B5     		push	{r3, lr}
 329              	.LCFI9:
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 3, -8
 332              		.cfi_offset 14, -4
 209:../../../lib/FATFS/Target/bsp_driver_sd.c ****   return ((HAL_SD_GetCardState(&hsd1) == HAL_SD_CARD_TRANSFER ) ? SD_TRANSFER_OK : SD_TRANSFER_BUSY
 333              		.loc 1 209 3 view .LVU65
 334              		.loc 1 209 12 is_stmt 0 view .LVU66
 335 0002 0348     		ldr	r0, .L34
 336 0004 FFF7FEFF 		bl	HAL_SD_GetCardState
 337              	.LVL36:
 210:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
 338              		.loc 1 210 1 view .LVU67
 339 0008 0438     		subs	r0, r0, #4
 340 000a 18BF     		it	ne
 341 000c 0120     		movne	r0, #1
 342 000e 08BD     		pop	{r3, pc}
 343              	.L35:
 344              		.align	2
 345              	.L34:
 346 0010 00000000 		.word	hsd1
 347              		.cfi_endproc
 348              	.LFE151:
 350              		.section	.text.BSP_SD_GetCardInfo,"ax",%progbits
 351              		.align	1
 352              		.weak	BSP_SD_GetCardInfo
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 357              	BSP_SD_GetCardInfo:
 358              	.LVL37:
 359              	.LFB152:
 211:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 212:../../../lib/FATFS/Target/bsp_driver_sd.c **** /**
 213:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @brief  Get SD information about specific SD card.
 214:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param  CardInfo: Pointer to HAL_SD_CardInfoTypedef structure
 215:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @retval None
 216:../../../lib/FATFS/Target/bsp_driver_sd.c ****   */
 217:../../../lib/FATFS/Target/bsp_driver_sd.c **** __weak void BSP_SD_GetCardInfo(HAL_SD_CardInfoTypeDef *CardInfo)
 218:../../../lib/FATFS/Target/bsp_driver_sd.c **** {
 360              		.loc 1 218 1 is_stmt 1 view -0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364              		.loc 1 218 1 is_stmt 0 view .LVU69
 365 0000 08B5     		push	{r3, lr}
 366              	.LCFI10:
 367              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 11


 368              		.cfi_offset 3, -8
 369              		.cfi_offset 14, -4
 370 0002 0146     		mov	r1, r0
 219:../../../lib/FATFS/Target/bsp_driver_sd.c ****   /* Get SD card Information */
 220:../../../lib/FATFS/Target/bsp_driver_sd.c ****   HAL_SD_GetCardInfo(&hsd1, CardInfo);
 371              		.loc 1 220 3 is_stmt 1 view .LVU70
 372 0004 0148     		ldr	r0, .L38
 373              	.LVL38:
 374              		.loc 1 220 3 is_stmt 0 view .LVU71
 375 0006 FFF7FEFF 		bl	HAL_SD_GetCardInfo
 376              	.LVL39:
 221:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
 377              		.loc 1 221 1 view .LVU72
 378 000a 08BD     		pop	{r3, pc}
 379              	.L39:
 380              		.align	2
 381              	.L38:
 382 000c 00000000 		.word	hsd1
 383              		.cfi_endproc
 384              	.LFE152:
 386              		.section	.text.BSP_SD_AbortCallback,"ax",%progbits
 387              		.align	1
 388              		.weak	BSP_SD_AbortCallback
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 393              	BSP_SD_AbortCallback:
 394              	.LFB156:
 222:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 223:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeCallBacksSection */
 224:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 225:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeCallBacksSection */
 226:../../../lib/FATFS/Target/bsp_driver_sd.c **** /**
 227:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @brief SD Abort callbacks
 228:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param hsd: SD handle
 229:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @retval None
 230:../../../lib/FATFS/Target/bsp_driver_sd.c ****   */
 231:../../../lib/FATFS/Target/bsp_driver_sd.c **** void HAL_SD_AbortCallback(SD_HandleTypeDef *hsd)
 232:../../../lib/FATFS/Target/bsp_driver_sd.c **** {
 233:../../../lib/FATFS/Target/bsp_driver_sd.c ****   BSP_SD_AbortCallback();
 234:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
 235:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 236:../../../lib/FATFS/Target/bsp_driver_sd.c **** /**
 237:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @brief Tx Transfer completed callback
 238:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param hsd: SD handle
 239:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @retval None
 240:../../../lib/FATFS/Target/bsp_driver_sd.c ****   */
 241:../../../lib/FATFS/Target/bsp_driver_sd.c **** void HAL_SD_TxCpltCallback(SD_HandleTypeDef *hsd)
 242:../../../lib/FATFS/Target/bsp_driver_sd.c **** {
 243:../../../lib/FATFS/Target/bsp_driver_sd.c ****   BSP_SD_WriteCpltCallback();
 244:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
 245:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 246:../../../lib/FATFS/Target/bsp_driver_sd.c **** /**
 247:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @brief Rx Transfer completed callback
 248:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @param hsd: SD handle
 249:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @retval None
 250:../../../lib/FATFS/Target/bsp_driver_sd.c ****   */
ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 12


 251:../../../lib/FATFS/Target/bsp_driver_sd.c **** void HAL_SD_RxCpltCallback(SD_HandleTypeDef *hsd)
 252:../../../lib/FATFS/Target/bsp_driver_sd.c **** {
 253:../../../lib/FATFS/Target/bsp_driver_sd.c ****   BSP_SD_ReadCpltCallback();
 254:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
 255:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 256:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN CallBacksSection_C */
 257:../../../lib/FATFS/Target/bsp_driver_sd.c **** /**
 258:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @brief BSP SD Abort callback
 259:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @retval None
 260:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @note empty (up to the user to fill it in or to remove it if useless)
 261:../../../lib/FATFS/Target/bsp_driver_sd.c ****   */
 262:../../../lib/FATFS/Target/bsp_driver_sd.c **** __weak void BSP_SD_AbortCallback(void)
 263:../../../lib/FATFS/Target/bsp_driver_sd.c **** {
 395              		.loc 1 263 1 is_stmt 1 view -0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 264:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 265:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
 400              		.loc 1 265 1 view .LVU74
 401 0000 7047     		bx	lr
 402              		.cfi_endproc
 403              	.LFE156:
 405              		.section	.text.HAL_SD_AbortCallback,"ax",%progbits
 406              		.align	1
 407              		.global	HAL_SD_AbortCallback
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 412              	HAL_SD_AbortCallback:
 413              	.LVL40:
 414              	.LFB153:
 232:../../../lib/FATFS/Target/bsp_driver_sd.c ****   BSP_SD_AbortCallback();
 415              		.loc 1 232 1 view -0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 232:../../../lib/FATFS/Target/bsp_driver_sd.c ****   BSP_SD_AbortCallback();
 419              		.loc 1 232 1 is_stmt 0 view .LVU76
 420 0000 08B5     		push	{r3, lr}
 421              	.LCFI11:
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 3, -8
 424              		.cfi_offset 14, -4
 233:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
 425              		.loc 1 233 3 is_stmt 1 view .LVU77
 426 0002 FFF7FEFF 		bl	BSP_SD_AbortCallback
 427              	.LVL41:
 234:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 428              		.loc 1 234 1 is_stmt 0 view .LVU78
 429 0006 08BD     		pop	{r3, pc}
 430              		.cfi_endproc
 431              	.LFE153:
 433              		.section	.text.BSP_SD_WriteCpltCallback,"ax",%progbits
 434              		.align	1
 435              		.weak	BSP_SD_WriteCpltCallback
ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 13


 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 440              	BSP_SD_WriteCpltCallback:
 441              	.LFB157:
 266:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 267:../../../lib/FATFS/Target/bsp_driver_sd.c **** /**
 268:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @brief BSP Tx Transfer completed callback
 269:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @retval None
 270:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @note empty (up to the user to fill it in or to remove it if useless)
 271:../../../lib/FATFS/Target/bsp_driver_sd.c ****   */
 272:../../../lib/FATFS/Target/bsp_driver_sd.c **** __weak void BSP_SD_WriteCpltCallback(void)
 273:../../../lib/FATFS/Target/bsp_driver_sd.c **** {
 442              		.loc 1 273 1 is_stmt 1 view -0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 274:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 275:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
 447              		.loc 1 275 1 view .LVU80
 448 0000 7047     		bx	lr
 449              		.cfi_endproc
 450              	.LFE157:
 452              		.section	.text.HAL_SD_TxCpltCallback,"ax",%progbits
 453              		.align	1
 454              		.global	HAL_SD_TxCpltCallback
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 459              	HAL_SD_TxCpltCallback:
 460              	.LVL42:
 461              	.LFB154:
 242:../../../lib/FATFS/Target/bsp_driver_sd.c ****   BSP_SD_WriteCpltCallback();
 462              		.loc 1 242 1 view -0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 242:../../../lib/FATFS/Target/bsp_driver_sd.c ****   BSP_SD_WriteCpltCallback();
 466              		.loc 1 242 1 is_stmt 0 view .LVU82
 467 0000 08B5     		push	{r3, lr}
 468              	.LCFI12:
 469              		.cfi_def_cfa_offset 8
 470              		.cfi_offset 3, -8
 471              		.cfi_offset 14, -4
 243:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
 472              		.loc 1 243 3 is_stmt 1 view .LVU83
 473 0002 FFF7FEFF 		bl	BSP_SD_WriteCpltCallback
 474              	.LVL43:
 244:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 475              		.loc 1 244 1 is_stmt 0 view .LVU84
 476 0006 08BD     		pop	{r3, pc}
 477              		.cfi_endproc
 478              	.LFE154:
 480              		.section	.text.BSP_SD_ReadCpltCallback,"ax",%progbits
 481              		.align	1
 482              		.weak	BSP_SD_ReadCpltCallback
ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 14


 483              		.syntax unified
 484              		.thumb
 485              		.thumb_func
 487              	BSP_SD_ReadCpltCallback:
 488              	.LFB158:
 276:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 277:../../../lib/FATFS/Target/bsp_driver_sd.c **** /**
 278:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @brief BSP Rx Transfer completed callback
 279:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @retval None
 280:../../../lib/FATFS/Target/bsp_driver_sd.c ****   * @note empty (up to the user to fill it in or to remove it if useless)
 281:../../../lib/FATFS/Target/bsp_driver_sd.c ****   */
 282:../../../lib/FATFS/Target/bsp_driver_sd.c **** __weak void BSP_SD_ReadCpltCallback(void)
 283:../../../lib/FATFS/Target/bsp_driver_sd.c **** {
 489              		.loc 1 283 1 is_stmt 1 view -0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 284:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 285:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
 494              		.loc 1 285 1 view .LVU86
 495 0000 7047     		bx	lr
 496              		.cfi_endproc
 497              	.LFE158:
 499              		.section	.text.HAL_SD_RxCpltCallback,"ax",%progbits
 500              		.align	1
 501              		.global	HAL_SD_RxCpltCallback
 502              		.syntax unified
 503              		.thumb
 504              		.thumb_func
 506              	HAL_SD_RxCpltCallback:
 507              	.LVL44:
 508              	.LFB155:
 252:../../../lib/FATFS/Target/bsp_driver_sd.c ****   BSP_SD_ReadCpltCallback();
 509              		.loc 1 252 1 view -0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 252:../../../lib/FATFS/Target/bsp_driver_sd.c ****   BSP_SD_ReadCpltCallback();
 513              		.loc 1 252 1 is_stmt 0 view .LVU88
 514 0000 08B5     		push	{r3, lr}
 515              	.LCFI13:
 516              		.cfi_def_cfa_offset 8
 517              		.cfi_offset 3, -8
 518              		.cfi_offset 14, -4
 253:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
 519              		.loc 1 253 3 is_stmt 1 view .LVU89
 520 0002 FFF7FEFF 		bl	BSP_SD_ReadCpltCallback
 521              	.LVL45:
 254:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 522              		.loc 1 254 1 is_stmt 0 view .LVU90
 523 0006 08BD     		pop	{r3, pc}
 524              		.cfi_endproc
 525              	.LFE155:
 527              		.section	.text.BSP_SD_IsDetected,"ax",%progbits
 528              		.align	1
 529              		.weak	BSP_SD_IsDetected
ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 15


 530              		.syntax unified
 531              		.thumb
 532              		.thumb_func
 534              	BSP_SD_IsDetected:
 535              	.LFB159:
 286:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE END CallBacksSection_C */
 287:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 288:../../../lib/FATFS/Target/bsp_driver_sd.c **** /**
 289:../../../lib/FATFS/Target/bsp_driver_sd.c ****  * @brief  Detects if SD card is correctly plugged in the memory slot or not.
 290:../../../lib/FATFS/Target/bsp_driver_sd.c ****  * @param  None
 291:../../../lib/FATFS/Target/bsp_driver_sd.c ****  * @retval Returns if SD is detected or not
 292:../../../lib/FATFS/Target/bsp_driver_sd.c ****  */
 293:../../../lib/FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_IsDetected(void)
 294:../../../lib/FATFS/Target/bsp_driver_sd.c **** {
 536              		.loc 1 294 1 is_stmt 1 view -0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 8
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540 0000 00B5     		push	{lr}
 541              	.LCFI14:
 542              		.cfi_def_cfa_offset 4
 543              		.cfi_offset 14, -4
 544 0002 83B0     		sub	sp, sp, #12
 545              	.LCFI15:
 546              		.cfi_def_cfa_offset 16
 295:../../../lib/FATFS/Target/bsp_driver_sd.c ****   __IO uint8_t status = SD_PRESENT;
 547              		.loc 1 295 3 view .LVU92
 548              		.loc 1 295 16 is_stmt 0 view .LVU93
 549 0004 0123     		movs	r3, #1
 550 0006 8DF80730 		strb	r3, [sp, #7]
 296:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 297:../../../lib/FATFS/Target/bsp_driver_sd.c ****   if (BSP_PlatformIsDetected() == 0x0)
 551              		.loc 1 297 3 is_stmt 1 view .LVU94
 552              		.loc 1 297 7 is_stmt 0 view .LVU95
 553 000a FFF7FEFF 		bl	BSP_PlatformIsDetected
 554              	.LVL46:
 555              		.loc 1 297 6 view .LVU96
 556 000e 10B9     		cbnz	r0, .L50
 298:../../../lib/FATFS/Target/bsp_driver_sd.c ****   {
 299:../../../lib/FATFS/Target/bsp_driver_sd.c ****     status = SD_NOT_PRESENT;
 557              		.loc 1 299 5 is_stmt 1 view .LVU97
 558              		.loc 1 299 12 is_stmt 0 view .LVU98
 559 0010 0023     		movs	r3, #0
 560 0012 8DF80730 		strb	r3, [sp, #7]
 561              	.L50:
 300:../../../lib/FATFS/Target/bsp_driver_sd.c ****   }
 301:../../../lib/FATFS/Target/bsp_driver_sd.c **** 
 302:../../../lib/FATFS/Target/bsp_driver_sd.c ****   return status;
 562              		.loc 1 302 3 is_stmt 1 view .LVU99
 563              		.loc 1 302 10 is_stmt 0 view .LVU100
 564 0016 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 303:../../../lib/FATFS/Target/bsp_driver_sd.c **** }
 565              		.loc 1 303 1 view .LVU101
 566 001a 03B0     		add	sp, sp, #12
 567              	.LCFI16:
 568              		.cfi_def_cfa_offset 4
 569              		@ sp needed
ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 16


 570 001c 5DF804FB 		ldr	pc, [sp], #4
 571              		.cfi_endproc
 572              	.LFE159:
 574              		.section	.text.BSP_SD_Init,"ax",%progbits
 575              		.align	1
 576              		.weak	BSP_SD_Init
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 581              	BSP_SD_Init:
 582              	.LFB144:
  43:../../../lib/FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 583              		.loc 1 43 1 is_stmt 1 view -0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587 0000 38B5     		push	{r3, r4, r5, lr}
 588              	.LCFI17:
 589              		.cfi_def_cfa_offset 16
 590              		.cfi_offset 3, -16
 591              		.cfi_offset 4, -12
 592              		.cfi_offset 5, -8
 593              		.cfi_offset 14, -4
  44:../../../lib/FATFS/Target/bsp_driver_sd.c ****   /* Check if the SD card is plugged in the slot */
 594              		.loc 1 44 3 view .LVU103
 595              	.LVL47:
  46:../../../lib/FATFS/Target/bsp_driver_sd.c ****   {
 596              		.loc 1 46 3 view .LVU104
  46:../../../lib/FATFS/Target/bsp_driver_sd.c ****   {
 597              		.loc 1 46 7 is_stmt 0 view .LVU105
 598 0002 FFF7FEFF 		bl	BSP_SD_IsDetected
 599              	.LVL48:
  46:../../../lib/FATFS/Target/bsp_driver_sd.c ****   {
 600              		.loc 1 46 6 view .LVU106
 601 0006 0128     		cmp	r0, #1
 602 0008 02D0     		beq	.L57
  48:../../../lib/FATFS/Target/bsp_driver_sd.c ****   }
 603              		.loc 1 48 12 view .LVU107
 604 000a 0225     		movs	r5, #2
 605              	.LVL49:
 606              	.L53:
  63:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN AfterInitSection */
 607              		.loc 1 63 1 view .LVU108
 608 000c 2846     		mov	r0, r5
 609 000e 38BD     		pop	{r3, r4, r5, pc}
 610              	.LVL50:
 611              	.L57:
  63:../../../lib/FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN AfterInitSection */
 612              		.loc 1 63 1 view .LVU109
 613 0010 0446     		mov	r4, r0
  51:../../../lib/FATFS/Target/bsp_driver_sd.c ****   /* Configure SD Bus width (4 bits mode selected) */
 614              		.loc 1 51 3 is_stmt 1 view .LVU110
  51:../../../lib/FATFS/Target/bsp_driver_sd.c ****   /* Configure SD Bus width (4 bits mode selected) */
 615              		.loc 1 51 14 is_stmt 0 view .LVU111
 616 0012 0748     		ldr	r0, .L58
 617 0014 FFF7FEFF 		bl	HAL_SD_Init
 618              	.LVL51:
ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 17


  53:../../../lib/FATFS/Target/bsp_driver_sd.c ****   {
 619              		.loc 1 53 3 is_stmt 1 view .LVU112
  53:../../../lib/FATFS/Target/bsp_driver_sd.c ****   {
 620              		.loc 1 53 6 is_stmt 0 view .LVU113
 621 0018 0546     		mov	r5, r0
 622 001a 0028     		cmp	r0, #0
 623 001c F6D1     		bne	.L53
  56:../../../lib/FATFS/Target/bsp_driver_sd.c ****     {
 624              		.loc 1 56 5 is_stmt 1 view .LVU114
  56:../../../lib/FATFS/Target/bsp_driver_sd.c ****     {
 625              		.loc 1 56 9 is_stmt 0 view .LVU115
 626 001e 4FF48041 		mov	r1, #16384
 627 0022 0348     		ldr	r0, .L58
 628              	.LVL52:
  56:../../../lib/FATFS/Target/bsp_driver_sd.c ****     {
 629              		.loc 1 56 9 view .LVU116
 630 0024 FFF7FEFF 		bl	HAL_SD_ConfigWideBusOperation
 631              	.LVL53:
  56:../../../lib/FATFS/Target/bsp_driver_sd.c ****     {
 632              		.loc 1 56 8 view .LVU117
 633 0028 0028     		cmp	r0, #0
 634 002a EFD0     		beq	.L53
  58:../../../lib/FATFS/Target/bsp_driver_sd.c ****     }
 635              		.loc 1 58 16 view .LVU118
 636 002c 2546     		mov	r5, r4
 637 002e EDE7     		b	.L53
 638              	.L59:
 639              		.align	2
 640              	.L58:
 641 0030 00000000 		.word	hsd1
 642              		.cfi_endproc
 643              	.LFE144:
 645              		.text
 646              	.Letext0:
 647              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 648              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 649              		.file 4 "../../../lib/Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h750xx.h"
 650              		.file 5 "../../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 651              		.file 6 "../../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_sdmmc.h"
 652              		.file 7 "../../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_sd.h"
 653              		.file 8 "../../../lib/FATFS/Target/fatfs_platform.h"
ARM GAS  C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 bsp_driver_sd.c
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:19     .text.BSP_SD_ITConfig:00000000 $t
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:25     .text.BSP_SD_ITConfig:00000000 BSP_SD_ITConfig
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:41     .text.BSP_SD_ReadBlocks:00000000 $t
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:47     .text.BSP_SD_ReadBlocks:00000000 BSP_SD_ReadBlocks
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:97     .text.BSP_SD_ReadBlocks:0000001c $d
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:102    .text.BSP_SD_WriteBlocks:00000000 $t
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:108    .text.BSP_SD_WriteBlocks:00000000 BSP_SD_WriteBlocks
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:158    .text.BSP_SD_WriteBlocks:0000001c $d
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:163    .text.BSP_SD_ReadBlocks_DMA:00000000 $t
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:169    .text.BSP_SD_ReadBlocks_DMA:00000000 BSP_SD_ReadBlocks_DMA
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:210    .text.BSP_SD_ReadBlocks_DMA:00000014 $d
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:215    .text.BSP_SD_WriteBlocks_DMA:00000000 $t
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:221    .text.BSP_SD_WriteBlocks_DMA:00000000 BSP_SD_WriteBlocks_DMA
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:262    .text.BSP_SD_WriteBlocks_DMA:00000014 $d
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:267    .text.BSP_SD_Erase:00000000 $t
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:273    .text.BSP_SD_Erase:00000000 BSP_SD_Erase
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:311    .text.BSP_SD_Erase:00000014 $d
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:316    .text.BSP_SD_GetCardState:00000000 $t
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:322    .text.BSP_SD_GetCardState:00000000 BSP_SD_GetCardState
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:346    .text.BSP_SD_GetCardState:00000010 $d
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:351    .text.BSP_SD_GetCardInfo:00000000 $t
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:357    .text.BSP_SD_GetCardInfo:00000000 BSP_SD_GetCardInfo
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:382    .text.BSP_SD_GetCardInfo:0000000c $d
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:387    .text.BSP_SD_AbortCallback:00000000 $t
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:393    .text.BSP_SD_AbortCallback:00000000 BSP_SD_AbortCallback
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:406    .text.HAL_SD_AbortCallback:00000000 $t
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:412    .text.HAL_SD_AbortCallback:00000000 HAL_SD_AbortCallback
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:434    .text.BSP_SD_WriteCpltCallback:00000000 $t
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:440    .text.BSP_SD_WriteCpltCallback:00000000 BSP_SD_WriteCpltCallback
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:453    .text.HAL_SD_TxCpltCallback:00000000 $t
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:459    .text.HAL_SD_TxCpltCallback:00000000 HAL_SD_TxCpltCallback
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:481    .text.BSP_SD_ReadCpltCallback:00000000 $t
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:487    .text.BSP_SD_ReadCpltCallback:00000000 BSP_SD_ReadCpltCallback
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:500    .text.HAL_SD_RxCpltCallback:00000000 $t
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:506    .text.HAL_SD_RxCpltCallback:00000000 HAL_SD_RxCpltCallback
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:528    .text.BSP_SD_IsDetected:00000000 $t
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:534    .text.BSP_SD_IsDetected:00000000 BSP_SD_IsDetected
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:575    .text.BSP_SD_Init:00000000 $t
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:581    .text.BSP_SD_Init:00000000 BSP_SD_Init
C:\Users\tnguy\AppData\Local\Temp\ccVbbgj0.s:641    .text.BSP_SD_Init:00000030 $d

UNDEFINED SYMBOLS
HAL_SD_ReadBlocks
hsd1
HAL_SD_WriteBlocks
HAL_SD_ReadBlocks_DMA
HAL_SD_WriteBlocks_DMA
HAL_SD_Erase
HAL_SD_GetCardState
HAL_SD_GetCardInfo
BSP_PlatformIsDetected
HAL_SD_Init
HAL_SD_ConfigWideBusOperation
